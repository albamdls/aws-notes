{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u2601\ufe0f AWS Cloud Practitioner Study Notes \ud83c\udfd7\ufe0f Introduction Welcome to my AWS Cloud Practitioner Study Hub ! \ud83d\ude80 This site gathers all my notes, insights, and visuals from the AWS Certified Cloud Practitioner (CLF-C02) certification. Each section is designed to be clear, concise, and visually structured , helping both myself and others quickly grasp the key concepts behind AWS cloud fundamentals. Whether you\u2019re just getting started with cloud computing or preparing for the AWS exam, this documentation is meant to serve as a practical and organized resource for learning and revision. \ud83c\udfaf Project Goals \ud83d\udcda Create a centralized web repository for all AWS learning materials. \ud83e\udde0 Build an easy-to-follow guide for preparing the AWS Cloud Practitioner exam . \ud83d\udcbb Explore and apply documentation tools like MkDocs + Material for MkDocs . \ud83c\udf10 Make the content public and accessible for others learning AWS, hosted via GitHub Pages . \ud83d\udd04 Keep the notes evolving \u2014 as AWS updates, so will this site. \ud83d\ude80 How to Navigate Use the left sidebar to access each AWS module. Click on a module title to reveal its sections . Use the search bar \ud83d\udd0d to quickly find services, terms, or topics. \u2601\ufe0f AWS Cloud Practitioner Modules Module Topic Link 1\ufe0f\u20e3 Cloud Concepts Overview \ud83d\udcd8 Open 2\ufe0f\u20e3 Cloud Economics and Billing \ud83d\udcd7 Open 3\ufe0f\u20e3 AWS Global Infrastructure Overview \ud83c\udf0e Open 4\ufe0f\u20e3 AWS Cloud Security \ud83d\udd12 Open 5\ufe0f\u20e3 Networking and Content Delivery \ud83c\udf10 Open 6\ufe0f\u20e3 Compute \u2699\ufe0f Open 7\ufe0f\u20e3 Storage \ud83d\udcbe Open 8\ufe0f\u20e3 Databases \ud83e\udde9 Open 9\ufe0f\u20e3 Cloud Architecture \ud83c\udfdb\ufe0f Open \ud83d\udd1f Auto Scaling and Monitoring \u2699\ufe0f Open \ud83e\udde9 These modules cover AWS\u2019s core cloud fundamentals \u2014 from pricing models and security to networking, storage, and architecture. \ud83d\udc69\u200d\ud83d\udcbb About Me Hi! I\u2019m Alba , creator of @jalando.code \ud83d\udca1 I\u2019m passionate about tech, web development, data, and AI \u2014 always exploring new ways to learn and share knowledge through clean, well-structured documentation. This project reflects my ongoing journey through the AWS ecosystem , combining cloud computing and data to better understand how they shape the future of technology. \ud83e\udde9 Technologies Used \ud83d\udc0d Python \u2192 to build and serve MkDocs. \ud83e\uddf1 MkDocs \u2192 for static site generation. \ud83c\udfa8 Material for MkDocs \u2192 theme with built-in dark/light mode. \ud83d\udcbe GitHub Pages \u2192 hosting and deployment. \u2728 A growing technical knowledge base \u2014 documenting my AWS learning path one module at a time.","title":"\ud83c\udfe0 Home"},{"location":"#aws-cloud-practitioner-study-notes","text":"","title":"\u2601\ufe0f AWS Cloud Practitioner Study Notes"},{"location":"#introduction","text":"Welcome to my AWS Cloud Practitioner Study Hub ! \ud83d\ude80 This site gathers all my notes, insights, and visuals from the AWS Certified Cloud Practitioner (CLF-C02) certification. Each section is designed to be clear, concise, and visually structured , helping both myself and others quickly grasp the key concepts behind AWS cloud fundamentals. Whether you\u2019re just getting started with cloud computing or preparing for the AWS exam, this documentation is meant to serve as a practical and organized resource for learning and revision.","title":"\ud83c\udfd7\ufe0f Introduction"},{"location":"#project-goals","text":"\ud83d\udcda Create a centralized web repository for all AWS learning materials. \ud83e\udde0 Build an easy-to-follow guide for preparing the AWS Cloud Practitioner exam . \ud83d\udcbb Explore and apply documentation tools like MkDocs + Material for MkDocs . \ud83c\udf10 Make the content public and accessible for others learning AWS, hosted via GitHub Pages . \ud83d\udd04 Keep the notes evolving \u2014 as AWS updates, so will this site.","title":"\ud83c\udfaf Project Goals"},{"location":"#how-to-navigate","text":"Use the left sidebar to access each AWS module. Click on a module title to reveal its sections . Use the search bar \ud83d\udd0d to quickly find services, terms, or topics.","title":"\ud83d\ude80 How to Navigate"},{"location":"#aws-cloud-practitioner-modules","text":"Module Topic Link 1\ufe0f\u20e3 Cloud Concepts Overview \ud83d\udcd8 Open 2\ufe0f\u20e3 Cloud Economics and Billing \ud83d\udcd7 Open 3\ufe0f\u20e3 AWS Global Infrastructure Overview \ud83c\udf0e Open 4\ufe0f\u20e3 AWS Cloud Security \ud83d\udd12 Open 5\ufe0f\u20e3 Networking and Content Delivery \ud83c\udf10 Open 6\ufe0f\u20e3 Compute \u2699\ufe0f Open 7\ufe0f\u20e3 Storage \ud83d\udcbe Open 8\ufe0f\u20e3 Databases \ud83e\udde9 Open 9\ufe0f\u20e3 Cloud Architecture \ud83c\udfdb\ufe0f Open \ud83d\udd1f Auto Scaling and Monitoring \u2699\ufe0f Open \ud83e\udde9 These modules cover AWS\u2019s core cloud fundamentals \u2014 from pricing models and security to networking, storage, and architecture.","title":"\u2601\ufe0f AWS Cloud Practitioner Modules"},{"location":"#about-me","text":"Hi! I\u2019m Alba , creator of @jalando.code \ud83d\udca1 I\u2019m passionate about tech, web development, data, and AI \u2014 always exploring new ways to learn and share knowledge through clean, well-structured documentation. This project reflects my ongoing journey through the AWS ecosystem , combining cloud computing and data to better understand how they shape the future of technology.","title":"\ud83d\udc69\u200d\ud83d\udcbb About Me"},{"location":"#technologies-used","text":"\ud83d\udc0d Python \u2192 to build and serve MkDocs. \ud83e\uddf1 MkDocs \u2192 for static site generation. \ud83c\udfa8 Material for MkDocs \u2192 theme with built-in dark/light mode. \ud83d\udcbe GitHub Pages \u2192 hosting and deployment. \u2728 A growing technical knowledge base \u2014 documenting my AWS learning path one module at a time.","title":"\ud83e\udde9 Technologies Used"},{"location":"cloud-practitioner/module-1/m1_sec1/","text":"\u2601\ufe0f Module 1 - Cloud Concepts Overview 1\ufe0f\u20e3 Section 1: What is Cloud Computing? \ud83d\udfe0 Definition Cloud computing is the on-demand delivery of compute power, databases, storage, applications, and other IT resources via the internet with pay-as-you-go pricing . \ud83d\udca1 These resources run on servers located in large data centers around the world. When you use a provider like AWS , that provider owns and manages the physical infrastructure. \ud83d\udcda Learn more: What is Cloud Computing? \ud83d\udfe0 Infrastructure as Software Cloud computing allows you to stop thinking of infrastructure as hardware and instead treat it as software . \ud83d\udd39 Traditional (On-Premises) Model Physical hardware requires space, staff, physical security, planning, and capital expenditure (CapEx) . Long procurement cycles for buying and maintaining hardware. Must guess future capacity (risk of over- or under-provisioning). Example: setting up a new website requires purchasing and installing servers manually. \ud83d\udd39 Cloud Computing Model Infrastructure becomes software-driven and flexible . Provision or terminate resources on demand . Pay only for what you use . Scale elastically up or down automatically. Reduce undifferentiated heavy lifting like maintenance and capacity planning. Enables rapid innovation and low upfront costs . \ud83d\udfe0 Cloud Service Models Each service model offers a different level of control and management responsibility: Model Description Example AWS Services IaaS (Infrastructure as a Service) Basic building blocks of cloud IT: networking, compute, and storage. Offers the highest flexibility and control . Amazon EC2, Amazon S3 PaaS (Platform as a Service) Removes the need to manage underlying infrastructure. Focus on application deployment and management . AWS Elastic Beanstalk, AWS Lambda, Amazon RDS SaaS (Software as a Service) Complete software product managed by the provider. You only use the application . Amazon Chime, AWS WorkMail, AWS Trusted Advisor \ud83d\udcca Control Level: \u27a1\ufe0f IaaS = More control \u27a1\ufe0f SaaS = Less control \ud83d\udfe0 Cloud Deployment Models Model Description Characteristics Cloud Fully deployed in the cloud. Built or migrated apps run entirely on AWS. Scalable, flexible, cost-effective Hybrid Combines on-premises infrastructure with cloud resources. Connects local systems with AWS On-Premises / Private Cloud Resources managed locally (legacy IT). Dedicated hardware, less flexible \ud83d\udfe0 AWS vs Traditional IT Area Traditional IT AWS Equivalent Security Firewalls, ACLs, admins Security Groups, Network ACLs, IAM Networking Routers, switches Amazon VPC, Elastic Load Balancing Compute On-prem servers Amazon EC2, AMIs Storage & Databases DAS, SAN, NAS, RDBMS Amazon EBS, EFS, S3, RDS \ud83d\udca1 With AWS, you can do almost everything you would in a traditional data center , but faster and more efficiently. \ud83d\udfe0 Key Takeaways \u2705 Cloud computing = On-demand IT resources via the internet with pay-as-you-go pricing. \u2705 Think of your infrastructure as software , not hardware. \u2705 Three service models : IaaS, PaaS, SaaS. \u2705 Three deployment models : Cloud, Hybrid, On-Premises. \u2705 Almost everything done in traditional IT can also be implemented in the AWS Cloud.","title":"\u25fd\ufe0f Section 1 - What is Cloud Computing?"},{"location":"cloud-practitioner/module-1/m1_sec1/#module-1-cloud-concepts-overview","text":"","title":"\u2601\ufe0f Module 1 - Cloud Concepts Overview"},{"location":"cloud-practitioner/module-1/m1_sec1/#1-section-1-what-is-cloud-computing","text":"","title":"1\ufe0f\u20e3 Section 1: What is Cloud Computing?"},{"location":"cloud-practitioner/module-1/m1_sec1/#definition","text":"Cloud computing is the on-demand delivery of compute power, databases, storage, applications, and other IT resources via the internet with pay-as-you-go pricing . \ud83d\udca1 These resources run on servers located in large data centers around the world. When you use a provider like AWS , that provider owns and manages the physical infrastructure. \ud83d\udcda Learn more: What is Cloud Computing?","title":"\ud83d\udfe0 Definition"},{"location":"cloud-practitioner/module-1/m1_sec1/#infrastructure-as-software","text":"Cloud computing allows you to stop thinking of infrastructure as hardware and instead treat it as software .","title":"\ud83d\udfe0 Infrastructure as Software"},{"location":"cloud-practitioner/module-1/m1_sec1/#traditional-on-premises-model","text":"Physical hardware requires space, staff, physical security, planning, and capital expenditure (CapEx) . Long procurement cycles for buying and maintaining hardware. Must guess future capacity (risk of over- or under-provisioning). Example: setting up a new website requires purchasing and installing servers manually.","title":"\ud83d\udd39 Traditional (On-Premises) Model"},{"location":"cloud-practitioner/module-1/m1_sec1/#cloud-computing-model","text":"Infrastructure becomes software-driven and flexible . Provision or terminate resources on demand . Pay only for what you use . Scale elastically up or down automatically. Reduce undifferentiated heavy lifting like maintenance and capacity planning. Enables rapid innovation and low upfront costs .","title":"\ud83d\udd39 Cloud Computing Model"},{"location":"cloud-practitioner/module-1/m1_sec1/#cloud-service-models","text":"Each service model offers a different level of control and management responsibility: Model Description Example AWS Services IaaS (Infrastructure as a Service) Basic building blocks of cloud IT: networking, compute, and storage. Offers the highest flexibility and control . Amazon EC2, Amazon S3 PaaS (Platform as a Service) Removes the need to manage underlying infrastructure. Focus on application deployment and management . AWS Elastic Beanstalk, AWS Lambda, Amazon RDS SaaS (Software as a Service) Complete software product managed by the provider. You only use the application . Amazon Chime, AWS WorkMail, AWS Trusted Advisor \ud83d\udcca Control Level: \u27a1\ufe0f IaaS = More control \u27a1\ufe0f SaaS = Less control","title":"\ud83d\udfe0 Cloud Service Models"},{"location":"cloud-practitioner/module-1/m1_sec1/#cloud-deployment-models","text":"Model Description Characteristics Cloud Fully deployed in the cloud. Built or migrated apps run entirely on AWS. Scalable, flexible, cost-effective Hybrid Combines on-premises infrastructure with cloud resources. Connects local systems with AWS On-Premises / Private Cloud Resources managed locally (legacy IT). Dedicated hardware, less flexible","title":"\ud83d\udfe0 Cloud Deployment Models"},{"location":"cloud-practitioner/module-1/m1_sec1/#aws-vs-traditional-it","text":"Area Traditional IT AWS Equivalent Security Firewalls, ACLs, admins Security Groups, Network ACLs, IAM Networking Routers, switches Amazon VPC, Elastic Load Balancing Compute On-prem servers Amazon EC2, AMIs Storage & Databases DAS, SAN, NAS, RDBMS Amazon EBS, EFS, S3, RDS \ud83d\udca1 With AWS, you can do almost everything you would in a traditional data center , but faster and more efficiently.","title":"\ud83d\udfe0 AWS vs Traditional IT"},{"location":"cloud-practitioner/module-1/m1_sec1/#key-takeaways","text":"\u2705 Cloud computing = On-demand IT resources via the internet with pay-as-you-go pricing. \u2705 Think of your infrastructure as software , not hardware. \u2705 Three service models : IaaS, PaaS, SaaS. \u2705 Three deployment models : Cloud, Hybrid, On-Premises. \u2705 Almost everything done in traditional IT can also be implemented in the AWS Cloud.","title":"\ud83d\udfe0 Key Takeaways"},{"location":"cloud-practitioner/module-1/m1_sec2/","text":"\u2601\ufe0f Module 1 - Cloud Concepts Overview 2\ufe0f\u20e3 Section 2: Advantages of Cloud Computing Cloud computing offers several key advantages that differentiate it from traditional on-premises models. Let\u2019s review the six main benefits \ud83d\udc47 \ud83d\udfe0 1. Trade Capital Expense for Variable Expense \ud83d\udcb0 Capital expenses (CapEx) are large upfront costs used to acquire and maintain physical assets like servers or data centers. In the traditional model, you must pay for all infrastructure whether you use it or not . In contrast, cloud computing uses a variable expense model , meaning you: - \ud83d\udcb8 Pay only for what you use - \u2699\ufe0f Scale resources up or down as needed - \ud83d\udd52 Provision resources in minutes , not weeks - \ud83d\udd27 Reduce maintenance and focus on business goals \ud83d\udfe0 2. Benefit from Massive Economies of Scale \ud83d\udcc9 AWS aggregates usage from hundreds of thousands of customers , achieving economies of scale that reduce overall costs. These savings are passed on to customers through lower pay-as-you-go prices . \u2705 Result: Lower costs than you could achieve running your own infrastructure. \ud83d\udfe0 3. Stop Guessing Capacity \ud83d\udcca Traditionally, you had to predict future infrastructure needs \u2014 risking overprovisioning (waste) or underprovisioning (shortages) . With AWS, you can: - \u26a1 Scale resources instantly as demand changes - \ud83d\udcc8 Add or remove capacity within minutes - \ud83d\udca1 Avoid paying for idle resources \u2705 Result: Right-sized infrastructure every time. \ud83d\udfe0 4. Increase Speed and Agility \ud83d\ude80 In a cloud environment, new IT resources are only a click away . You can deploy infrastructure and applications in minutes instead of weeks . Benefits: - \ud83e\udde0 Faster experimentation - \ud83d\udd50 Reduced time-to-market - \ud83d\udcbc Increased business agility and innovation \ud83d\udfe0 5. Stop Spending Money on Running and Maintaining Data Centers \ud83c\udfd7\ufe0f Cloud computing eliminates the need to manage physical data centers. Instead of spending money on hardware, utilities, maintenance, and staffing , you can: - \ud83d\udd04 Focus on core business projects - \ud83d\udca1 Allocate resources to innovation and customers , not infrastructure \u2705 AWS handles the undifferentiated heavy lifting for you. \ud83d\udfe0 6. Go Global in Minutes \ud83c\udf0e With AWS, you can deploy applications worldwide in just a few clicks. Benefits: - \u26a1 Lower latency for global users - \ud83d\udcac Better customer experience - \ud83d\udcb2 Minimal additional cost to reach new regions \ud83d\udfe2 Key Takeaways \u2705 Six Advantages of Cloud Computing: 1. Trade capital expense for variable expense 2. Benefit from massive economies of scale 3. Stop guessing capacity 4. Increase speed and agility 5. Stop spending money on running and maintaining data centers 6. Go global in minutes","title":"\u25fd Section 2 - Advantages of Cloud Computing"},{"location":"cloud-practitioner/module-1/m1_sec2/#module-1-cloud-concepts-overview","text":"","title":"\u2601\ufe0f Module 1 - Cloud Concepts Overview"},{"location":"cloud-practitioner/module-1/m1_sec2/#2-section-2-advantages-of-cloud-computing","text":"Cloud computing offers several key advantages that differentiate it from traditional on-premises models. Let\u2019s review the six main benefits \ud83d\udc47","title":"2\ufe0f\u20e3 Section 2: Advantages of Cloud Computing"},{"location":"cloud-practitioner/module-1/m1_sec2/#1-trade-capital-expense-for-variable-expense","text":"\ud83d\udcb0 Capital expenses (CapEx) are large upfront costs used to acquire and maintain physical assets like servers or data centers. In the traditional model, you must pay for all infrastructure whether you use it or not . In contrast, cloud computing uses a variable expense model , meaning you: - \ud83d\udcb8 Pay only for what you use - \u2699\ufe0f Scale resources up or down as needed - \ud83d\udd52 Provision resources in minutes , not weeks - \ud83d\udd27 Reduce maintenance and focus on business goals","title":"\ud83d\udfe0 1. Trade Capital Expense for Variable Expense"},{"location":"cloud-practitioner/module-1/m1_sec2/#2-benefit-from-massive-economies-of-scale","text":"\ud83d\udcc9 AWS aggregates usage from hundreds of thousands of customers , achieving economies of scale that reduce overall costs. These savings are passed on to customers through lower pay-as-you-go prices . \u2705 Result: Lower costs than you could achieve running your own infrastructure.","title":"\ud83d\udfe0 2. Benefit from Massive Economies of Scale"},{"location":"cloud-practitioner/module-1/m1_sec2/#3-stop-guessing-capacity","text":"\ud83d\udcca Traditionally, you had to predict future infrastructure needs \u2014 risking overprovisioning (waste) or underprovisioning (shortages) . With AWS, you can: - \u26a1 Scale resources instantly as demand changes - \ud83d\udcc8 Add or remove capacity within minutes - \ud83d\udca1 Avoid paying for idle resources \u2705 Result: Right-sized infrastructure every time.","title":"\ud83d\udfe0 3. Stop Guessing Capacity"},{"location":"cloud-practitioner/module-1/m1_sec2/#4-increase-speed-and-agility","text":"\ud83d\ude80 In a cloud environment, new IT resources are only a click away . You can deploy infrastructure and applications in minutes instead of weeks . Benefits: - \ud83e\udde0 Faster experimentation - \ud83d\udd50 Reduced time-to-market - \ud83d\udcbc Increased business agility and innovation","title":"\ud83d\udfe0 4. Increase Speed and Agility"},{"location":"cloud-practitioner/module-1/m1_sec2/#5-stop-spending-money-on-running-and-maintaining-data-centers","text":"\ud83c\udfd7\ufe0f Cloud computing eliminates the need to manage physical data centers. Instead of spending money on hardware, utilities, maintenance, and staffing , you can: - \ud83d\udd04 Focus on core business projects - \ud83d\udca1 Allocate resources to innovation and customers , not infrastructure \u2705 AWS handles the undifferentiated heavy lifting for you.","title":"\ud83d\udfe0 5. Stop Spending Money on Running and Maintaining Data Centers"},{"location":"cloud-practitioner/module-1/m1_sec2/#6-go-global-in-minutes","text":"\ud83c\udf0e With AWS, you can deploy applications worldwide in just a few clicks. Benefits: - \u26a1 Lower latency for global users - \ud83d\udcac Better customer experience - \ud83d\udcb2 Minimal additional cost to reach new regions","title":"\ud83d\udfe0 6. Go Global in Minutes"},{"location":"cloud-practitioner/module-1/m1_sec2/#key-takeaways","text":"\u2705 Six Advantages of Cloud Computing: 1. Trade capital expense for variable expense 2. Benefit from massive economies of scale 3. Stop guessing capacity 4. Increase speed and agility 5. Stop spending money on running and maintaining data centers 6. Go global in minutes","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-1/m1_sec3/","text":"\u2601\ufe0f Module 1 - Cloud Concepts Overview 3\ufe0f\u20e3 Section 3: Introduction to Amazon Web Services (AWS) \ud83d\udfe0 What are Web Services? \ud83c\udf10 A web service is any piece of software that: - Is available over the internet or a private network (intranet). - Uses a standardized format (such as XML or JSON ) for API requests and responses. - Is self-describing via an interface definition file. - Is discoverable and not tied to any specific programming language or OS . \ud83d\udcac Example: A client sends a request message via an API \u2192 the web service processes it \u2192 returns a response message through the internet. \ud83d\udfe0 What is AWS? Amazon Web Services (AWS) is a secure cloud platform offering a broad set of global cloud-based products that provide on-demand access to computing, storage, databases, networking, and more. \ud83d\ude80 Key Features: - Access compute, storage, network, and database resources instantly. - Provision and launch resources in minutes , not days. - Scale up or down automatically to match usage patterns. - Pay only for what you use \u2014 billing becomes an operational expense (OpEx) , not capital expense (CapEx). - Services integrate seamlessly like building blocks , allowing you to build flexible, scalable, and secure solutions. \u2705 AWS services are designed to support virtually any type of application or workload . \ud83d\udfe0 Categories of AWS Services AWS services are organized into categories , each containing multiple tools and features. \ud83d\udcda Examples of Service Categories: - Compute - Storage - Database - Networking & Content Delivery - Security, Identity & Compliance - Management & Governance - Analytics - Machine Learning - Developer Tools - Migration & Transfer - Business Applications - Cost Management - Internet of Things (IoT) - End User Computing - Game Tech - Media Services - AR & VR - Robotics - Satellite - Blockchain \ud83d\udca1 You can mix and match services from different categories to build your solution. \ud83d\udfe0 Example: Building a Simple Database Application Let\u2019s say you\u2019re building a database application \ud83d\udc47 Amazon EC2 (Compute): Receives incoming data. Amazon S3 (Storage): Stores batched data as objects per customer. Amazon DynamoDB (Database): Indexes and queries customer data. Amazon VPC (Networking): Hosts all resources in a secure, isolated environment. \ud83e\udde9 Result: Multiple AWS services from different categories can be combined to create a complete, scalable solution. \ud83d\udfe0 Choosing a Service Your choice depends on your business goals and technical requirements . \u2699\ufe0f Compute Services Examples: Service Use Case Amazon EC2 Full control over compute resources AWS Lambda Run code without managing servers (serverless) AWS Elastic Beanstalk Automatically deploy and scale web apps Amazon Lightsail Simple cloud platform for lightweight web apps AWS Batch Run large-scale batch workloads AWS Outposts Run AWS infrastructure on-premises Amazon ECS Run and manage Docker containers Amazon EKS Managed Kubernetes service AWS Fargate Run containers without managing servers VMware Cloud on AWS Extend/migrate on-prem VMware environments to AWS \ud83d\udd39 Each service provides different levels of control, flexibility, and automation. \ud83d\udfe0 Services Covered in This Course Below are the main AWS services that you will encounter throughout this course: \ud83d\udcbb Compute Amazon EC2 AWS Lambda AWS Elastic Beanstalk Amazon EC2 Auto Scaling Amazon ECS Amazon EKS Amazon ECR AWS Fargate \ud83d\udd10 Security, Identity & Compliance AWS IAM Amazon Cognito AWS Shield AWS Artifact AWS KMS \ud83d\udcbe Storage Amazon S3 Amazon S3 Glacier Amazon EFS Amazon EBS \ud83d\uddc4\ufe0f Database Amazon RDS Amazon DynamoDB Amazon Redshift Amazon Aurora \ud83c\udf10 Networking & Content Delivery Amazon VPC Amazon Route 53 Amazon CloudFront Elastic Load Balancing \ud83e\udde0 Management & Governance AWS Trusted Advisor Amazon CloudWatch AWS CloudTrail AWS Well-Architected Tool AWS Auto Scaling AWS CLI AWS Config AWS Management Console AWS Organizations \ud83d\udcb0 Cost Management AWS Cost & Usage Report AWS Budgets AWS Cost Explorer \ud83d\udfe0 Three Ways to Interact with AWS There are three main ways to access and manage AWS resources: \ud83d\udda5\ufe0f AWS Management Console Web-based graphical interface . Ideal for beginners and visual management. \ud83d\udcbb AWS Command Line Interface (CLI) Execute commands or scripts from Linux, macOS, or Windows . Great for automation and advanced users. \ud83e\udde9 AWS Software Development Kits (SDKs) Integrate AWS directly in code using Java, Python, JavaScript, .NET , and more. Enables programmatic deployment and monitoring of complex systems. All three are built on AWS\u2019s common REST-like API foundation. \ud83d\udcd8 Learn more: AWS Tools \ud83d\udfe2 Key Takeaways \u2705 AWS is a secure, global cloud platform with many interrelated services. \u2705 Each service category offers multiple tools to build and scale applications. \u2705 Choose services based on business and technical requirements . \u2705 You can interact with AWS through: - Management Console - Command Line Interface (CLI) - Software Development Kits (SDKs)","title":"\u25fd\ufe0f Section 3 - Introduction to Amazon Web Services (AWS)"},{"location":"cloud-practitioner/module-1/m1_sec3/#module-1-cloud-concepts-overview","text":"","title":"\u2601\ufe0f Module 1 - Cloud Concepts Overview"},{"location":"cloud-practitioner/module-1/m1_sec3/#3-section-3-introduction-to-amazon-web-services-aws","text":"","title":"3\ufe0f\u20e3 Section 3: Introduction to Amazon Web Services (AWS)"},{"location":"cloud-practitioner/module-1/m1_sec3/#what-are-web-services","text":"\ud83c\udf10 A web service is any piece of software that: - Is available over the internet or a private network (intranet). - Uses a standardized format (such as XML or JSON ) for API requests and responses. - Is self-describing via an interface definition file. - Is discoverable and not tied to any specific programming language or OS . \ud83d\udcac Example: A client sends a request message via an API \u2192 the web service processes it \u2192 returns a response message through the internet.","title":"\ud83d\udfe0 What are Web Services?"},{"location":"cloud-practitioner/module-1/m1_sec3/#what-is-aws","text":"Amazon Web Services (AWS) is a secure cloud platform offering a broad set of global cloud-based products that provide on-demand access to computing, storage, databases, networking, and more. \ud83d\ude80 Key Features: - Access compute, storage, network, and database resources instantly. - Provision and launch resources in minutes , not days. - Scale up or down automatically to match usage patterns. - Pay only for what you use \u2014 billing becomes an operational expense (OpEx) , not capital expense (CapEx). - Services integrate seamlessly like building blocks , allowing you to build flexible, scalable, and secure solutions. \u2705 AWS services are designed to support virtually any type of application or workload .","title":"\ud83d\udfe0 What is AWS?"},{"location":"cloud-practitioner/module-1/m1_sec3/#categories-of-aws-services","text":"AWS services are organized into categories , each containing multiple tools and features. \ud83d\udcda Examples of Service Categories: - Compute - Storage - Database - Networking & Content Delivery - Security, Identity & Compliance - Management & Governance - Analytics - Machine Learning - Developer Tools - Migration & Transfer - Business Applications - Cost Management - Internet of Things (IoT) - End User Computing - Game Tech - Media Services - AR & VR - Robotics - Satellite - Blockchain \ud83d\udca1 You can mix and match services from different categories to build your solution.","title":"\ud83d\udfe0 Categories of AWS Services"},{"location":"cloud-practitioner/module-1/m1_sec3/#example-building-a-simple-database-application","text":"Let\u2019s say you\u2019re building a database application \ud83d\udc47 Amazon EC2 (Compute): Receives incoming data. Amazon S3 (Storage): Stores batched data as objects per customer. Amazon DynamoDB (Database): Indexes and queries customer data. Amazon VPC (Networking): Hosts all resources in a secure, isolated environment. \ud83e\udde9 Result: Multiple AWS services from different categories can be combined to create a complete, scalable solution.","title":"\ud83d\udfe0 Example: Building a Simple Database Application"},{"location":"cloud-practitioner/module-1/m1_sec3/#choosing-a-service","text":"Your choice depends on your business goals and technical requirements .","title":"\ud83d\udfe0 Choosing a Service"},{"location":"cloud-practitioner/module-1/m1_sec3/#compute-services-examples","text":"Service Use Case Amazon EC2 Full control over compute resources AWS Lambda Run code without managing servers (serverless) AWS Elastic Beanstalk Automatically deploy and scale web apps Amazon Lightsail Simple cloud platform for lightweight web apps AWS Batch Run large-scale batch workloads AWS Outposts Run AWS infrastructure on-premises Amazon ECS Run and manage Docker containers Amazon EKS Managed Kubernetes service AWS Fargate Run containers without managing servers VMware Cloud on AWS Extend/migrate on-prem VMware environments to AWS \ud83d\udd39 Each service provides different levels of control, flexibility, and automation.","title":"\u2699\ufe0f Compute Services Examples:"},{"location":"cloud-practitioner/module-1/m1_sec3/#services-covered-in-this-course","text":"Below are the main AWS services that you will encounter throughout this course:","title":"\ud83d\udfe0 Services Covered in This Course"},{"location":"cloud-practitioner/module-1/m1_sec3/#compute","text":"Amazon EC2 AWS Lambda AWS Elastic Beanstalk Amazon EC2 Auto Scaling Amazon ECS Amazon EKS Amazon ECR AWS Fargate","title":"\ud83d\udcbb Compute"},{"location":"cloud-practitioner/module-1/m1_sec3/#security-identity-compliance","text":"AWS IAM Amazon Cognito AWS Shield AWS Artifact AWS KMS","title":"\ud83d\udd10 Security, Identity &amp; Compliance"},{"location":"cloud-practitioner/module-1/m1_sec3/#storage","text":"Amazon S3 Amazon S3 Glacier Amazon EFS Amazon EBS","title":"\ud83d\udcbe Storage"},{"location":"cloud-practitioner/module-1/m1_sec3/#database","text":"Amazon RDS Amazon DynamoDB Amazon Redshift Amazon Aurora","title":"\ud83d\uddc4\ufe0f Database"},{"location":"cloud-practitioner/module-1/m1_sec3/#networking-content-delivery","text":"Amazon VPC Amazon Route 53 Amazon CloudFront Elastic Load Balancing","title":"\ud83c\udf10 Networking &amp; Content Delivery"},{"location":"cloud-practitioner/module-1/m1_sec3/#management-governance","text":"AWS Trusted Advisor Amazon CloudWatch AWS CloudTrail AWS Well-Architected Tool AWS Auto Scaling AWS CLI AWS Config AWS Management Console AWS Organizations","title":"\ud83e\udde0 Management &amp; Governance"},{"location":"cloud-practitioner/module-1/m1_sec3/#cost-management","text":"AWS Cost & Usage Report AWS Budgets AWS Cost Explorer","title":"\ud83d\udcb0 Cost Management"},{"location":"cloud-practitioner/module-1/m1_sec3/#three-ways-to-interact-with-aws","text":"There are three main ways to access and manage AWS resources: \ud83d\udda5\ufe0f AWS Management Console Web-based graphical interface . Ideal for beginners and visual management. \ud83d\udcbb AWS Command Line Interface (CLI) Execute commands or scripts from Linux, macOS, or Windows . Great for automation and advanced users. \ud83e\udde9 AWS Software Development Kits (SDKs) Integrate AWS directly in code using Java, Python, JavaScript, .NET , and more. Enables programmatic deployment and monitoring of complex systems. All three are built on AWS\u2019s common REST-like API foundation. \ud83d\udcd8 Learn more: AWS Tools","title":"\ud83d\udfe0 Three Ways to Interact with AWS"},{"location":"cloud-practitioner/module-1/m1_sec3/#key-takeaways","text":"\u2705 AWS is a secure, global cloud platform with many interrelated services. \u2705 Each service category offers multiple tools to build and scale applications. \u2705 Choose services based on business and technical requirements . \u2705 You can interact with AWS through: - Management Console - Command Line Interface (CLI) - Software Development Kits (SDKs)","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-1/m1_sec4/","text":"\u2601\ufe0f Module 1 - Cloud Concepts Overview 4\ufe0f\u20e3 Section 4: AWS Cloud Adoption Framework (AWS CAF) \ud83d\udfe0 Overview Every organization\u2019s cloud adoption journey is unique. However, to successfully migrate an IT portfolio to the cloud, three elements must align : \ud83d\udc65 People \u2699\ufe0f Processes \ud83d\udcbb Technology Business and technology leaders must: - Understand the current state , target state , and transition plan . - Define clear goals and processes for their teams. \ud83d\udfe0 What is the AWS Cloud Adoption Framework (AWS CAF)? The AWS Cloud Adoption Framework (AWS CAF) provides guidance and best practices to help organizations: - Identify gaps in skills, processes, or technology . - Build a comprehensive cloud strategy across the entire organization. - Accelerate successful cloud adoption throughout the IT lifecycle. At a high level, the AWS CAF organizes guidance into six perspectives , which represent different areas of focus spanning people, process, and technology . Each perspective contains a set of capabilities \u2014 distinct responsibilities managed by functionally related stakeholders. By identifying capability gaps, organizations can create targeted workstreams that support their cloud journey. \ud83d\udcd8 Summary: - 6 Perspectives - Each includes multiple Capabilities - Used to evaluate readiness and plan cloud adoption \ud83d\udfe0 Business vs. Technical Perspectives AWS CAF perspectives are grouped into two categories: Category Perspectives Focus Business Capabilities Business, People, Governance Align business strategies, processes, and organizational readiness Technical Capabilities Platform, Security, Operations Focus on architecture, security, and operational excellence \ud83e\udde9 The Six AWS CAF Perspectives \ud83d\udfe3 1. Business Perspective \ud83d\udc65 Stakeholders: Business managers, finance managers, budget owners, strategy stakeholders. \ud83c\udfaf Goal: Ensure that IT aligns with business needs and that investments generate measurable business results . \ud83d\udcbc Key Capabilities: - IT finance - IT strategy - Benefits realization - Business risk management \ud83d\udcac In short: Build a strong business case for cloud adoption and prioritize initiatives aligned with organizational goals. \ud83d\udfe2 2. People Perspective \ud83d\udc65 Stakeholders: HR leaders, staffing and people managers. \ud83c\udfaf Goal: Evaluate organizational structure, skills, and roles , and identify gaps to create an agile, cloud-ready workforce . \ud83d\udccb Key Capabilities: - Resource management - Incentive management - Career management - Training management - Organizational change management \ud83d\udcac In short: Focus on training, staffing, and cultural transformation to enable agility. \ud83d\udfe0 3. Governance Perspective \ud83d\udc65 Stakeholders: CIOs, program managers, enterprise architects, business analysts, portfolio managers. \ud83c\udfaf Goal: Align IT strategy and business goals through structured processes and governance mechanisms. This alignment helps maximize business value and minimize risk . \ud83d\udccb Key Capabilities: - Portfolio management - Program and project management - Business performance measurement - License management \ud83d\udcac In short: Establish governance to ensure IT delivers measurable business outcomes safely and efficiently. \ud83d\udd35 4. Platform Perspective \ud83d\udc65 Stakeholders: CTOs, IT managers, solutions architects. \ud83c\udfaf Goal: Understand and describe the architecture of the target cloud environment , using models and frameworks to plan, build, and migrate workloads. \ud83d\udccb Key Capabilities: - Compute provisioning - Network provisioning - Storage provisioning - Database provisioning - Systems and solution architecture - Application development \ud83d\udcac In short: Design and implement technical architectures for cloud solutions and migrations. \ud83d\udd10 5. Security Perspective \ud83d\udc65 Stakeholders: CISOs, IT security managers, IT security analysts. \ud83c\udfaf Goal: Ensure the organization meets security objectives such as visibility, auditability, control, and agility. Use AWS CAF to structure and implement security controls effectively. \ud83d\udccb Key Capabilities: - Identity and access management (IAM) - Detective controls - Infrastructure security - Data protection - Incident response \ud83d\udcac In short: Maintain a secure, compliant, and resilient cloud environment. \u2699\ufe0f 6. Operations Perspective \ud83d\udc65 Stakeholders: IT operations managers, IT support managers. \ud83c\udfaf Goal: Define how day-to-day, quarterly, and annual operations are conducted. Align IT operations with business needs and ensure continuous improvement. \ud83d\udccb Key Capabilities: - Service monitoring - Application performance monitoring - Resource inventory management - Release/change management - Reporting and analytics - Business continuity / disaster recovery - IT service catalog \ud83d\udcac In short: Support stable and efficient business operations while managing cloud-based environments. \ud83d\udfe2 Key Takeaways \u2705 Cloud adoption requires alignment between people, processes, and technology. \u2705 The AWS Cloud Adoption Framework (CAF) provides best practices to guide that journey. \u2705 The six CAF perspectives ensure all areas of the organization are ready for the cloud: 1. Business 2. People 3. Governance 4. Platform 5. Security 6. Operations Each perspective identifies key capabilities and stakeholders to ensure a complete and successful migration strategy.","title":"\u25fd\ufe0f Section 4 - AWS Cloud Adoption Framework (AWS CAF)"},{"location":"cloud-practitioner/module-1/m1_sec4/#module-1-cloud-concepts-overview","text":"","title":"\u2601\ufe0f Module 1 - Cloud Concepts Overview"},{"location":"cloud-practitioner/module-1/m1_sec4/#4-section-4-aws-cloud-adoption-framework-aws-caf","text":"","title":"4\ufe0f\u20e3 Section 4: AWS Cloud Adoption Framework (AWS CAF)"},{"location":"cloud-practitioner/module-1/m1_sec4/#overview","text":"Every organization\u2019s cloud adoption journey is unique. However, to successfully migrate an IT portfolio to the cloud, three elements must align : \ud83d\udc65 People \u2699\ufe0f Processes \ud83d\udcbb Technology Business and technology leaders must: - Understand the current state , target state , and transition plan . - Define clear goals and processes for their teams.","title":"\ud83d\udfe0 Overview"},{"location":"cloud-practitioner/module-1/m1_sec4/#what-is-the-aws-cloud-adoption-framework-aws-caf","text":"The AWS Cloud Adoption Framework (AWS CAF) provides guidance and best practices to help organizations: - Identify gaps in skills, processes, or technology . - Build a comprehensive cloud strategy across the entire organization. - Accelerate successful cloud adoption throughout the IT lifecycle. At a high level, the AWS CAF organizes guidance into six perspectives , which represent different areas of focus spanning people, process, and technology . Each perspective contains a set of capabilities \u2014 distinct responsibilities managed by functionally related stakeholders. By identifying capability gaps, organizations can create targeted workstreams that support their cloud journey. \ud83d\udcd8 Summary: - 6 Perspectives - Each includes multiple Capabilities - Used to evaluate readiness and plan cloud adoption","title":"\ud83d\udfe0 What is the AWS Cloud Adoption Framework (AWS CAF)?"},{"location":"cloud-practitioner/module-1/m1_sec4/#business-vs-technical-perspectives","text":"AWS CAF perspectives are grouped into two categories: Category Perspectives Focus Business Capabilities Business, People, Governance Align business strategies, processes, and organizational readiness Technical Capabilities Platform, Security, Operations Focus on architecture, security, and operational excellence","title":"\ud83d\udfe0 Business vs. Technical Perspectives"},{"location":"cloud-practitioner/module-1/m1_sec4/#the-six-aws-caf-perspectives","text":"","title":"\ud83e\udde9 The Six AWS CAF Perspectives"},{"location":"cloud-practitioner/module-1/m1_sec4/#1-business-perspective","text":"\ud83d\udc65 Stakeholders: Business managers, finance managers, budget owners, strategy stakeholders. \ud83c\udfaf Goal: Ensure that IT aligns with business needs and that investments generate measurable business results . \ud83d\udcbc Key Capabilities: - IT finance - IT strategy - Benefits realization - Business risk management \ud83d\udcac In short: Build a strong business case for cloud adoption and prioritize initiatives aligned with organizational goals.","title":"\ud83d\udfe3 1. Business Perspective"},{"location":"cloud-practitioner/module-1/m1_sec4/#2-people-perspective","text":"\ud83d\udc65 Stakeholders: HR leaders, staffing and people managers. \ud83c\udfaf Goal: Evaluate organizational structure, skills, and roles , and identify gaps to create an agile, cloud-ready workforce . \ud83d\udccb Key Capabilities: - Resource management - Incentive management - Career management - Training management - Organizational change management \ud83d\udcac In short: Focus on training, staffing, and cultural transformation to enable agility.","title":"\ud83d\udfe2 2. People Perspective"},{"location":"cloud-practitioner/module-1/m1_sec4/#3-governance-perspective","text":"\ud83d\udc65 Stakeholders: CIOs, program managers, enterprise architects, business analysts, portfolio managers. \ud83c\udfaf Goal: Align IT strategy and business goals through structured processes and governance mechanisms. This alignment helps maximize business value and minimize risk . \ud83d\udccb Key Capabilities: - Portfolio management - Program and project management - Business performance measurement - License management \ud83d\udcac In short: Establish governance to ensure IT delivers measurable business outcomes safely and efficiently.","title":"\ud83d\udfe0 3. Governance Perspective"},{"location":"cloud-practitioner/module-1/m1_sec4/#4-platform-perspective","text":"\ud83d\udc65 Stakeholders: CTOs, IT managers, solutions architects. \ud83c\udfaf Goal: Understand and describe the architecture of the target cloud environment , using models and frameworks to plan, build, and migrate workloads. \ud83d\udccb Key Capabilities: - Compute provisioning - Network provisioning - Storage provisioning - Database provisioning - Systems and solution architecture - Application development \ud83d\udcac In short: Design and implement technical architectures for cloud solutions and migrations.","title":"\ud83d\udd35 4. Platform Perspective"},{"location":"cloud-practitioner/module-1/m1_sec4/#5-security-perspective","text":"\ud83d\udc65 Stakeholders: CISOs, IT security managers, IT security analysts. \ud83c\udfaf Goal: Ensure the organization meets security objectives such as visibility, auditability, control, and agility. Use AWS CAF to structure and implement security controls effectively. \ud83d\udccb Key Capabilities: - Identity and access management (IAM) - Detective controls - Infrastructure security - Data protection - Incident response \ud83d\udcac In short: Maintain a secure, compliant, and resilient cloud environment.","title":"\ud83d\udd10 5. Security Perspective"},{"location":"cloud-practitioner/module-1/m1_sec4/#6-operations-perspective","text":"\ud83d\udc65 Stakeholders: IT operations managers, IT support managers. \ud83c\udfaf Goal: Define how day-to-day, quarterly, and annual operations are conducted. Align IT operations with business needs and ensure continuous improvement. \ud83d\udccb Key Capabilities: - Service monitoring - Application performance monitoring - Resource inventory management - Release/change management - Reporting and analytics - Business continuity / disaster recovery - IT service catalog \ud83d\udcac In short: Support stable and efficient business operations while managing cloud-based environments.","title":"\u2699\ufe0f 6. Operations Perspective"},{"location":"cloud-practitioner/module-1/m1_sec4/#key-takeaways","text":"\u2705 Cloud adoption requires alignment between people, processes, and technology. \u2705 The AWS Cloud Adoption Framework (CAF) provides best practices to guide that journey. \u2705 The six CAF perspectives ensure all areas of the organization are ready for the cloud: 1. Business 2. People 3. Governance 4. Platform 5. Security 6. Operations Each perspective identifies key capabilities and stakeholders to ensure a complete and successful migration strategy.","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-10/m10_sec1/","text":"\u2699\ufe0f Module 10 - Automatic Scaling and Monitoring 1\ufe0f\u20e3 Section 1: Elastic Load Balancing (ELB) \ud83d\udfe0 Introduction Applications deployed in the cloud need to handle variable traffic loads while maintaining availability and performance . Elastic Load Balancing (ELB) automatically distributes incoming application traffic across multiple targets \u2014 such as Amazon EC2 instances, containers, IP addresses, or Lambda functions. It ensures that no single component is overwhelmed, improving fault tolerance , scalability , and user experience . \u2696\ufe0f What Is Elastic Load Balancing? Elastic Load Balancing is a fully managed service that: - Distributes traffic evenly across multiple resources. - Monitors health and routes traffic only to healthy targets. - Scales automatically with changing traffic patterns. - Integrates with Auto Scaling and CloudWatch for performance and monitoring. \ud83e\udde0 Example: During a marketing campaign, ELB automatically balances millions of incoming requests across multiple EC2 instances running in different Availability Zones. \ud83d\udca1 How ELB Works A user sends a request to your application (e.g., through a web browser). The request first reaches the Elastic Load Balancer . ELB checks the health of registered targets (EC2, containers, etc.). The load balancer forwards the request to one of the healthy targets . If a target becomes unhealthy, ELB automatically routes traffic to other healthy instances. \ud83e\uddf1 Key Benefits of Elastic Load Balancing Benefit Description High Availability Distributes traffic across multiple Availability Zones. Fault Tolerance Automatically reroutes traffic away from unhealthy targets. Scalability Handles varying traffic loads seamlessly. Security Integrates with AWS Certificate Manager (ACM) for HTTPS. Elasticity Works with Auto Scaling to dynamically adjust capacity. Monitoring Integrated with Amazon CloudWatch for metrics and health checks. \ud83e\udde0 Tip: ELB scales automatically \u2014 you don\u2019t need to manually configure capacity. \ud83e\udde9 Types of Elastic Load Balancers AWS offers different load balancers for different workloads. Type Best For Protocols Supported Key Features Application Load Balancer (ALB) Web applications and microservices. HTTP, HTTPS, gRPC Layer 7 routing, host/path-based routing, WebSocket support. Network Load Balancer (NLB) High-performance, low-latency apps. TCP, UDP, TLS Handles millions of requests per second with ultra-low latency. Gateway Load Balancer (GWLB) Third-party virtual appliances (firewalls, intrusion detection). IP Integrates third-party security and networking tools. Classic Load Balancer (CLB) Legacy applications. HTTP, HTTPS, TCP Basic load balancing across EC2 instances. \ud83e\udde0 Example: Use ALB for a modern web app with microservices, NLB for real-time gaming or financial trading, and GWLB for advanced network security. \ud83e\uddf0 Application Load Balancer (ALB) Details ALB operates at Layer 7 (Application Layer) of the OSI model, routing requests based on content. Key Features Path-based routing : /images \u2192 one target group, /api \u2192 another. Host-based routing : api.example.com \u2192 one service, shop.example.com \u2192 another. Container integration with Amazon ECS and EKS. WebSocket support for real-time communication. SSL termination with AWS Certificate Manager (ACM). \ud83e\udde0 Example: A web app with microservices can route /login requests to the auth service and /orders to the order service automatically via ALB rules. \u26a1 Network Load Balancer (NLB) Details NLB operates at Layer 4 (Transport Layer) and is optimized for high throughput and low latency . Key Features Handles millions of requests per second . Supports static IP addresses and Elastic IPs . Ideal for applications needing TCP/UDP or TLS passthrough . Integrates with PrivateLink for secure access between VPCs. \ud83e\udde0 Example: Use NLB for financial trading apps that require constant, fast TCP connections. \ud83d\udee1\ufe0f Gateway Load Balancer (GWLB) GWLB simplifies the deployment and scaling of virtual network appliances such as: - Firewalls - Intrusion detection/prevention systems (IDS/IPS) - Deep packet inspection (DPI) tools Key Features Combines transparent network gateway + load balancer . Uses GENEVE protocol for encapsulation. Ensures traffic is inspected by appliances before reaching its destination. \ud83e\udde0 Use Case: Organizations can deploy third-party firewall appliances (e.g., Palo Alto, Check Point) with GWLB for managed inspection at scale. \ud83e\uddee Load Balancer Health Checks Each load balancer continuously monitors the health of its targets. Health Check Type Example HTTP(S) Check /health endpoint returns 200 OK. TCP Check Confirms that the port is open and responsive. Target Group Status Unhealthy targets are automatically removed until they recover. \ud83e\udde0 Best Practice: Configure multiple health check endpoints for redundancy and faster detection. \ud83e\udde9 Integration with Auto Scaling Elastic Load Balancing integrates seamlessly with Amazon EC2 Auto Scaling : - ELB automatically registers new instances when they launch. - Deregisters instances when they terminate. - Ensures only healthy instances receive traffic. \ud83e\udde0 Result: Fully elastic, self-healing architecture \u2014 your app scales automatically without downtime. \ud83d\udd10 Security Features HTTPS/TLS support with AWS Certificate Manager . Security groups control inbound and outbound traffic. Integration with WAF and Shield for DDoS protection. Access logs capture detailed request information for analysis. \ud83e\udde0 Tip: Enable access logging and CloudWatch metrics to analyze performance and detect anomalies. \ud83e\udde0 Key Takeaways Elastic Load Balancing (ELB) automatically distributes traffic across multiple targets. Provides fault tolerance , high availability , and elastic scalability . Choose ALB for HTTP/S apps, NLB for TCP/UDP workloads, GWLB for network appliances, and CLB for legacy systems. Integrates with Auto Scaling and CloudWatch for a fully automated architecture. Supports encryption , DDoS protection , and access logging for secure operations. A core building block for resilient, scalable AWS architectures.","title":"\u25fd\ufe0f Section 1 - Elastic Load Balancing (ELB)"},{"location":"cloud-practitioner/module-10/m10_sec1/#module-10-automatic-scaling-and-monitoring","text":"","title":"\u2699\ufe0f Module 10 - Automatic Scaling and Monitoring"},{"location":"cloud-practitioner/module-10/m10_sec1/#1-section-1-elastic-load-balancing-elb","text":"","title":"1\ufe0f\u20e3 Section 1: Elastic Load Balancing (ELB)"},{"location":"cloud-practitioner/module-10/m10_sec1/#introduction","text":"Applications deployed in the cloud need to handle variable traffic loads while maintaining availability and performance . Elastic Load Balancing (ELB) automatically distributes incoming application traffic across multiple targets \u2014 such as Amazon EC2 instances, containers, IP addresses, or Lambda functions. It ensures that no single component is overwhelmed, improving fault tolerance , scalability , and user experience .","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-10/m10_sec1/#what-is-elastic-load-balancing","text":"Elastic Load Balancing is a fully managed service that: - Distributes traffic evenly across multiple resources. - Monitors health and routes traffic only to healthy targets. - Scales automatically with changing traffic patterns. - Integrates with Auto Scaling and CloudWatch for performance and monitoring. \ud83e\udde0 Example: During a marketing campaign, ELB automatically balances millions of incoming requests across multiple EC2 instances running in different Availability Zones.","title":"\u2696\ufe0f What Is Elastic Load Balancing?"},{"location":"cloud-practitioner/module-10/m10_sec1/#how-elb-works","text":"A user sends a request to your application (e.g., through a web browser). The request first reaches the Elastic Load Balancer . ELB checks the health of registered targets (EC2, containers, etc.). The load balancer forwards the request to one of the healthy targets . If a target becomes unhealthy, ELB automatically routes traffic to other healthy instances.","title":"\ud83d\udca1 How ELB Works"},{"location":"cloud-practitioner/module-10/m10_sec1/#key-benefits-of-elastic-load-balancing","text":"Benefit Description High Availability Distributes traffic across multiple Availability Zones. Fault Tolerance Automatically reroutes traffic away from unhealthy targets. Scalability Handles varying traffic loads seamlessly. Security Integrates with AWS Certificate Manager (ACM) for HTTPS. Elasticity Works with Auto Scaling to dynamically adjust capacity. Monitoring Integrated with Amazon CloudWatch for metrics and health checks. \ud83e\udde0 Tip: ELB scales automatically \u2014 you don\u2019t need to manually configure capacity.","title":"\ud83e\uddf1 Key Benefits of Elastic Load Balancing"},{"location":"cloud-practitioner/module-10/m10_sec1/#types-of-elastic-load-balancers","text":"AWS offers different load balancers for different workloads. Type Best For Protocols Supported Key Features Application Load Balancer (ALB) Web applications and microservices. HTTP, HTTPS, gRPC Layer 7 routing, host/path-based routing, WebSocket support. Network Load Balancer (NLB) High-performance, low-latency apps. TCP, UDP, TLS Handles millions of requests per second with ultra-low latency. Gateway Load Balancer (GWLB) Third-party virtual appliances (firewalls, intrusion detection). IP Integrates third-party security and networking tools. Classic Load Balancer (CLB) Legacy applications. HTTP, HTTPS, TCP Basic load balancing across EC2 instances. \ud83e\udde0 Example: Use ALB for a modern web app with microservices, NLB for real-time gaming or financial trading, and GWLB for advanced network security.","title":"\ud83e\udde9 Types of Elastic Load Balancers"},{"location":"cloud-practitioner/module-10/m10_sec1/#application-load-balancer-alb-details","text":"ALB operates at Layer 7 (Application Layer) of the OSI model, routing requests based on content.","title":"\ud83e\uddf0 Application Load Balancer (ALB) Details"},{"location":"cloud-practitioner/module-10/m10_sec1/#key-features","text":"Path-based routing : /images \u2192 one target group, /api \u2192 another. Host-based routing : api.example.com \u2192 one service, shop.example.com \u2192 another. Container integration with Amazon ECS and EKS. WebSocket support for real-time communication. SSL termination with AWS Certificate Manager (ACM). \ud83e\udde0 Example: A web app with microservices can route /login requests to the auth service and /orders to the order service automatically via ALB rules.","title":"Key Features"},{"location":"cloud-practitioner/module-10/m10_sec1/#network-load-balancer-nlb-details","text":"NLB operates at Layer 4 (Transport Layer) and is optimized for high throughput and low latency .","title":"\u26a1 Network Load Balancer (NLB) Details"},{"location":"cloud-practitioner/module-10/m10_sec1/#key-features_1","text":"Handles millions of requests per second . Supports static IP addresses and Elastic IPs . Ideal for applications needing TCP/UDP or TLS passthrough . Integrates with PrivateLink for secure access between VPCs. \ud83e\udde0 Example: Use NLB for financial trading apps that require constant, fast TCP connections.","title":"Key Features"},{"location":"cloud-practitioner/module-10/m10_sec1/#gateway-load-balancer-gwlb","text":"GWLB simplifies the deployment and scaling of virtual network appliances such as: - Firewalls - Intrusion detection/prevention systems (IDS/IPS) - Deep packet inspection (DPI) tools","title":"\ud83d\udee1\ufe0f Gateway Load Balancer (GWLB)"},{"location":"cloud-practitioner/module-10/m10_sec1/#key-features_2","text":"Combines transparent network gateway + load balancer . Uses GENEVE protocol for encapsulation. Ensures traffic is inspected by appliances before reaching its destination. \ud83e\udde0 Use Case: Organizations can deploy third-party firewall appliances (e.g., Palo Alto, Check Point) with GWLB for managed inspection at scale.","title":"Key Features"},{"location":"cloud-practitioner/module-10/m10_sec1/#load-balancer-health-checks","text":"Each load balancer continuously monitors the health of its targets. Health Check Type Example HTTP(S) Check /health endpoint returns 200 OK. TCP Check Confirms that the port is open and responsive. Target Group Status Unhealthy targets are automatically removed until they recover. \ud83e\udde0 Best Practice: Configure multiple health check endpoints for redundancy and faster detection.","title":"\ud83e\uddee Load Balancer Health Checks"},{"location":"cloud-practitioner/module-10/m10_sec1/#integration-with-auto-scaling","text":"Elastic Load Balancing integrates seamlessly with Amazon EC2 Auto Scaling : - ELB automatically registers new instances when they launch. - Deregisters instances when they terminate. - Ensures only healthy instances receive traffic. \ud83e\udde0 Result: Fully elastic, self-healing architecture \u2014 your app scales automatically without downtime.","title":"\ud83e\udde9 Integration with Auto Scaling"},{"location":"cloud-practitioner/module-10/m10_sec1/#security-features","text":"HTTPS/TLS support with AWS Certificate Manager . Security groups control inbound and outbound traffic. Integration with WAF and Shield for DDoS protection. Access logs capture detailed request information for analysis. \ud83e\udde0 Tip: Enable access logging and CloudWatch metrics to analyze performance and detect anomalies.","title":"\ud83d\udd10 Security Features"},{"location":"cloud-practitioner/module-10/m10_sec1/#key-takeaways","text":"Elastic Load Balancing (ELB) automatically distributes traffic across multiple targets. Provides fault tolerance , high availability , and elastic scalability . Choose ALB for HTTP/S apps, NLB for TCP/UDP workloads, GWLB for network appliances, and CLB for legacy systems. Integrates with Auto Scaling and CloudWatch for a fully automated architecture. Supports encryption , DDoS protection , and access logging for secure operations. A core building block for resilient, scalable AWS architectures.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-10/m10_sec2/","text":"\u2699\ufe0f Module 10 - Automatic Scaling and Monitoring 2\ufe0f\u20e3 Section 2: Amazon CloudWatch \ud83d\udfe0 Introduction To maintain performance, cost control, and security in the cloud, you need visibility into how your systems are operating. Amazon CloudWatch provides real-time monitoring , alerting , and automation for AWS resources and applications. CloudWatch collects and tracks metrics , collects logs , and enables automated responses to changes in your environment \u2014 helping you operate efficiently and proactively. \ud83d\udcca What Is Amazon CloudWatch? Amazon CloudWatch is a monitoring and observability service that provides data and actionable insights for: - AWS resources (e.g., EC2, RDS, Lambda, EBS, S3). - On-premises systems and hybrid environments. - Applications and custom business metrics. It helps detect anomalies, optimize performance, and trigger automated actions when thresholds are breached. \ud83e\udde0 Example: Automatically add EC2 instances to handle traffic spikes or send an alert when CPU usage exceeds 80%. \ud83e\udde9 Core CloudWatch Components Component Description Metrics Quantitative data points (e.g., CPU utilization, network I/O, request latency). Alarms Trigger notifications or actions based on metric thresholds. Logs Collect and analyze log data from AWS services and applications. Dashboards Custom visualizations for monitoring metrics in real time. Events (EventBridge) Respond to system changes automatically (e.g., trigger Lambda functions). Contributor Insights Identify top contributors to system performance issues. Anomaly Detection Uses ML to detect unusual behavior in metrics automatically. \ud83d\udcc8 CloudWatch Metrics Metrics are the foundation of CloudWatch monitoring. They measure the performance of AWS resources and are automatically collected for most services. Metric Example Service Purpose CPUUtilization EC2 Measures instance processor use. Invocations Lambda Tracks number of function executions. DatabaseConnections RDS Measures open connections to a database. NetworkIn / NetworkOut EC2, ELB Monitors incoming and outgoing traffic. ReadIOPS / WriteIOPS EBS Tracks disk read/write operations. \ud83e\udde0 Tip: You can also publish custom metrics (e.g., number of users online, app latency). \ud83d\udea8 CloudWatch Alarms Alarms let you respond automatically when metrics breach predefined thresholds. \ud83d\udca1 How They Work Define a metric and threshold (e.g., CPUUtilization > 75%). Specify an evaluation period (how long to wait before triggering). Choose an action \u2014 send an alert (via SNS) or run an automation (e.g., scale resources). \u2699\ufe0f Alarm States State Meaning OK Metric is within the defined threshold. ALARM Metric has crossed the threshold. INSUFFICIENT_DATA Not enough data points to determine state. \ud83e\udde0 Example: If average CPU > 80% for 5 minutes, CloudWatch triggers an SNS notification or Auto Scaling event. \ud83d\udcdc CloudWatch Logs CloudWatch Logs collect, store, and analyze logs from AWS services and custom applications. \ud83e\uddf0 Capabilities Centralized log aggregation from multiple sources. Real-time log streaming for analysis or dashboards. Integration with CloudWatch Logs Insights for querying logs with SQL-like syntax. Retention policies for automatic log deletion. \ud83e\udde0 Example: Store EC2 system logs or Lambda execution logs for troubleshooting. \ud83e\uddee CloudWatch Dashboards Create custom dashboards to visualize metrics and logs from multiple AWS accounts and Regions in one place. Key Benefits Combine multiple metrics (e.g., CPU, memory, latency) on a single panel. Share dashboards across teams. Add alarms, charts, and annotations for context. Use them for operational visibility and executive reporting . \ud83e\udde0 Example: A single dashboard shows EC2 instance health, Auto Scaling activity, and RDS performance metrics. \u2699\ufe0f CloudWatch Events (Now Amazon EventBridge) CloudWatch Events (integrated into Amazon EventBridge ) enable event-driven automation . Capabilities Detects changes in AWS resources (e.g., EC2 state change, Lambda error). Triggers actions automatically (e.g., invoke a Lambda, start a Step Function, or send an SNS notification). Uses event patterns and rules to route events to targets. \ud83e\udde0 Example: When an EC2 instance stops unexpectedly, EventBridge triggers a Lambda function to restart it. \ud83e\udd16 Automation and Integration CloudWatch integrates with other AWS services to automate responses and remediation. Integration Action Auto Scaling Adjust instance capacity automatically based on metrics. AWS Lambda Execute custom automation code when an event occurs. Amazon SNS Send alerts via email, SMS, or to chatbots. AWS Systems Manager Run predefined automation playbooks for incident response. \ud83e\udde0 Example: CloudWatch detects high latency \u2192 triggers Lambda \u2192 clears cache in ElastiCache cluster. \ud83d\udd10 Security and Access Control Integrated with AWS Identity and Access Management (IAM) for granular permissions. Use resource-level permissions to restrict access to metrics and dashboards. Encrypt logs using AWS KMS . Use cross-account dashboards for centralized monitoring in multi-account environments. \ud83e\udde0 Best Practice: Limit CloudWatch access to read-only roles for most users. \ud83e\udde0 Key Takeaways Amazon CloudWatch provides monitoring, observability, and automation across AWS resources. Use metrics , alarms , logs , and dashboards to maintain operational health. EventBridge integration enables event-driven automation . Combine CloudWatch with Auto Scaling , SNS , and Lambda for proactive operations. Secure CloudWatch data using IAM policies and KMS encryption . Centralize monitoring across Regions and accounts with cross-account dashboards .","title":"\u25fd\ufe0f Section 2 - Amazon CloudWatch"},{"location":"cloud-practitioner/module-10/m10_sec2/#module-10-automatic-scaling-and-monitoring","text":"","title":"\u2699\ufe0f Module 10 - Automatic Scaling and Monitoring"},{"location":"cloud-practitioner/module-10/m10_sec2/#2-section-2-amazon-cloudwatch","text":"","title":"2\ufe0f\u20e3 Section 2: Amazon CloudWatch"},{"location":"cloud-practitioner/module-10/m10_sec2/#introduction","text":"To maintain performance, cost control, and security in the cloud, you need visibility into how your systems are operating. Amazon CloudWatch provides real-time monitoring , alerting , and automation for AWS resources and applications. CloudWatch collects and tracks metrics , collects logs , and enables automated responses to changes in your environment \u2014 helping you operate efficiently and proactively.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-10/m10_sec2/#what-is-amazon-cloudwatch","text":"Amazon CloudWatch is a monitoring and observability service that provides data and actionable insights for: - AWS resources (e.g., EC2, RDS, Lambda, EBS, S3). - On-premises systems and hybrid environments. - Applications and custom business metrics. It helps detect anomalies, optimize performance, and trigger automated actions when thresholds are breached. \ud83e\udde0 Example: Automatically add EC2 instances to handle traffic spikes or send an alert when CPU usage exceeds 80%.","title":"\ud83d\udcca What Is Amazon CloudWatch?"},{"location":"cloud-practitioner/module-10/m10_sec2/#core-cloudwatch-components","text":"Component Description Metrics Quantitative data points (e.g., CPU utilization, network I/O, request latency). Alarms Trigger notifications or actions based on metric thresholds. Logs Collect and analyze log data from AWS services and applications. Dashboards Custom visualizations for monitoring metrics in real time. Events (EventBridge) Respond to system changes automatically (e.g., trigger Lambda functions). Contributor Insights Identify top contributors to system performance issues. Anomaly Detection Uses ML to detect unusual behavior in metrics automatically.","title":"\ud83e\udde9 Core CloudWatch Components"},{"location":"cloud-practitioner/module-10/m10_sec2/#cloudwatch-metrics","text":"Metrics are the foundation of CloudWatch monitoring. They measure the performance of AWS resources and are automatically collected for most services. Metric Example Service Purpose CPUUtilization EC2 Measures instance processor use. Invocations Lambda Tracks number of function executions. DatabaseConnections RDS Measures open connections to a database. NetworkIn / NetworkOut EC2, ELB Monitors incoming and outgoing traffic. ReadIOPS / WriteIOPS EBS Tracks disk read/write operations. \ud83e\udde0 Tip: You can also publish custom metrics (e.g., number of users online, app latency).","title":"\ud83d\udcc8 CloudWatch Metrics"},{"location":"cloud-practitioner/module-10/m10_sec2/#cloudwatch-alarms","text":"Alarms let you respond automatically when metrics breach predefined thresholds.","title":"\ud83d\udea8 CloudWatch Alarms"},{"location":"cloud-practitioner/module-10/m10_sec2/#how-they-work","text":"Define a metric and threshold (e.g., CPUUtilization > 75%). Specify an evaluation period (how long to wait before triggering). Choose an action \u2014 send an alert (via SNS) or run an automation (e.g., scale resources).","title":"\ud83d\udca1 How They Work"},{"location":"cloud-practitioner/module-10/m10_sec2/#alarm-states","text":"State Meaning OK Metric is within the defined threshold. ALARM Metric has crossed the threshold. INSUFFICIENT_DATA Not enough data points to determine state. \ud83e\udde0 Example: If average CPU > 80% for 5 minutes, CloudWatch triggers an SNS notification or Auto Scaling event.","title":"\u2699\ufe0f Alarm States"},{"location":"cloud-practitioner/module-10/m10_sec2/#cloudwatch-logs","text":"CloudWatch Logs collect, store, and analyze logs from AWS services and custom applications.","title":"\ud83d\udcdc CloudWatch Logs"},{"location":"cloud-practitioner/module-10/m10_sec2/#capabilities","text":"Centralized log aggregation from multiple sources. Real-time log streaming for analysis or dashboards. Integration with CloudWatch Logs Insights for querying logs with SQL-like syntax. Retention policies for automatic log deletion. \ud83e\udde0 Example: Store EC2 system logs or Lambda execution logs for troubleshooting.","title":"\ud83e\uddf0 Capabilities"},{"location":"cloud-practitioner/module-10/m10_sec2/#cloudwatch-dashboards","text":"Create custom dashboards to visualize metrics and logs from multiple AWS accounts and Regions in one place.","title":"\ud83e\uddee CloudWatch Dashboards"},{"location":"cloud-practitioner/module-10/m10_sec2/#key-benefits","text":"Combine multiple metrics (e.g., CPU, memory, latency) on a single panel. Share dashboards across teams. Add alarms, charts, and annotations for context. Use them for operational visibility and executive reporting . \ud83e\udde0 Example: A single dashboard shows EC2 instance health, Auto Scaling activity, and RDS performance metrics.","title":"Key Benefits"},{"location":"cloud-practitioner/module-10/m10_sec2/#cloudwatch-events-now-amazon-eventbridge","text":"CloudWatch Events (integrated into Amazon EventBridge ) enable event-driven automation .","title":"\u2699\ufe0f CloudWatch Events (Now Amazon EventBridge)"},{"location":"cloud-practitioner/module-10/m10_sec2/#capabilities_1","text":"Detects changes in AWS resources (e.g., EC2 state change, Lambda error). Triggers actions automatically (e.g., invoke a Lambda, start a Step Function, or send an SNS notification). Uses event patterns and rules to route events to targets. \ud83e\udde0 Example: When an EC2 instance stops unexpectedly, EventBridge triggers a Lambda function to restart it.","title":"Capabilities"},{"location":"cloud-practitioner/module-10/m10_sec2/#automation-and-integration","text":"CloudWatch integrates with other AWS services to automate responses and remediation. Integration Action Auto Scaling Adjust instance capacity automatically based on metrics. AWS Lambda Execute custom automation code when an event occurs. Amazon SNS Send alerts via email, SMS, or to chatbots. AWS Systems Manager Run predefined automation playbooks for incident response. \ud83e\udde0 Example: CloudWatch detects high latency \u2192 triggers Lambda \u2192 clears cache in ElastiCache cluster.","title":"\ud83e\udd16 Automation and Integration"},{"location":"cloud-practitioner/module-10/m10_sec2/#security-and-access-control","text":"Integrated with AWS Identity and Access Management (IAM) for granular permissions. Use resource-level permissions to restrict access to metrics and dashboards. Encrypt logs using AWS KMS . Use cross-account dashboards for centralized monitoring in multi-account environments. \ud83e\udde0 Best Practice: Limit CloudWatch access to read-only roles for most users.","title":"\ud83d\udd10 Security and Access Control"},{"location":"cloud-practitioner/module-10/m10_sec2/#key-takeaways","text":"Amazon CloudWatch provides monitoring, observability, and automation across AWS resources. Use metrics , alarms , logs , and dashboards to maintain operational health. EventBridge integration enables event-driven automation . Combine CloudWatch with Auto Scaling , SNS , and Lambda for proactive operations. Secure CloudWatch data using IAM policies and KMS encryption . Centralize monitoring across Regions and accounts with cross-account dashboards .","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-10/m10_sec3/","text":"\u2699\ufe0f Module 10 - Automatic Scaling and Monitoring 3\ufe0f\u20e3 Section 3: Amazon EC2 Auto Scaling \ud83d\udfe0 Introduction Amazon EC2 Auto Scaling automatically adds or removes compute capacity to maintain application availability and optimize costs. It ensures your application has the right number of EC2 instances running to handle current demand \u2014 no more, no less. By scaling automatically, you can deliver consistent performance while minimizing wasted resources. \u26a1 What Is Amazon EC2 Auto Scaling? EC2 Auto Scaling monitors your applications and adjusts capacity dynamically based on predefined policies and metrics (e.g., CPU utilization, network traffic). It works hand-in-hand with Elastic Load Balancing (ELB) and Amazon CloudWatch for full automation. Capability Description Dynamic Scaling Responds automatically to changes in demand. Predictive Scaling Uses machine learning to forecast future traffic. Scheduled Scaling Scales at specific times or dates. Health Checks & Recovery Detects unhealthy instances and replaces them automatically. \ud83e\udde0 Example: When traffic to your web app increases, EC2 Auto Scaling launches new instances. When demand drops, it terminates them to save cost. \ud83e\udde9 Core Components of EC2 Auto Scaling Component Purpose Auto Scaling Group (ASG) Logical group of EC2 instances managed together. Launch Template / Configuration Defines the instance settings (AMI, instance type, security groups, etc.). Scaling Policies Define when and how scaling actions occur. Health Checks Monitors instance health via EC2 or ELB. \ud83e\uddf1 Auto Scaling Group (ASG) An Auto Scaling Group maintains a defined number of EC2 instances \u2014 called the desired capacity \u2014 and ensures they are evenly distributed across Availability Zones . ASG Key Settings Minimum capacity \u2192 The lowest number of instances to run. Maximum capacity \u2192 The highest number of instances allowed. Desired capacity \u2192 The target number of instances maintained by Auto Scaling. \ud83e\udde0 Example: If the ASG minimum = 2, maximum = 10, desired = 4 \u2192 Auto Scaling ensures there are always 4 healthy instances running, scaling up or down as needed. \u2699\ufe0f Launch Templates A Launch Template defines how new instances should be created. It includes configurations such as: - AMI ID (Amazon Machine Image). - Instance type (e.g., t3.medium). - Key pair and security groups. - User data scripts (for automated setup). - IAM role permissions. \ud83e\udde0 Tip: Launch Templates support versioning, so you can easily roll back to previous configurations. \ud83e\uddee Scaling Policies Scaling policies define how Auto Scaling reacts to metric thresholds or forecasts. Policy Type Description Use Case Target Tracking Maintains a specific metric target (e.g., 50% CPU utilization). Keeps performance consistent automatically. Step Scaling Adds/removes capacity based on incremental metric thresholds. Scales faster when demand changes sharply. Simple Scaling Adds or removes a fixed number of instances based on a single alarm. Suitable for smaller, steady workloads. Predictive Scaling Uses ML-based forecasts to add capacity in advance. Ideal for recurring traffic patterns. \ud83e\udde0 Example: A target tracking policy keeps average CPU at 60%. When CPU exceeds that level, Auto Scaling adds new instances. \ud83d\udcc5 Scheduled and Predictive Scaling Scheduled Scaling Triggered at specific times (e.g., weekdays at 9 AM). Helps prepare for predictable usage patterns (like business hours). Predictive Scaling Uses machine learning to anticipate demand before it occurs. Adds instances ahead of time , improving performance and stability. \ud83e\udde0 Example: An e-commerce site schedules scaling during daily traffic surges and uses predictive scaling before holiday sales. \ud83d\udd01 Integration with ELB and CloudWatch Auto Scaling works seamlessly with: - Elastic Load Balancing (ELB) \u2192 Distributes traffic evenly among instances. - CloudWatch Alarms \u2192 Triggers scaling events when metrics exceed thresholds. - AWS Systems Manager \u2192 Applies patches or configuration updates to new instances. \ud83e\udde0 Example: CloudWatch detects high CPU \u2192 triggers scaling policy \u2192 Auto Scaling adds new EC2 instances \u2192 ELB starts sending traffic to new instances automatically. \ud83d\udcb0 Cost Optimization Pay only for the compute capacity you actually need. Scale out during high demand and in during low traffic. Combine Auto Scaling with Savings Plans or Spot Instances for further cost reduction. Eliminate idle resources automatically. \ud83e\udde0 Tip: Use instance weighting to mix different instance types and sizes within the same ASG for flexibility and savings. \ud83e\uddf1 Health Checks and Self-Healing Auto Scaling continuously monitors instance health using: - EC2 Status Checks (hardware/software). - Elastic Load Balancer (ELB) Health Checks (application-level). If an instance fails health checks: - It is terminated automatically. - A new instance is launched to replace it. \ud83e\udde0 Result: Your application remains available even when instances fail. \ud83d\udd10 Security Considerations Apply least privilege to the IAM role associated with Auto Scaling. Use Launch Templates with preconfigured security groups and KMS encryption . Enforce patching and compliance with AWS Systems Manager . Monitor scaling events via CloudTrail and CloudWatch Logs . \ud83e\udde0 Key Takeaways Amazon EC2 Auto Scaling maintains application availability and cost efficiency automatically. Use Auto Scaling Groups (ASGs) to define capacity limits and maintain desired instance counts. Scaling Policies (Target Tracking, Step, Predictive) control how scaling happens. Integrate with CloudWatch for metric-based scaling and ELB for traffic distribution. Supports scheduled scaling , predictive scaling , and health check recovery . Ensures a self-healing, elastic architecture with minimal manual intervention.","title":"\u25fd\ufe0f Section 3 - Amazon EC2 Auto Scaling"},{"location":"cloud-practitioner/module-10/m10_sec3/#module-10-automatic-scaling-and-monitoring","text":"","title":"\u2699\ufe0f Module 10 - Automatic Scaling and Monitoring"},{"location":"cloud-practitioner/module-10/m10_sec3/#3-section-3-amazon-ec2-auto-scaling","text":"","title":"3\ufe0f\u20e3 Section 3: Amazon EC2 Auto Scaling"},{"location":"cloud-practitioner/module-10/m10_sec3/#introduction","text":"Amazon EC2 Auto Scaling automatically adds or removes compute capacity to maintain application availability and optimize costs. It ensures your application has the right number of EC2 instances running to handle current demand \u2014 no more, no less. By scaling automatically, you can deliver consistent performance while minimizing wasted resources.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-10/m10_sec3/#what-is-amazon-ec2-auto-scaling","text":"EC2 Auto Scaling monitors your applications and adjusts capacity dynamically based on predefined policies and metrics (e.g., CPU utilization, network traffic). It works hand-in-hand with Elastic Load Balancing (ELB) and Amazon CloudWatch for full automation. Capability Description Dynamic Scaling Responds automatically to changes in demand. Predictive Scaling Uses machine learning to forecast future traffic. Scheduled Scaling Scales at specific times or dates. Health Checks & Recovery Detects unhealthy instances and replaces them automatically. \ud83e\udde0 Example: When traffic to your web app increases, EC2 Auto Scaling launches new instances. When demand drops, it terminates them to save cost.","title":"\u26a1 What Is Amazon EC2 Auto Scaling?"},{"location":"cloud-practitioner/module-10/m10_sec3/#core-components-of-ec2-auto-scaling","text":"Component Purpose Auto Scaling Group (ASG) Logical group of EC2 instances managed together. Launch Template / Configuration Defines the instance settings (AMI, instance type, security groups, etc.). Scaling Policies Define when and how scaling actions occur. Health Checks Monitors instance health via EC2 or ELB.","title":"\ud83e\udde9 Core Components of EC2 Auto Scaling"},{"location":"cloud-practitioner/module-10/m10_sec3/#auto-scaling-group-asg","text":"An Auto Scaling Group maintains a defined number of EC2 instances \u2014 called the desired capacity \u2014 and ensures they are evenly distributed across Availability Zones .","title":"\ud83e\uddf1 Auto Scaling Group (ASG)"},{"location":"cloud-practitioner/module-10/m10_sec3/#asg-key-settings","text":"Minimum capacity \u2192 The lowest number of instances to run. Maximum capacity \u2192 The highest number of instances allowed. Desired capacity \u2192 The target number of instances maintained by Auto Scaling. \ud83e\udde0 Example: If the ASG minimum = 2, maximum = 10, desired = 4 \u2192 Auto Scaling ensures there are always 4 healthy instances running, scaling up or down as needed.","title":"ASG Key Settings"},{"location":"cloud-practitioner/module-10/m10_sec3/#launch-templates","text":"A Launch Template defines how new instances should be created. It includes configurations such as: - AMI ID (Amazon Machine Image). - Instance type (e.g., t3.medium). - Key pair and security groups. - User data scripts (for automated setup). - IAM role permissions. \ud83e\udde0 Tip: Launch Templates support versioning, so you can easily roll back to previous configurations.","title":"\u2699\ufe0f Launch Templates"},{"location":"cloud-practitioner/module-10/m10_sec3/#scaling-policies","text":"Scaling policies define how Auto Scaling reacts to metric thresholds or forecasts. Policy Type Description Use Case Target Tracking Maintains a specific metric target (e.g., 50% CPU utilization). Keeps performance consistent automatically. Step Scaling Adds/removes capacity based on incremental metric thresholds. Scales faster when demand changes sharply. Simple Scaling Adds or removes a fixed number of instances based on a single alarm. Suitable for smaller, steady workloads. Predictive Scaling Uses ML-based forecasts to add capacity in advance. Ideal for recurring traffic patterns. \ud83e\udde0 Example: A target tracking policy keeps average CPU at 60%. When CPU exceeds that level, Auto Scaling adds new instances.","title":"\ud83e\uddee Scaling Policies"},{"location":"cloud-practitioner/module-10/m10_sec3/#scheduled-and-predictive-scaling","text":"","title":"\ud83d\udcc5 Scheduled and Predictive Scaling"},{"location":"cloud-practitioner/module-10/m10_sec3/#scheduled-scaling","text":"Triggered at specific times (e.g., weekdays at 9 AM). Helps prepare for predictable usage patterns (like business hours).","title":"Scheduled Scaling"},{"location":"cloud-practitioner/module-10/m10_sec3/#predictive-scaling","text":"Uses machine learning to anticipate demand before it occurs. Adds instances ahead of time , improving performance and stability. \ud83e\udde0 Example: An e-commerce site schedules scaling during daily traffic surges and uses predictive scaling before holiday sales.","title":"Predictive Scaling"},{"location":"cloud-practitioner/module-10/m10_sec3/#integration-with-elb-and-cloudwatch","text":"Auto Scaling works seamlessly with: - Elastic Load Balancing (ELB) \u2192 Distributes traffic evenly among instances. - CloudWatch Alarms \u2192 Triggers scaling events when metrics exceed thresholds. - AWS Systems Manager \u2192 Applies patches or configuration updates to new instances. \ud83e\udde0 Example: CloudWatch detects high CPU \u2192 triggers scaling policy \u2192 Auto Scaling adds new EC2 instances \u2192 ELB starts sending traffic to new instances automatically.","title":"\ud83d\udd01 Integration with ELB and CloudWatch"},{"location":"cloud-practitioner/module-10/m10_sec3/#cost-optimization","text":"Pay only for the compute capacity you actually need. Scale out during high demand and in during low traffic. Combine Auto Scaling with Savings Plans or Spot Instances for further cost reduction. Eliminate idle resources automatically. \ud83e\udde0 Tip: Use instance weighting to mix different instance types and sizes within the same ASG for flexibility and savings.","title":"\ud83d\udcb0 Cost Optimization"},{"location":"cloud-practitioner/module-10/m10_sec3/#health-checks-and-self-healing","text":"Auto Scaling continuously monitors instance health using: - EC2 Status Checks (hardware/software). - Elastic Load Balancer (ELB) Health Checks (application-level). If an instance fails health checks: - It is terminated automatically. - A new instance is launched to replace it. \ud83e\udde0 Result: Your application remains available even when instances fail.","title":"\ud83e\uddf1 Health Checks and Self-Healing"},{"location":"cloud-practitioner/module-10/m10_sec3/#security-considerations","text":"Apply least privilege to the IAM role associated with Auto Scaling. Use Launch Templates with preconfigured security groups and KMS encryption . Enforce patching and compliance with AWS Systems Manager . Monitor scaling events via CloudTrail and CloudWatch Logs .","title":"\ud83d\udd10 Security Considerations"},{"location":"cloud-practitioner/module-10/m10_sec3/#key-takeaways","text":"Amazon EC2 Auto Scaling maintains application availability and cost efficiency automatically. Use Auto Scaling Groups (ASGs) to define capacity limits and maintain desired instance counts. Scaling Policies (Target Tracking, Step, Predictive) control how scaling happens. Integrate with CloudWatch for metric-based scaling and ELB for traffic distribution. Supports scheduled scaling , predictive scaling , and health check recovery . Ensures a self-healing, elastic architecture with minimal manual intervention.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-2/m2_sec1/","text":"\ud83d\udcca Module 2 - Cloud Economics and Billing 1\ufe0f\u20e3 Section 1: Fundamentals of pricing \ud83d\udfe0 AWS pricing model The three main cost drivers in AWS are: Compute \u2192 charged per hour/second, varies by instance type. Storage \u2192 typically charged per GB. Data transfer \u2192 outbound is charged (aggregated across services), inbound is usually free within the same region (exceptions exist). \ud83d\udc49 Outbound data transfer charges appear on the bill as Data Transfer Out . \ud83d\udfe0 How do you pay for AWS? At the end of each month, you pay for what you use. You can start or stop using a product at any time. No long-term contracts are required. AWS follows a utility-style model : you pay only for what you use, with no long-term contracts. Key principles: Pay for what you use \u2013 no upfront infrastructure costs. Pay less when you reserve \u2013 discounts with Reserved Instances (EC2, RDS). Pay less by using more \u2013 tiered pricing with volume discounts (e.g., Amazon S3). Pay even less as AWS grows \u2013 AWS continuously lowers costs as it scales. \ud83d\udfe0 Pay for what you use With AWS, you pay only for the services that you consume with no large upfront expenses. You can lower variable costs, so you no longer need to dedicate valuable resources to building costly infrastructure, including purchasing servers, software licenses, or leasing facilities. Quickly adapt to changing business needs and redirect your focus on innovation and invention by paying only for what you use and for as long as you need it. All AWS services are available on demand, require no long-term contracts, and have no complex licensing dependencies \ud83d\udfe0 Pay less when you reserve For certain services like Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Relational Database Service (Amazon RDS), you can invest in reserved capacity. With Reserved Instances, you can save up to 75 percent over equivalent on-demand capacity. Reserved Instances are available in three options : All Upfront Reserved Instance (AURI) \u2192 highest discount Partial Upfront Reserved Instance (PURI ) \u2192 smaller upfront payment, medium discount No Upfront Payments Reserved Instance (NURI ) \u2192 no initial payment, lowest discount When you buy Reserved Instances, you receive a greater discount when you make a larger upfront payment. To maximize your savings, you can pay all upfront and receive the largest discount. Partial Upfront RIs offer lower discounts, but they give you the option to spend less upfront. Lastly, you can choose to spend nothing upfront and receive a smaller discount, which enables you to free capital to spend on other projects. By using reserved capacity, your organization can minimize risks, more predictably manage budgets, and comply with policies that require longer-term commitments. \ud83d\udfe0 Pay less by using more For services like Amazon Simple StorageService (Amazon S3) , pricing is tiered, which means that you pay less per GB when you use more. In addition, data transfer inis always free. Multiple storage services deliver lower storage costs based on your needs. As a result, as your AWS usage needs increase, you benefit from the economies of scale that enable you to increase adoption and keep costs under control. \ud83d\udfe0 Pay even less as AWS grows As AWS grows: AWS focuses on lowering cost of doing business This practice results in AWS passing savings from economies of scale to you. Since 2006, AWS has reduced prices over 75 times . Newer, higher-performing resources often replace older ones at no extra cost . \ud83d\udfe0 Custom pricing \u2022 For high-volume or unique projects, AWS provides custom pricing agreements . \ud83d\udfe0 AWS Free Tier New customers get 12 months of free usage for selected services (e.g., EC2 t2.micro, S3, EBS, Load Balancer, data transfer). Designed to let users explore AWS at no initial cost. \ud83d\udfe0 Services with no charge Some services are included at no additional cost , such as: Amazon Virtual Private Cloud (Amazon VPC) \u2192 enables you to provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define. AWS Identity and Access Management (IAM) \u2192 controls your users\u2019 access to AWS services and resources. Consolidated Billing \u2192 is a billing feature in AWS Organizations to consolidate payment for multiple AWS accounts or multiple Amazon Internet Services Private Limited (AISPL) accounts*. Consolidated billing provides:\u2022One bill for multiple accounts. The ability to easily track each account\u2019s charges . The opportunity to decrease charges as a result of volume pricing discounts from combined usage. Consolidate all of your accounts using Consolidated Billing and get tiered benefits. AWS Elastic Beanstalk \u2192 is an even easier way for you to quickly deploy and manage applications in the AWS Cloud. AWS CloudFormation \u2192 gives developers and systems administrators an easy way to create a collection of related AWS resources and provision them in an orderly and predictable fashion. Automatic Scalingautomatically \u2192 adds or removes resources according to conditions you define. The resources you are using increase seamlessly during demand spikes to maintain performance and decrease automatically during demand lulls to minimize costs. AWS OpsWorks \u2192 is an application management service that makes it easy to deploy and operate applications of all shapes and sizes. Note: The difference between AWS accounts and AISPL accounts (India) is the seller of record. AISPL bills in INR, while AWS Inc. bills in USD.","title":"\u25fd\ufe0f Section 1 - Fundamentals of pricing"},{"location":"cloud-practitioner/module-2/m2_sec1/#module-2-cloud-economics-and-billing","text":"","title":"\ud83d\udcca Module 2 - Cloud Economics and Billing"},{"location":"cloud-practitioner/module-2/m2_sec1/#1-section-1-fundamentals-of-pricing","text":"","title":"1\ufe0f\u20e3 Section 1: Fundamentals of pricing"},{"location":"cloud-practitioner/module-2/m2_sec1/#aws-pricing-model","text":"The three main cost drivers in AWS are: Compute \u2192 charged per hour/second, varies by instance type. Storage \u2192 typically charged per GB. Data transfer \u2192 outbound is charged (aggregated across services), inbound is usually free within the same region (exceptions exist). \ud83d\udc49 Outbound data transfer charges appear on the bill as Data Transfer Out .","title":"\ud83d\udfe0 AWS pricing model"},{"location":"cloud-practitioner/module-2/m2_sec1/#how-do-you-pay-for-aws","text":"At the end of each month, you pay for what you use. You can start or stop using a product at any time. No long-term contracts are required. AWS follows a utility-style model : you pay only for what you use, with no long-term contracts. Key principles: Pay for what you use \u2013 no upfront infrastructure costs. Pay less when you reserve \u2013 discounts with Reserved Instances (EC2, RDS). Pay less by using more \u2013 tiered pricing with volume discounts (e.g., Amazon S3). Pay even less as AWS grows \u2013 AWS continuously lowers costs as it scales.","title":"\ud83d\udfe0 How do you pay for AWS?"},{"location":"cloud-practitioner/module-2/m2_sec1/#pay-for-what-you-use","text":"With AWS, you pay only for the services that you consume with no large upfront expenses. You can lower variable costs, so you no longer need to dedicate valuable resources to building costly infrastructure, including purchasing servers, software licenses, or leasing facilities. Quickly adapt to changing business needs and redirect your focus on innovation and invention by paying only for what you use and for as long as you need it. All AWS services are available on demand, require no long-term contracts, and have no complex licensing dependencies","title":"\ud83d\udfe0 Pay for what you use"},{"location":"cloud-practitioner/module-2/m2_sec1/#pay-less-when-you-reserve","text":"For certain services like Amazon Elastic Compute Cloud (Amazon EC2) and Amazon Relational Database Service (Amazon RDS), you can invest in reserved capacity. With Reserved Instances, you can save up to 75 percent over equivalent on-demand capacity. Reserved Instances are available in three options : All Upfront Reserved Instance (AURI) \u2192 highest discount Partial Upfront Reserved Instance (PURI ) \u2192 smaller upfront payment, medium discount No Upfront Payments Reserved Instance (NURI ) \u2192 no initial payment, lowest discount When you buy Reserved Instances, you receive a greater discount when you make a larger upfront payment. To maximize your savings, you can pay all upfront and receive the largest discount. Partial Upfront RIs offer lower discounts, but they give you the option to spend less upfront. Lastly, you can choose to spend nothing upfront and receive a smaller discount, which enables you to free capital to spend on other projects. By using reserved capacity, your organization can minimize risks, more predictably manage budgets, and comply with policies that require longer-term commitments.","title":"\ud83d\udfe0 Pay less when you reserve"},{"location":"cloud-practitioner/module-2/m2_sec1/#pay-less-by-using-more","text":"For services like Amazon Simple StorageService (Amazon S3) , pricing is tiered, which means that you pay less per GB when you use more. In addition, data transfer inis always free. Multiple storage services deliver lower storage costs based on your needs. As a result, as your AWS usage needs increase, you benefit from the economies of scale that enable you to increase adoption and keep costs under control.","title":"\ud83d\udfe0 Pay less by using more"},{"location":"cloud-practitioner/module-2/m2_sec1/#pay-even-less-as-aws-grows","text":"As AWS grows: AWS focuses on lowering cost of doing business This practice results in AWS passing savings from economies of scale to you. Since 2006, AWS has reduced prices over 75 times . Newer, higher-performing resources often replace older ones at no extra cost .","title":"\ud83d\udfe0 Pay even less as AWS grows"},{"location":"cloud-practitioner/module-2/m2_sec1/#custom-pricing","text":"\u2022 For high-volume or unique projects, AWS provides custom pricing agreements .","title":"\ud83d\udfe0 Custom pricing"},{"location":"cloud-practitioner/module-2/m2_sec1/#aws-free-tier","text":"New customers get 12 months of free usage for selected services (e.g., EC2 t2.micro, S3, EBS, Load Balancer, data transfer). Designed to let users explore AWS at no initial cost.","title":"\ud83d\udfe0 AWS Free Tier"},{"location":"cloud-practitioner/module-2/m2_sec1/#services-with-no-charge","text":"Some services are included at no additional cost , such as: Amazon Virtual Private Cloud (Amazon VPC) \u2192 enables you to provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define. AWS Identity and Access Management (IAM) \u2192 controls your users\u2019 access to AWS services and resources. Consolidated Billing \u2192 is a billing feature in AWS Organizations to consolidate payment for multiple AWS accounts or multiple Amazon Internet Services Private Limited (AISPL) accounts*. Consolidated billing provides:\u2022One bill for multiple accounts. The ability to easily track each account\u2019s charges . The opportunity to decrease charges as a result of volume pricing discounts from combined usage. Consolidate all of your accounts using Consolidated Billing and get tiered benefits. AWS Elastic Beanstalk \u2192 is an even easier way for you to quickly deploy and manage applications in the AWS Cloud. AWS CloudFormation \u2192 gives developers and systems administrators an easy way to create a collection of related AWS resources and provision them in an orderly and predictable fashion. Automatic Scalingautomatically \u2192 adds or removes resources according to conditions you define. The resources you are using increase seamlessly during demand spikes to maintain performance and decrease automatically during demand lulls to minimize costs. AWS OpsWorks \u2192 is an application management service that makes it easy to deploy and operate applications of all shapes and sizes. Note: The difference between AWS accounts and AISPL accounts (India) is the seller of record. AISPL bills in INR, while AWS Inc. bills in USD.","title":"\ud83d\udfe0 Services with no charge"},{"location":"cloud-practitioner/module-2/m2_sec2/","text":"\ud83d\udcca Module 2 - Cloud Economics and Billing 2\ufe0f\u20e3 Section 2: Total Cost of Ownership \ud83d\udfe0 On-premises vs. cloud On-Premises Infrastructure Installed locally on company hardware. High capital expenses : facilities, hardware, licenses, IT staff. Scaling up \u2192 expensive, time-consuming. Scaling down \u2192 fixed costs remain. Cloud Infrastructure Provided and maintained by AWS. Pay only for what you use ( consumption-based model ). Easy to scale up or down. Costs are transparent and easier to estimate. \ud83d\udc49 On-premises focuses on CapEx (capital expenditure, long planning cycles). \ud83d\udc49 Cloud focuses on OpEx (operational expenditure, agility, and flexibility). \ud83d\udfe0 What is Total cost of Ownership (TCO)? Total Cost of Ownership (TCO) is a financial estimate that is intended to help buyers and owners determine the direct and indirect costs of a product or system. TCO includes the cost of a service, plus all the costs that are associated with owning the service. \u00bfWhy use TCO? To compare the costs of running an entire infrastructure environment or a specific workload on-premises versus on AWS. To budget and build the business case for moving to the cloud In resume, it helps to decide the most cost-effective deployment model. \ud83d\udfe0 TCO considerations Some of the costs that are associated with data center management include: Server costs for both hardware and software , and facilities costs to house the equipment. Storage costs for the hardware , administration, and facilities. Network costs for hardware , administration, and facilities. IT labor costs that are required to administer the entire solution . When you compare an on-premises to cloud solution, it is important to accurately assess the true costs of both options. With the cloud, most costs are upfront and readily calculated. For example, cloud providers give transparent pricing based on different usage metrics, such as RAM, storage, and bandwidth, among others. Pricing is frequently fixed per unit of time. Resume: Key cost categories for data center management: Servers : hardware, software, facilities. Storage : hardware, administration, facilities. Networking : hardware, administration, facilities. IT Labor : ongoing operations and administration. Cloud : Costs are upfront, transparent, based on metrics (RAM, storage, bandwidth). Easier to calculate and predict. On-Premises : Costs are harder to determine, must include: Direct costs : power, space, storage, IT operations. Indirect costs : network, storage infrastructure, security, software, facilities, taxes, upgrades, admin staff. \ud83d\udfe0 On-premises versus all-in-cloud On-Premises Setup : 1 VM, 4 CPUs, 16 GB RAM, Linux. 100% utilization, optimized by RAM. 3-year total cost : $167,422. AWS Setup : 1 m4.xlarge instance, 4 CPUs, 16 GB RAM. 3-year Partial Upfront Reserved Instance . 3-year total cost : $7,509. Savings : $159,913 (96% cheaper). \ud83d\udc49 On-premises \u2192 constant costs, even when unused. \ud83d\udc49 AWS \u2192 resources only billed when used, then decommissioned. \ud83d\udfe0 AWS Pricing Calculator AWS Pricing Calculator help you to estimate a monthly AWS bill. You can use this tool to explore AWS services and create an estimate for the cost of your use cases on AWS. The AWS Pricing Calculator helps you: Estimate monthly costs of AWS services Identify opportunities for cost reduction Model your solutions before building them Explore price points and calculations behind your estimate Find the available instance types and contract terms that meet your needs The AWS Pricing Calculator enables you to name your estimate and create and name groups of services. Groupsare containers that you add services to in order to organize and build your estimate. You can organize your groups and services by cost-center, department, product architecture, etc. \ud83d\udfe0 Reading an estimate AWS Pricing Calculator estimates are broken into: The total for your first 12 months \u2192 The total estimate for your current group and all of the services and groups in your current group. It combines the upfront and monthly estimates. Your total upfront \u2192 How much you are estimated to pay upfront as you set up your AWS stack. Your total monthly \u2192 How much you're estimated to spend every month while you run your AWS stack. Within a group, you can see how much each service is estimated to cost. If you want to price out different ways to build your AWS setup, you can use different groups for each variation of your setup and compare the estimates for the different setups. \ud83d\udfe0 Additional benefit considerations Hard benefits (direct, measurable): Lower spending on compute, storage, networking, security. Reduced hardware/software purchases. Lower operational costs (backup, disaster recovery). Reduced need for operations personnel. Soft benefits (indirect, harder to measure): Service/application reuse with cloud tools. Higher developer productivity. Improved customer satisfaction. Agile processes \u2192 faster response to opportunities. Increased global reach. \ud83d\udc49 A full ROI analysis should consider both hard and soft benefits .","title":"\u25fd\ufe0f Section 2 - Total Cost of Ownership"},{"location":"cloud-practitioner/module-2/m2_sec2/#module-2-cloud-economics-and-billing","text":"","title":"\ud83d\udcca Module 2 - Cloud Economics and Billing"},{"location":"cloud-practitioner/module-2/m2_sec2/#2-section-2-total-cost-of-ownership","text":"","title":"2\ufe0f\u20e3 Section 2: Total Cost of Ownership"},{"location":"cloud-practitioner/module-2/m2_sec2/#on-premises-vs-cloud","text":"On-Premises Infrastructure Installed locally on company hardware. High capital expenses : facilities, hardware, licenses, IT staff. Scaling up \u2192 expensive, time-consuming. Scaling down \u2192 fixed costs remain. Cloud Infrastructure Provided and maintained by AWS. Pay only for what you use ( consumption-based model ). Easy to scale up or down. Costs are transparent and easier to estimate. \ud83d\udc49 On-premises focuses on CapEx (capital expenditure, long planning cycles). \ud83d\udc49 Cloud focuses on OpEx (operational expenditure, agility, and flexibility).","title":"\ud83d\udfe0 On-premises vs. cloud"},{"location":"cloud-practitioner/module-2/m2_sec2/#what-is-total-cost-of-ownership-tco","text":"Total Cost of Ownership (TCO) is a financial estimate that is intended to help buyers and owners determine the direct and indirect costs of a product or system. TCO includes the cost of a service, plus all the costs that are associated with owning the service. \u00bfWhy use TCO? To compare the costs of running an entire infrastructure environment or a specific workload on-premises versus on AWS. To budget and build the business case for moving to the cloud In resume, it helps to decide the most cost-effective deployment model.","title":"\ud83d\udfe0 What is Total cost of Ownership (TCO)?"},{"location":"cloud-practitioner/module-2/m2_sec2/#tco-considerations","text":"Some of the costs that are associated with data center management include: Server costs for both hardware and software , and facilities costs to house the equipment. Storage costs for the hardware , administration, and facilities. Network costs for hardware , administration, and facilities. IT labor costs that are required to administer the entire solution . When you compare an on-premises to cloud solution, it is important to accurately assess the true costs of both options. With the cloud, most costs are upfront and readily calculated. For example, cloud providers give transparent pricing based on different usage metrics, such as RAM, storage, and bandwidth, among others. Pricing is frequently fixed per unit of time. Resume: Key cost categories for data center management: Servers : hardware, software, facilities. Storage : hardware, administration, facilities. Networking : hardware, administration, facilities. IT Labor : ongoing operations and administration. Cloud : Costs are upfront, transparent, based on metrics (RAM, storage, bandwidth). Easier to calculate and predict. On-Premises : Costs are harder to determine, must include: Direct costs : power, space, storage, IT operations. Indirect costs : network, storage infrastructure, security, software, facilities, taxes, upgrades, admin staff.","title":"\ud83d\udfe0 TCO considerations"},{"location":"cloud-practitioner/module-2/m2_sec2/#on-premises-versus-all-in-cloud","text":"On-Premises Setup : 1 VM, 4 CPUs, 16 GB RAM, Linux. 100% utilization, optimized by RAM. 3-year total cost : $167,422. AWS Setup : 1 m4.xlarge instance, 4 CPUs, 16 GB RAM. 3-year Partial Upfront Reserved Instance . 3-year total cost : $7,509. Savings : $159,913 (96% cheaper). \ud83d\udc49 On-premises \u2192 constant costs, even when unused. \ud83d\udc49 AWS \u2192 resources only billed when used, then decommissioned.","title":"\ud83d\udfe0 On-premises versus all-in-cloud"},{"location":"cloud-practitioner/module-2/m2_sec2/#aws-pricing-calculator","text":"AWS Pricing Calculator help you to estimate a monthly AWS bill. You can use this tool to explore AWS services and create an estimate for the cost of your use cases on AWS. The AWS Pricing Calculator helps you: Estimate monthly costs of AWS services Identify opportunities for cost reduction Model your solutions before building them Explore price points and calculations behind your estimate Find the available instance types and contract terms that meet your needs The AWS Pricing Calculator enables you to name your estimate and create and name groups of services. Groupsare containers that you add services to in order to organize and build your estimate. You can organize your groups and services by cost-center, department, product architecture, etc.","title":"\ud83d\udfe0 AWS Pricing Calculator"},{"location":"cloud-practitioner/module-2/m2_sec2/#reading-an-estimate","text":"AWS Pricing Calculator estimates are broken into: The total for your first 12 months \u2192 The total estimate for your current group and all of the services and groups in your current group. It combines the upfront and monthly estimates. Your total upfront \u2192 How much you are estimated to pay upfront as you set up your AWS stack. Your total monthly \u2192 How much you're estimated to spend every month while you run your AWS stack. Within a group, you can see how much each service is estimated to cost. If you want to price out different ways to build your AWS setup, you can use different groups for each variation of your setup and compare the estimates for the different setups.","title":"\ud83d\udfe0 Reading an estimate"},{"location":"cloud-practitioner/module-2/m2_sec2/#additional-benefit-considerations","text":"Hard benefits (direct, measurable): Lower spending on compute, storage, networking, security. Reduced hardware/software purchases. Lower operational costs (backup, disaster recovery). Reduced need for operations personnel. Soft benefits (indirect, harder to measure): Service/application reuse with cloud tools. Higher developer productivity. Improved customer satisfaction. Agile processes \u2192 faster response to opportunities. Increased global reach. \ud83d\udc49 A full ROI analysis should consider both hard and soft benefits .","title":"\ud83d\udfe0 Additional benefit considerations"},{"location":"cloud-practitioner/module-2/m2_sec3/","text":"\ud83d\udcca Module 2 - Cloud Economics and Billing 3\ufe0f\u20e3 Section 3: AWS Organizations \ud83d\udfe0 Introduction to AWS Organizations AWS Organizations \u2192 account management service that enables you to consolidate multiple AWS accounts into anorganizationthat you create and centrally manage. AWS Organizations include consolidated billing and account management capabilities that help you to better meet the budgetary, security, and compliance needs of your business. Key benefits : Centrally managed access policies across multiple AWS accounts. Controlled access to AWS services. Automated AWS account creation and management. Consolidated billing across multiple AWS accounts. \ud83d\udfe0 AWS Organizations terminology Hereis some terminology to understand the structure of AWS Organizations. Root : the top-level container for the organization. Organizational Unit (OU) : A container for accounts within a root. OUs can contain other OUs (tree-like hierarchy). Policies attached to a node flow down to all children. Account : a standard AWS account holding resources. Policies : Can be attached at root, OU, or account level. Affect all IAM users, groups, and roles inside that account. Rules: An OU has only one parent. An account belongs to exactly one OU. \ud83d\udfe0 Key features and benefits AWS Organizations enables you to: Create Service Control Policies (SCPs) that centrally control AWS services across multiple AWS accounts. Create groups of accounts and then attach policies to a group to ensure that the correct policies are applied across the accounts. Simplify account management by using application programming interfaces (APIs) to automate the creation and management of new AWS accounts. Simplify billing with a single payment method for all accounts: Combined view of charges. Access to volume discounts through aggregated usage. With consolidated billing, you can see a combined view of charges that are incurred by all your accounts, and you can take advantage of pricing benefits from aggregated usage. Consolidated billing provides a central location to manage billing across all of your AWS accounts, and the ability to benefit from volume discounts. \ud83d\udfe0 Security with AWS Organizations IAM Policies : Allow/deny access to services, resources, or API actions. Apply to IAM users, groups, and roles. Cannot restrict the root user of an account. SCPs (Service Control Policies) : Apply at the organization level (root, OU, or account). Restrict/allow services across accounts. Affect all identities (users, groups, roles) including root user . \ud83d\udc49 IAM = access control inside an account. \ud83d\udc49 SCPs = broader guardrails across multiple accounts. \ud83d\udfe0 Organizations setup Keep in mind that this process assumes that you have access to two existing AWS accounts, and that you can sign in to each account as an administrator. Review these steps forsetting up AWS Organizations: Step 1 \u2192 Create an organization using your main AWS account (becomes the management account). Invite or create member accounts. Step 2 \u2192 create two organizational units in your new organization and place the member accounts in those OUs. Step 3 \u2192 create service control policies, which enable you to apply restrictions to what actions can be delegated to users and roles in the member accounts. A service control policy is a type of organization control policy. Step 4 \u2192 Test policies by signing in as users or using the IAM policy simulator. \ud83d\udfe0 Limits of AWS Organizations Naming : Unicode, max 250 characters. Entities & limits : Accounts: varies. Roots: 1. OUs: up to 1,000. Policies: up to 1,000. Policy document size: max 5,120 bytes. Max OU nesting: 5 levels. Invitations per day: 20. Member accounts created concurrently: 5. Policies can be attached to unlimited entities. \ud83d\udfe0 Accessing AWS Organizations You can manage Organizations through: AWS Management Console \u2192 web-based UI. AWS CLI \u2192 faster, command-line management. AWS SDKs \u2192 programmatic access with libraries for Java, Python, Ruby, .NET, iOS, Android, etc. HTTPS Query API \u2192 direct API calls (requires digitally signed requests).","title":"\u25fd\ufe0f Section 3 - AWS Organizations"},{"location":"cloud-practitioner/module-2/m2_sec3/#module-2-cloud-economics-and-billing","text":"","title":"\ud83d\udcca Module 2 - Cloud Economics and Billing"},{"location":"cloud-practitioner/module-2/m2_sec3/#3-section-3-aws-organizations","text":"","title":"3\ufe0f\u20e3 Section 3: AWS Organizations"},{"location":"cloud-practitioner/module-2/m2_sec3/#introduction-to-aws-organizations","text":"AWS Organizations \u2192 account management service that enables you to consolidate multiple AWS accounts into anorganizationthat you create and centrally manage. AWS Organizations include consolidated billing and account management capabilities that help you to better meet the budgetary, security, and compliance needs of your business. Key benefits : Centrally managed access policies across multiple AWS accounts. Controlled access to AWS services. Automated AWS account creation and management. Consolidated billing across multiple AWS accounts.","title":"\ud83d\udfe0 Introduction to AWS Organizations"},{"location":"cloud-practitioner/module-2/m2_sec3/#aws-organizations-terminology","text":"Hereis some terminology to understand the structure of AWS Organizations. Root : the top-level container for the organization. Organizational Unit (OU) : A container for accounts within a root. OUs can contain other OUs (tree-like hierarchy). Policies attached to a node flow down to all children. Account : a standard AWS account holding resources. Policies : Can be attached at root, OU, or account level. Affect all IAM users, groups, and roles inside that account. Rules: An OU has only one parent. An account belongs to exactly one OU.","title":"\ud83d\udfe0 AWS Organizations terminology"},{"location":"cloud-practitioner/module-2/m2_sec3/#key-features-and-benefits","text":"AWS Organizations enables you to: Create Service Control Policies (SCPs) that centrally control AWS services across multiple AWS accounts. Create groups of accounts and then attach policies to a group to ensure that the correct policies are applied across the accounts. Simplify account management by using application programming interfaces (APIs) to automate the creation and management of new AWS accounts. Simplify billing with a single payment method for all accounts: Combined view of charges. Access to volume discounts through aggregated usage. With consolidated billing, you can see a combined view of charges that are incurred by all your accounts, and you can take advantage of pricing benefits from aggregated usage. Consolidated billing provides a central location to manage billing across all of your AWS accounts, and the ability to benefit from volume discounts.","title":"\ud83d\udfe0 Key features and benefits"},{"location":"cloud-practitioner/module-2/m2_sec3/#security-with-aws-organizations","text":"IAM Policies : Allow/deny access to services, resources, or API actions. Apply to IAM users, groups, and roles. Cannot restrict the root user of an account. SCPs (Service Control Policies) : Apply at the organization level (root, OU, or account). Restrict/allow services across accounts. Affect all identities (users, groups, roles) including root user . \ud83d\udc49 IAM = access control inside an account. \ud83d\udc49 SCPs = broader guardrails across multiple accounts.","title":"\ud83d\udfe0 Security with AWS Organizations"},{"location":"cloud-practitioner/module-2/m2_sec3/#organizations-setup","text":"Keep in mind that this process assumes that you have access to two existing AWS accounts, and that you can sign in to each account as an administrator. Review these steps forsetting up AWS Organizations: Step 1 \u2192 Create an organization using your main AWS account (becomes the management account). Invite or create member accounts. Step 2 \u2192 create two organizational units in your new organization and place the member accounts in those OUs. Step 3 \u2192 create service control policies, which enable you to apply restrictions to what actions can be delegated to users and roles in the member accounts. A service control policy is a type of organization control policy. Step 4 \u2192 Test policies by signing in as users or using the IAM policy simulator.","title":"\ud83d\udfe0 Organizations setup"},{"location":"cloud-practitioner/module-2/m2_sec3/#limits-of-aws-organizations","text":"Naming : Unicode, max 250 characters. Entities & limits : Accounts: varies. Roots: 1. OUs: up to 1,000. Policies: up to 1,000. Policy document size: max 5,120 bytes. Max OU nesting: 5 levels. Invitations per day: 20. Member accounts created concurrently: 5. Policies can be attached to unlimited entities.","title":"\ud83d\udfe0 Limits of AWS Organizations"},{"location":"cloud-practitioner/module-2/m2_sec3/#accessing-aws-organizations","text":"You can manage Organizations through: AWS Management Console \u2192 web-based UI. AWS CLI \u2192 faster, command-line management. AWS SDKs \u2192 programmatic access with libraries for Java, Python, Ruby, .NET, iOS, Android, etc. HTTPS Query API \u2192 direct API calls (requires digitally signed requests).","title":"\ud83d\udfe0 Accessing AWS Organizations"},{"location":"cloud-practitioner/module-2/m2_sec4/","text":"\ud83d\udcca Module 2 - Cloud Economics and Billing 4\ufe0f\u20e3 Section 4: AWS Billing and Cost Management \ud83d\udfe0 Introducing AWS Billing and Cost Management AWS Billing and Cost Management \u2192 service that you use to pay your AWS bill, monitor your usage, and budget your costs. Billing and Cost Management enables you to forecast and obtain a better idea of what your costs and usage might be in the future so that you can plan ahead. Features: Custom time periods (daily or monthly view). Filtering and grouping of data by dimensions. AWS Cost and Usage Report Tool \u2192 detailed insights to identify optimization opportunities. \ud83d\udfe0 AWS Billing Dashboard Central view of AWS expenditure. Key graphs: Spend Summary \u2192 past month spending, current month-to-date, forecast for this month. Month-to-Date Spend by Service \u2192 shows top services used and their cost proportions. \ud83d\udfe0 Tools Accessible from the billing dashboard: AWS Bills AWS Cost Explorer AWS Budgets AWS Cost and Usage Reports \ud83d\udfe0 Monthly Bills Provides detailed breakdown of costs: By AWS service. By AWS Region. By linked account. Most up-to-date source for monthly bill and usage information . \ud83d\udfe0 Cost Explorer The AWS Billing and Cost Management console includes the Cost Explorer page for viewing your AWS cost data as a graph. Tool for visualizing and analyzing AWS cost and usage over time. Default report shows top cost-incurring services . Monthly running costs \u2192 overview of last 3 months + forecast for next month (with confidence interval). Cost Explorer enables you to: View charts of your costs. View cost data for the past 13 months. Forecast how much you are likely to spend over the next 3 months. Discover patterns in how much you spend on AWS resources over time and identify costproblem areas. Identify the services that you use the most View metrics, like which Availability Zones have the most traffic or which linked AWS account is used the most. \ud83d\udfe0 Forecast and track costs AWS Budgets \u2192 uses the cost visualization that is provided by Cost Explorer to show you the status of your budgets and to provide forecasts of your estimated costs. Lets you: Track budgets at monthly, quarterly, or yearly levels. Customize start and end dates. Set alerts when actual or forecasted costs exceed budget . Notifications sent via email or Amazon SNS . \ud83d\udfe0 Cost and usage reporting The AWS Cost and Usage Report is a single location for accessing comprehensive information about your AWS costs and usage. This tool lists the usage for each service category that is used by an account (and its users) in hourly or daily line items, and any tax that you activated for tax allocation purposes. You can choose to have AWS to publish billing reports to an S3 bucket. These reports can be updated once a day. Resume: Most comprehensive cost/usage data in AWS. Provides detailed hourly/daily line items by: Service category. Account/user usage. Tax allocations (if enabled). Reports can be delivered automatically to an S3 bucket , updated daily .","title":"\u25fd\ufe0f Section 4 - AWS Billing and Cost Management"},{"location":"cloud-practitioner/module-2/m2_sec4/#module-2-cloud-economics-and-billing","text":"","title":"\ud83d\udcca Module 2 - Cloud Economics and Billing"},{"location":"cloud-practitioner/module-2/m2_sec4/#4-section-4-aws-billing-and-cost-management","text":"","title":"4\ufe0f\u20e3 Section 4: AWS Billing and Cost Management"},{"location":"cloud-practitioner/module-2/m2_sec4/#introducing-aws-billing-and-cost-management","text":"AWS Billing and Cost Management \u2192 service that you use to pay your AWS bill, monitor your usage, and budget your costs. Billing and Cost Management enables you to forecast and obtain a better idea of what your costs and usage might be in the future so that you can plan ahead. Features: Custom time periods (daily or monthly view). Filtering and grouping of data by dimensions. AWS Cost and Usage Report Tool \u2192 detailed insights to identify optimization opportunities.","title":"\ud83d\udfe0 Introducing AWS Billing and Cost Management"},{"location":"cloud-practitioner/module-2/m2_sec4/#aws-billing-dashboard","text":"Central view of AWS expenditure. Key graphs: Spend Summary \u2192 past month spending, current month-to-date, forecast for this month. Month-to-Date Spend by Service \u2192 shows top services used and their cost proportions.","title":"\ud83d\udfe0 AWS Billing Dashboard"},{"location":"cloud-practitioner/module-2/m2_sec4/#tools","text":"Accessible from the billing dashboard: AWS Bills AWS Cost Explorer AWS Budgets AWS Cost and Usage Reports","title":"\ud83d\udfe0 Tools"},{"location":"cloud-practitioner/module-2/m2_sec4/#monthly-bills","text":"Provides detailed breakdown of costs: By AWS service. By AWS Region. By linked account. Most up-to-date source for monthly bill and usage information .","title":"\ud83d\udfe0 Monthly Bills"},{"location":"cloud-practitioner/module-2/m2_sec4/#cost-explorer","text":"The AWS Billing and Cost Management console includes the Cost Explorer page for viewing your AWS cost data as a graph. Tool for visualizing and analyzing AWS cost and usage over time. Default report shows top cost-incurring services . Monthly running costs \u2192 overview of last 3 months + forecast for next month (with confidence interval). Cost Explorer enables you to: View charts of your costs. View cost data for the past 13 months. Forecast how much you are likely to spend over the next 3 months. Discover patterns in how much you spend on AWS resources over time and identify costproblem areas. Identify the services that you use the most View metrics, like which Availability Zones have the most traffic or which linked AWS account is used the most.","title":"\ud83d\udfe0 Cost Explorer"},{"location":"cloud-practitioner/module-2/m2_sec4/#forecast-and-track-costs","text":"AWS Budgets \u2192 uses the cost visualization that is provided by Cost Explorer to show you the status of your budgets and to provide forecasts of your estimated costs. Lets you: Track budgets at monthly, quarterly, or yearly levels. Customize start and end dates. Set alerts when actual or forecasted costs exceed budget . Notifications sent via email or Amazon SNS .","title":"\ud83d\udfe0 Forecast and track costs"},{"location":"cloud-practitioner/module-2/m2_sec4/#cost-and-usage-reporting","text":"The AWS Cost and Usage Report is a single location for accessing comprehensive information about your AWS costs and usage. This tool lists the usage for each service category that is used by an account (and its users) in hourly or daily line items, and any tax that you activated for tax allocation purposes. You can choose to have AWS to publish billing reports to an S3 bucket. These reports can be updated once a day. Resume: Most comprehensive cost/usage data in AWS. Provides detailed hourly/daily line items by: Service category. Account/user usage. Tax allocations (if enabled). Reports can be delivered automatically to an S3 bucket , updated daily .","title":"\ud83d\udfe0 Cost and usage reporting"},{"location":"cloud-practitioner/module-2/m2_sec5/","text":"\ud83d\udcca Module 2 - Cloud Economics and Billing 5\ufe0f\u20e3 Section 5: Technical support \ud83d\udfe0 AWS support (1 of 2) AWS Support can provide you with a unique combination of tools and expertise based on your current or future planned use cases AWS Support provides tools + expertise tailored to customer needs. Covers all types of customers: Experimenting with AWS. Running production workloads. Using AWS for mission-critical business operations. Goal: enable customers to plan, deploy, and optimize with confiden \ud83d\udfe0 AWS support (2 of 2) With AWS, customers can plan, deploy, and optimize with confidence. If you would like proactive guidance, AWS Support has Technical Account Managers (TAMs)who are designated as that user\u2019s primary point of contact. The TAM can provide guidance, architectural review, and continuous ongoing communication to keep you informed and prepared as you plan, deploy, and optimize your solutions. If you want to ensure that you follow best practices to increase performance and fault tolerance in the AWS environment, AWS SupporthasAWS Trusted Advisor. AWS Trusted Advisor is like a customized cloud expert.It is an online resource that checks for opportunities to reduce monthly expenditures and increase productivity. For account assistance, the Support Concierge is a billing and account expert who will provide quick and efficient analysis on billing and account issues. The concierge addresses all non-technical billing and account-level inquiries. \ud83d\udfe0 Support plans AWS wants you to be able to plan, deploy, and optimize with confidence. We have developed specific plans to support you, including Basic, Developer, Business, and Enterprise support plans. Basic Support (free) 24/7 access to customer service, docs, whitepapers, forums. 6 core Trusted Advisor checks. Personal Health Dashboard. \u274c No technical case support. Developer Support For testing/early development. Technical guidance available. Best for non-production workloads . Business Support For production workloads . Suitable for organizations using multiple key AWS services extensively. Ensures workloads are available, scalable, and secure . Enterprise Support For mission-critical workloads . Focus on proactive management and best practices. Includes TAM with deep knowledge of your use case and architecture. Supports launches, migrations, and continuous optimization. \ud83d\udfe0 Case severity and response times It addition to understanding the costs that are associated with different support plans, it is critical that you understand the service levels that are associated with each plan. In addition to the support plan you select, the case severity will drive the type of response that you receive. There are five different severity levels: Critical \u2192 Business at risk, critical app functions unavailable. Urgent \u2192 Significant impact, important app functions unavailable. High \u2192 Important functions impaired or degraded. Normal \u2192 Non-critical functions abnormal, or time-sensitive dev question. Low \u2192 General dev question or feature request. \ud83d\udc49 Basic Support Plan does not include case support . \ud83d\udc49 Higher plans ensure faster response times according to severity.","title":"\u25fd\ufe0f Section 5 - Technical support"},{"location":"cloud-practitioner/module-2/m2_sec5/#module-2-cloud-economics-and-billing","text":"","title":"\ud83d\udcca Module 2 - Cloud Economics and Billing"},{"location":"cloud-practitioner/module-2/m2_sec5/#5-section-5-technical-support","text":"","title":"5\ufe0f\u20e3 Section 5: Technical support"},{"location":"cloud-practitioner/module-2/m2_sec5/#aws-support-1-of-2","text":"AWS Support can provide you with a unique combination of tools and expertise based on your current or future planned use cases AWS Support provides tools + expertise tailored to customer needs. Covers all types of customers: Experimenting with AWS. Running production workloads. Using AWS for mission-critical business operations. Goal: enable customers to plan, deploy, and optimize with confiden","title":"\ud83d\udfe0 AWS support (1 of 2)"},{"location":"cloud-practitioner/module-2/m2_sec5/#aws-support-2-of-2","text":"With AWS, customers can plan, deploy, and optimize with confidence. If you would like proactive guidance, AWS Support has Technical Account Managers (TAMs)who are designated as that user\u2019s primary point of contact. The TAM can provide guidance, architectural review, and continuous ongoing communication to keep you informed and prepared as you plan, deploy, and optimize your solutions. If you want to ensure that you follow best practices to increase performance and fault tolerance in the AWS environment, AWS SupporthasAWS Trusted Advisor. AWS Trusted Advisor is like a customized cloud expert.It is an online resource that checks for opportunities to reduce monthly expenditures and increase productivity. For account assistance, the Support Concierge is a billing and account expert who will provide quick and efficient analysis on billing and account issues. The concierge addresses all non-technical billing and account-level inquiries.","title":"\ud83d\udfe0 AWS support (2 of 2)"},{"location":"cloud-practitioner/module-2/m2_sec5/#support-plans","text":"AWS wants you to be able to plan, deploy, and optimize with confidence. We have developed specific plans to support you, including Basic, Developer, Business, and Enterprise support plans. Basic Support (free) 24/7 access to customer service, docs, whitepapers, forums. 6 core Trusted Advisor checks. Personal Health Dashboard. \u274c No technical case support. Developer Support For testing/early development. Technical guidance available. Best for non-production workloads . Business Support For production workloads . Suitable for organizations using multiple key AWS services extensively. Ensures workloads are available, scalable, and secure . Enterprise Support For mission-critical workloads . Focus on proactive management and best practices. Includes TAM with deep knowledge of your use case and architecture. Supports launches, migrations, and continuous optimization.","title":"\ud83d\udfe0 Support plans"},{"location":"cloud-practitioner/module-2/m2_sec5/#case-severity-and-response-times","text":"It addition to understanding the costs that are associated with different support plans, it is critical that you understand the service levels that are associated with each plan. In addition to the support plan you select, the case severity will drive the type of response that you receive. There are five different severity levels: Critical \u2192 Business at risk, critical app functions unavailable. Urgent \u2192 Significant impact, important app functions unavailable. High \u2192 Important functions impaired or degraded. Normal \u2192 Non-critical functions abnormal, or time-sensitive dev question. Low \u2192 General dev question or feature request. \ud83d\udc49 Basic Support Plan does not include case support . \ud83d\udc49 Higher plans ensure faster response times according to severity.","title":"\ud83d\udfe0 Case severity and response times"},{"location":"cloud-practitioner/module-3/m3_sec1/","text":"\ud83c\udf0e Module 3 - AWS Global Infrastructure Overview 1\ufe0f\u20e3 Section 1: AWS Global Infrastructure \ud83d\udfe0 AWS Global Infrastructure Designed for: flexibility, reliability, scalability, security . Provides high-quality global network performance . \ud83d\udfe0 AWS Regions AWS has 22 Regions worldwide . Region = geographical location with one or more Availability Zones (AZs) . Availability Zones = one or more data centers . Isolation : Regions are independent for fault tolerance and stability . Resources are not automatically replicated across Regions. If replication is required, the customer is responsible . Region enablement : Regions before March 20, 2019 \u2192 enabled by default. Regions after (e.g., Hong Kong, Bahrain) \u2192 must be manually enabled. Restricted Regions : China (Beijing, Ningxia) \u2192 only with AWS China accounts. AWS GovCloud (US) \u2192 for US government workloads, regulatory compliance. \ud83d\udfe0 Selecting a Region When choosing a Region, consider: Data governance & legal requirements Example: EU Data Protection Directive may restrict where data can be stored. Latency Best practice: choose a Region closest to your users/systems . Tool: CloudPing \u2192 measure latency to Regions. Service availability Not all services are in all Regions \u2192 check before deploying. Cost variation Example (On-Demand EC2 t3.medium, Linux): US East (Ohio) : $0.0416/hour Asia Pacific (Tokyo) : $0.0544/hour \ud83d\udfe0 Availability Zones Each Region has multiple AZs (usually 3). AZ features : Isolated locations with their own power and infrastructure. Physically separated by many kilometers , but within 100 km . Contain multiple data centers (up to hundreds of thousands of servers). Connected with high-bandwidth, low-latency, redundant fiber . Support synchronous replication . Benefits : Build apps that are highly available, fault tolerant, and scalable . Protects against local disasters (e.g., lightning, tornadoes, earthquakes). Best practices : Distribute systems across multiple AZs . Design apps to survive temporary or prolonged AZ failures . \ud83d\udfe0 AWS data centers Most granular choice customers can make = AZ , not individual data centers. Data centers = actual physical sites where data resides. Design principles : Sites chosen to reduce environmental risk . Redundant design anticipating/tolerating failures. Critical systems backed up across AZs . Continuous monitoring ensures capacity. Locations are undisclosed and access is restricted. Automated failover \u2192 reroutes traffic during failures. Technology : AWS uses custom-built networking equipment from multiple Original Device Manufacturers (ODMs) . \ud83d\udfe0 Points of Presence Amazon CloudFront is a content delivery network (CDN) used to distribute content to end users to reduce latency. Amazon Route 53 is a Domain Name System (DNS) service.Requests going to either one of these services will be routed to the nearest edge location automatically in order to lower latency. Support services like: Amazon CloudFront (CDN). Amazon Route 53 (DNS). AWS Shield . AWS WAF . Located in major cities worldwide . Purpose: Route requests to the nearest edge location to reduce latency. Continuously optimize connectivity and routing. Regional Edge Caches : Store less frequently accessed content. Reduce need to fetch data from the origin server. \ud83d\udfe0 AWS infrastructure features The AWS Global Infrastructure has several valuable features: First, it is elasticand scalable. This means resources can dynamically adjust to increases or decreases in capacity requirements. It can also rapidly adjust to accommodate growth. Second, this infrastructure is fault tolerant, which means it has built-in component redundancy which enables it to continue operations despite a failed component. Finally, it requires minimal to no human intervention, while providing high availability with minimal down time. Resume: Elastic & Scalable \u2192 resources adjust dynamically to demand. Fault Tolerant \u2192 redundancy ensures continued operation despite failures. Highly Available & Automated \u2192 minimal downtime, minimal human intervention.","title":"\u25fd\ufe0f Section 1 - AWS Global Infrastructure"},{"location":"cloud-practitioner/module-3/m3_sec1/#module-3-aws-global-infrastructure-overview","text":"","title":"\ud83c\udf0e Module 3 - AWS Global Infrastructure Overview"},{"location":"cloud-practitioner/module-3/m3_sec1/#1-section-1-aws-global-infrastructure","text":"","title":"1\ufe0f\u20e3 Section 1: AWS Global Infrastructure"},{"location":"cloud-practitioner/module-3/m3_sec1/#aws-global-infrastructure","text":"Designed for: flexibility, reliability, scalability, security . Provides high-quality global network performance .","title":"\ud83d\udfe0 AWS Global Infrastructure"},{"location":"cloud-practitioner/module-3/m3_sec1/#aws-regions","text":"AWS has 22 Regions worldwide . Region = geographical location with one or more Availability Zones (AZs) . Availability Zones = one or more data centers . Isolation : Regions are independent for fault tolerance and stability . Resources are not automatically replicated across Regions. If replication is required, the customer is responsible . Region enablement : Regions before March 20, 2019 \u2192 enabled by default. Regions after (e.g., Hong Kong, Bahrain) \u2192 must be manually enabled. Restricted Regions : China (Beijing, Ningxia) \u2192 only with AWS China accounts. AWS GovCloud (US) \u2192 for US government workloads, regulatory compliance.","title":"\ud83d\udfe0 AWS Regions"},{"location":"cloud-practitioner/module-3/m3_sec1/#selecting-a-region","text":"When choosing a Region, consider: Data governance & legal requirements Example: EU Data Protection Directive may restrict where data can be stored. Latency Best practice: choose a Region closest to your users/systems . Tool: CloudPing \u2192 measure latency to Regions. Service availability Not all services are in all Regions \u2192 check before deploying. Cost variation Example (On-Demand EC2 t3.medium, Linux): US East (Ohio) : $0.0416/hour Asia Pacific (Tokyo) : $0.0544/hour","title":"\ud83d\udfe0 Selecting a Region"},{"location":"cloud-practitioner/module-3/m3_sec1/#availability-zones","text":"Each Region has multiple AZs (usually 3). AZ features : Isolated locations with their own power and infrastructure. Physically separated by many kilometers , but within 100 km . Contain multiple data centers (up to hundreds of thousands of servers). Connected with high-bandwidth, low-latency, redundant fiber . Support synchronous replication . Benefits : Build apps that are highly available, fault tolerant, and scalable . Protects against local disasters (e.g., lightning, tornadoes, earthquakes). Best practices : Distribute systems across multiple AZs . Design apps to survive temporary or prolonged AZ failures .","title":"\ud83d\udfe0 Availability Zones"},{"location":"cloud-practitioner/module-3/m3_sec1/#aws-data-centers","text":"Most granular choice customers can make = AZ , not individual data centers. Data centers = actual physical sites where data resides. Design principles : Sites chosen to reduce environmental risk . Redundant design anticipating/tolerating failures. Critical systems backed up across AZs . Continuous monitoring ensures capacity. Locations are undisclosed and access is restricted. Automated failover \u2192 reroutes traffic during failures. Technology : AWS uses custom-built networking equipment from multiple Original Device Manufacturers (ODMs) .","title":"\ud83d\udfe0 AWS data centers"},{"location":"cloud-practitioner/module-3/m3_sec1/#points-of-presence","text":"Amazon CloudFront is a content delivery network (CDN) used to distribute content to end users to reduce latency. Amazon Route 53 is a Domain Name System (DNS) service.Requests going to either one of these services will be routed to the nearest edge location automatically in order to lower latency. Support services like: Amazon CloudFront (CDN). Amazon Route 53 (DNS). AWS Shield . AWS WAF . Located in major cities worldwide . Purpose: Route requests to the nearest edge location to reduce latency. Continuously optimize connectivity and routing. Regional Edge Caches : Store less frequently accessed content. Reduce need to fetch data from the origin server.","title":"\ud83d\udfe0 Points of Presence"},{"location":"cloud-practitioner/module-3/m3_sec1/#aws-infrastructure-features","text":"The AWS Global Infrastructure has several valuable features: First, it is elasticand scalable. This means resources can dynamically adjust to increases or decreases in capacity requirements. It can also rapidly adjust to accommodate growth. Second, this infrastructure is fault tolerant, which means it has built-in component redundancy which enables it to continue operations despite a failed component. Finally, it requires minimal to no human intervention, while providing high availability with minimal down time. Resume: Elastic & Scalable \u2192 resources adjust dynamically to demand. Fault Tolerant \u2192 redundancy ensures continued operation despite failures. Highly Available & Automated \u2192 minimal downtime, minimal human intervention.","title":"\ud83d\udfe0 AWS infrastructure features"},{"location":"cloud-practitioner/module-3/m3_sec2/","text":"\ud83c\udf0e Module 3 - AWS Global Infrastructure Overview 2\ufe0f\u20e3 Section 2: AWS services and service category overview \ud83d\udfe0 AWS foundational services Built on: Regions, AZs, PoPs . Deliver: networking, compute, storage, databases . On-demand utility \u2192 available in seconds, pay-as-you-go . \ud83d\udfe0 AWS categories of services AWS has 23 service categories . Exam focus categories: Compute Storage Database Networking & Content Delivery Security, Identity & Compliance Management & Governance Cost Management \ud83d\udfe0 Storage service category Amazon S3 \u2192 object storage, scalable, secure, used for web apps, backup, IoT, analytics. Amazon EBS \u2192 block storage for EC2, high performance, used for DBs, analytics, containers. Amazon EFS \u2192 managed NFS file system, scales to petabytes, grows/shrinks automatically. Amazon S3 Glacier \u2192 low-cost archival storage, 11 9s durability, compliance. \ud83d\udfe0 Compute service category Amazon EC2 \u2192 resizable compute capacity (VMs). EC2 Auto Scaling \u2192 adjust instances based on conditions. Amazon ECS \u2192 container orchestration for Docker. Amazon ECR \u2192 container registry for Docker images. Elastic Beanstalk \u2192 simple web app deployment. AWS Lambda \u2192 run code without servers (serverless), pay per execution. Amazon EKS \u2192 managed Kubernetes service. AWS Fargate \u2192 run containers without managing servers/clusters. \ud83d\udfe0 Database service category Amazon RDS \u2192 managed relational DB, automates provisioning, patching, backups. Amazon Aurora \u2192 MySQL/PostgreSQL-compatible, 3\u20135x faster than standard DBs. Amazon Redshift \u2192 petabyte-scale data warehouse, queries on Redshift + S3. Amazon DynamoDB \u2192 key-value/document NoSQL DB, millisecond latency, built-in security. \ud83d\udfe0 Networking and content delivery service category Amazon VPC \u2192 isolated networks in the AWS Cloud. Elastic Load Balancing (ELB) \u2192 distributes traffic across multiple resources. Amazon CloudFront \u2192 global CDN, low latency content delivery. AWS Transit Gateway \u2192 connect VPCs and on-prem networks to one gateway. Amazon Route 53 \u2192 scalable DNS service, routes domains to apps. AWS Direct Connect \u2192 dedicated private connection to AWS. AWS VPN \u2192 secure tunnels to AWS. \ud83d\udfe0 Security, identity and compliance service category IAM \u2192 manage users, groups, permissions. AWS Organizations \u2192 multi-account management with SCPs. Amazon Cognito \u2192 user authentication and access for apps. AWS Artifact \u2192 compliance/security reports and agreements. AWS KMS \u2192 encryption key management. AWS Shield \u2192 managed DDoS protection. \ud83d\udfe0 AWS cost management service category AWS Cost and Usage Report \u2192 detailed billing and usage. AWS Budgets \u2192 alerts when forecasted/actual usage exceeds budget. AWS Cost Explorer \u2192 visualize and analyze costs. \ud83d\udfe0 Management and governance service category AWS Management Console \u2192 web-based management interface. AWS Config \u2192 track resource inventory and changes. Amazon CloudWatch \u2192 monitor resources and apps. AWS Auto Scaling \u2192 scale multiple resources dynamically. AWS CLI \u2192 unified command-line management tool. AWS Trusted Advisor \u2192 optimization insights (cost, performance, security). AWS Well-Architected Tool \u2192 review workloads against best practices. AWS CloudTrail \u2192 track API calls and user activity.","title":"\u25fd\ufe0f Section 2 - AWS services and service category overview"},{"location":"cloud-practitioner/module-3/m3_sec2/#module-3-aws-global-infrastructure-overview","text":"","title":"\ud83c\udf0e Module 3 - AWS Global Infrastructure Overview"},{"location":"cloud-practitioner/module-3/m3_sec2/#2-section-2-aws-services-and-service-category-overview","text":"","title":"2\ufe0f\u20e3 Section 2: AWS services and service category overview"},{"location":"cloud-practitioner/module-3/m3_sec2/#aws-foundational-services","text":"Built on: Regions, AZs, PoPs . Deliver: networking, compute, storage, databases . On-demand utility \u2192 available in seconds, pay-as-you-go .","title":"\ud83d\udfe0 AWS foundational services"},{"location":"cloud-practitioner/module-3/m3_sec2/#aws-categories-of-services","text":"AWS has 23 service categories . Exam focus categories: Compute Storage Database Networking & Content Delivery Security, Identity & Compliance Management & Governance Cost Management","title":"\ud83d\udfe0 AWS categories of services"},{"location":"cloud-practitioner/module-3/m3_sec2/#storage-service-category","text":"Amazon S3 \u2192 object storage, scalable, secure, used for web apps, backup, IoT, analytics. Amazon EBS \u2192 block storage for EC2, high performance, used for DBs, analytics, containers. Amazon EFS \u2192 managed NFS file system, scales to petabytes, grows/shrinks automatically. Amazon S3 Glacier \u2192 low-cost archival storage, 11 9s durability, compliance.","title":"\ud83d\udfe0 Storage service category"},{"location":"cloud-practitioner/module-3/m3_sec2/#compute-service-category","text":"Amazon EC2 \u2192 resizable compute capacity (VMs). EC2 Auto Scaling \u2192 adjust instances based on conditions. Amazon ECS \u2192 container orchestration for Docker. Amazon ECR \u2192 container registry for Docker images. Elastic Beanstalk \u2192 simple web app deployment. AWS Lambda \u2192 run code without servers (serverless), pay per execution. Amazon EKS \u2192 managed Kubernetes service. AWS Fargate \u2192 run containers without managing servers/clusters.","title":"\ud83d\udfe0 Compute service category"},{"location":"cloud-practitioner/module-3/m3_sec2/#database-service-category","text":"Amazon RDS \u2192 managed relational DB, automates provisioning, patching, backups. Amazon Aurora \u2192 MySQL/PostgreSQL-compatible, 3\u20135x faster than standard DBs. Amazon Redshift \u2192 petabyte-scale data warehouse, queries on Redshift + S3. Amazon DynamoDB \u2192 key-value/document NoSQL DB, millisecond latency, built-in security.","title":"\ud83d\udfe0 Database service category"},{"location":"cloud-practitioner/module-3/m3_sec2/#networking-and-content-delivery-service-category","text":"Amazon VPC \u2192 isolated networks in the AWS Cloud. Elastic Load Balancing (ELB) \u2192 distributes traffic across multiple resources. Amazon CloudFront \u2192 global CDN, low latency content delivery. AWS Transit Gateway \u2192 connect VPCs and on-prem networks to one gateway. Amazon Route 53 \u2192 scalable DNS service, routes domains to apps. AWS Direct Connect \u2192 dedicated private connection to AWS. AWS VPN \u2192 secure tunnels to AWS.","title":"\ud83d\udfe0 Networking and content delivery service category"},{"location":"cloud-practitioner/module-3/m3_sec2/#security-identity-and-compliance-service-category","text":"IAM \u2192 manage users, groups, permissions. AWS Organizations \u2192 multi-account management with SCPs. Amazon Cognito \u2192 user authentication and access for apps. AWS Artifact \u2192 compliance/security reports and agreements. AWS KMS \u2192 encryption key management. AWS Shield \u2192 managed DDoS protection.","title":"\ud83d\udfe0 Security, identity and compliance service category"},{"location":"cloud-practitioner/module-3/m3_sec2/#aws-cost-management-service-category","text":"AWS Cost and Usage Report \u2192 detailed billing and usage. AWS Budgets \u2192 alerts when forecasted/actual usage exceeds budget. AWS Cost Explorer \u2192 visualize and analyze costs.","title":"\ud83d\udfe0 AWS cost management service category"},{"location":"cloud-practitioner/module-3/m3_sec2/#management-and-governance-service-category","text":"AWS Management Console \u2192 web-based management interface. AWS Config \u2192 track resource inventory and changes. Amazon CloudWatch \u2192 monitor resources and apps. AWS Auto Scaling \u2192 scale multiple resources dynamically. AWS CLI \u2192 unified command-line management tool. AWS Trusted Advisor \u2192 optimization insights (cost, performance, security). AWS Well-Architected Tool \u2192 review workloads against best practices. AWS CloudTrail \u2192 track API calls and user activity.","title":"\ud83d\udfe0 Management and governance service category"},{"location":"cloud-practitioner/module-4/m4_sec1/","text":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security 1\ufe0f\u20e3 Section 1: AWS Shared Responsibility Model \ud83d\udfe0 AWS Shared Responsibility Model Security and compliance are a shared responsibility between AWS and the customer . This model is designed to reduce the customer\u2019s operational burden while maintaining flexibility and control for deploying solutions on AWS. The distinction between responsibilities is often referred to as: - \ud83d\udd38 Security \u201cof\u201d the cloud \u2192 AWS responsibility. - \ud83d\udd38 Security \u201cin\u201d the cloud \u2192 Customer responsibility. AWS operates, manages, and controls components from the virtualization layer down to the physical security of the facilities where AWS services run. AWS is responsible for protecting the infrastructure (hardware, software, networking, and facilities) that powers the AWS Cloud. The customer , on the other hand, is responsible for: - \ud83d\udd10 Encrypting data at rest and in transit. - \ud83e\uddf1 Ensuring secure network configurations . - \ud83d\udc65 Managing security credentials and user access . - \u2699\ufe0f Maintaining and updating operating systems and security groups for any compute instances they launch. \ud83d\udfe0 AWS Responsibility: Security of the Cloud AWS is responsible for security of the cloud. This includes managing and controlling infrastructure components from the bare metal host operating system and hypervisor down to physical data center security . AWS protects the global infrastructure that runs all AWS services \u2014 including Regions, Availability Zones, and edge locations. AWS responsibilities include: \ud83c\udfe2 Physical Security Data centers with restricted access , located in nondescript facilities . 24/7 security guards, two-factor authentication , access logging, video surveillance , and secure media destruction (degaussing, shredding) . \ud83d\udda5\ufe0f Hardware Infrastructure Servers, storage devices, and networking equipment that power the cloud. \ud83d\udcbd Software Infrastructure Operating systems, service applications, and virtualization software . \ud83c\udf10 Network Infrastructure Routers, switches, firewalls, cabling, and redundant connections. AWS continuously monitors network boundaries , secures access points , and provides intrusion detection and redundancy . \ud83d\udd0e AWS provides third-party audit reports (from independent auditors) that verify compliance with global security standards and regulations . Although customers cannot physically visit data centers, AWS ensures transparency through these reports. \ud83d\udfe0 Customer Responsibility: Security in the Cloud While AWS manages the underlying infrastructure, customers are responsible for securing everything they deploy or connect within the AWS Cloud. Customer responsibilities include: - Selecting and securing operating systems on EC2 instances. - Securing applications hosted on AWS resources. - Configuring security groups , firewalls , and networks . - Managing user access and credentials securely. - Implementing encryption for data at rest and in transit. Customers maintain full control over their content, including: - \ud83d\udce6 What data they choose to store on AWS. - \ud83e\uddf0 Which AWS services are used with that data. - \ud83c\udf0d Where (in which Region) that data is stored. - \ud83e\udde9 How the data is structured, masked, anonymized, or encrypted. - \ud83d\udc65 Who has access, and how those access rights are granted, managed, and revoked . Customers retain responsibility for the security of their own environment , including applications, IAM configurations, and operating systems. \ud83d\udfe0 Service Characteristics and Security Responsibility AWS offers multiple service models \u2014 IaaS, PaaS, and SaaS \u2014 each with different levels of shared responsibility. Service Model Description Example AWS Services Customer Responsibility AWS Responsibility IaaS (Infrastructure as a Service) Provides basic building blocks like compute, storage, and networking. Amazon EC2 Manage OS updates, security patches, apps, and firewall configurations. Manages the underlying infrastructure (hardware, networking, virtualization). PaaS (Platform as a Service) Removes the need to manage hardware or OS. Focus is on deploying apps. AWS Lambda, Amazon RDS Manage data, classify assets, set permissions. Handles OS and database patching, firewall setup, disaster recovery. SaaS (Software as a Service) Centrally hosted software accessed via web, API, or mobile. AWS Trusted Advisor, AWS Shield, Amazon Chime Use the service securely; no infrastructure management required. Manages everything (infrastructure, platform, and application). \ud83d\udfe0 Examples of SaaS Services AWS Trusted Advisor \u2192 Analyzes your AWS environment and provides real-time recommendations for best practices. Available to all accounts (with some advanced checks limited to Business or Enterprise Support plans). AWS Shield \u2192 A managed DDoS protection service that automatically detects and mitigates attacks. AWS Shield Advanced offers enhanced protections and access to the AWS DDoS Response Team . Amazon Chime \u2192 A communication service that allows you to meet, chat, and call within and outside your organization. Pay-as-you-go model, with no upfront fees or contracts. \ud83e\uddfe Key Takeaways \u2705 AWS and customers share responsibility for security . \u2705 AWS is responsible for security of the cloud \u2014 infrastructure, hardware, software, networking, and facilities. \u2705 Customers are responsible for security in the cloud \u2014 data, configurations, access management, and applications. \u2705 For IaaS , customers manage OS updates, patches, and firewalls. \u2705 For PaaS , AWS handles most of the infrastructure and OS security. \u2705 For SaaS , AWS manages the entire stack, and customers simply use the service securely. \u2705 In IaaS , customers have more control and responsibility . \u2705 In PaaS and SaaS , AWS assumes greater security responsibilities .","title":"\u25fd\ufe0f Section 1 - AWS Shared Responsibility Model"},{"location":"cloud-practitioner/module-4/m4_sec1/#module-4-aws-cloud-security","text":"","title":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security"},{"location":"cloud-practitioner/module-4/m4_sec1/#1-section-1-aws-shared-responsibility-model","text":"","title":"1\ufe0f\u20e3 Section 1: AWS Shared Responsibility Model"},{"location":"cloud-practitioner/module-4/m4_sec1/#aws-shared-responsibility-model","text":"Security and compliance are a shared responsibility between AWS and the customer . This model is designed to reduce the customer\u2019s operational burden while maintaining flexibility and control for deploying solutions on AWS. The distinction between responsibilities is often referred to as: - \ud83d\udd38 Security \u201cof\u201d the cloud \u2192 AWS responsibility. - \ud83d\udd38 Security \u201cin\u201d the cloud \u2192 Customer responsibility. AWS operates, manages, and controls components from the virtualization layer down to the physical security of the facilities where AWS services run. AWS is responsible for protecting the infrastructure (hardware, software, networking, and facilities) that powers the AWS Cloud. The customer , on the other hand, is responsible for: - \ud83d\udd10 Encrypting data at rest and in transit. - \ud83e\uddf1 Ensuring secure network configurations . - \ud83d\udc65 Managing security credentials and user access . - \u2699\ufe0f Maintaining and updating operating systems and security groups for any compute instances they launch.","title":"\ud83d\udfe0 AWS Shared Responsibility Model"},{"location":"cloud-practitioner/module-4/m4_sec1/#aws-responsibility-security-of-the-cloud","text":"AWS is responsible for security of the cloud. This includes managing and controlling infrastructure components from the bare metal host operating system and hypervisor down to physical data center security . AWS protects the global infrastructure that runs all AWS services \u2014 including Regions, Availability Zones, and edge locations. AWS responsibilities include: \ud83c\udfe2 Physical Security Data centers with restricted access , located in nondescript facilities . 24/7 security guards, two-factor authentication , access logging, video surveillance , and secure media destruction (degaussing, shredding) . \ud83d\udda5\ufe0f Hardware Infrastructure Servers, storage devices, and networking equipment that power the cloud. \ud83d\udcbd Software Infrastructure Operating systems, service applications, and virtualization software . \ud83c\udf10 Network Infrastructure Routers, switches, firewalls, cabling, and redundant connections. AWS continuously monitors network boundaries , secures access points , and provides intrusion detection and redundancy . \ud83d\udd0e AWS provides third-party audit reports (from independent auditors) that verify compliance with global security standards and regulations . Although customers cannot physically visit data centers, AWS ensures transparency through these reports.","title":"\ud83d\udfe0 AWS Responsibility: Security of the Cloud"},{"location":"cloud-practitioner/module-4/m4_sec1/#customer-responsibility-security-in-the-cloud","text":"While AWS manages the underlying infrastructure, customers are responsible for securing everything they deploy or connect within the AWS Cloud. Customer responsibilities include: - Selecting and securing operating systems on EC2 instances. - Securing applications hosted on AWS resources. - Configuring security groups , firewalls , and networks . - Managing user access and credentials securely. - Implementing encryption for data at rest and in transit. Customers maintain full control over their content, including: - \ud83d\udce6 What data they choose to store on AWS. - \ud83e\uddf0 Which AWS services are used with that data. - \ud83c\udf0d Where (in which Region) that data is stored. - \ud83e\udde9 How the data is structured, masked, anonymized, or encrypted. - \ud83d\udc65 Who has access, and how those access rights are granted, managed, and revoked . Customers retain responsibility for the security of their own environment , including applications, IAM configurations, and operating systems.","title":"\ud83d\udfe0 Customer Responsibility: Security in the Cloud"},{"location":"cloud-practitioner/module-4/m4_sec1/#service-characteristics-and-security-responsibility","text":"AWS offers multiple service models \u2014 IaaS, PaaS, and SaaS \u2014 each with different levels of shared responsibility. Service Model Description Example AWS Services Customer Responsibility AWS Responsibility IaaS (Infrastructure as a Service) Provides basic building blocks like compute, storage, and networking. Amazon EC2 Manage OS updates, security patches, apps, and firewall configurations. Manages the underlying infrastructure (hardware, networking, virtualization). PaaS (Platform as a Service) Removes the need to manage hardware or OS. Focus is on deploying apps. AWS Lambda, Amazon RDS Manage data, classify assets, set permissions. Handles OS and database patching, firewall setup, disaster recovery. SaaS (Software as a Service) Centrally hosted software accessed via web, API, or mobile. AWS Trusted Advisor, AWS Shield, Amazon Chime Use the service securely; no infrastructure management required. Manages everything (infrastructure, platform, and application).","title":"\ud83d\udfe0 Service Characteristics and Security Responsibility"},{"location":"cloud-practitioner/module-4/m4_sec1/#examples-of-saas-services","text":"AWS Trusted Advisor \u2192 Analyzes your AWS environment and provides real-time recommendations for best practices. Available to all accounts (with some advanced checks limited to Business or Enterprise Support plans). AWS Shield \u2192 A managed DDoS protection service that automatically detects and mitigates attacks. AWS Shield Advanced offers enhanced protections and access to the AWS DDoS Response Team . Amazon Chime \u2192 A communication service that allows you to meet, chat, and call within and outside your organization. Pay-as-you-go model, with no upfront fees or contracts.","title":"\ud83d\udfe0 Examples of SaaS Services"},{"location":"cloud-practitioner/module-4/m4_sec1/#key-takeaways","text":"\u2705 AWS and customers share responsibility for security . \u2705 AWS is responsible for security of the cloud \u2014 infrastructure, hardware, software, networking, and facilities. \u2705 Customers are responsible for security in the cloud \u2014 data, configurations, access management, and applications. \u2705 For IaaS , customers manage OS updates, patches, and firewalls. \u2705 For PaaS , AWS handles most of the infrastructure and OS security. \u2705 For SaaS , AWS manages the entire stack, and customers simply use the service securely. \u2705 In IaaS , customers have more control and responsibility . \u2705 In PaaS and SaaS , AWS assumes greater security responsibilities .","title":"\ud83e\uddfe Key Takeaways"},{"location":"cloud-practitioner/module-4/m4_sec2/","text":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security 2\ufe0f\u20e3 Section 2: AWS Identity and Access Management (IAM) \ud83d\udfe0 AWS Identity and Access Management Overview AWS Identity and Access Management (IAM) enables you to control access to AWS compute, storage, database, and application services. It handles both authentication (who can sign in) and authorization (what actions they can perform). IAM is a centralized access management tool that lets you define permissions to launch, configure, manage, and terminate resources in your AWS account. It provides granular control over resources \u2014 you can specify exactly which API calls users are authorized to make to each service. Whether you use the AWS Management Console , the AWS CLI , or SDKs , every call to an AWS service is an API call authenticated through IAM. IAM allows you to manage who can access what resources and how they can access them. You can assign different permission levels: - \ud83d\udc69\u200d\ud83d\udcbb Some users may have full administrative access . - \ud83d\udc40 Others may have read-only access to limited resources (e.g., specific S3 buckets). - \ud83d\udcbc Some may have access only to billing information or account details. IAM is a feature of every AWS account and is free of charge . \ud83d\udfe0 Essential IAM Components To understand IAM, you must know its four key components: \ud83e\uddf1 Component \ud83d\udd0d Description IAM User Represents a person or application that interacts with AWS. Each has a unique name and credentials (passwords or keys). IAM Group A collection of IAM users . Helps manage permissions by assigning policies to groups instead of individuals. IAM Policy A JSON document that defines permissions. Specifies which actions are allowed or denied on which AWS resources. IAM Role Grants temporary access to AWS resources. Roles are not tied to a specific user and can be assumed by anyone authorized to do so. \ud83d\udfe0 Authentication and Access Types Authentication ensures that only verified users or systems can access AWS. When defining an IAM user , you can choose between two types of access: \ud83d\udd39 Programmatic access Uses the AWS CLI , SDKs , or APIs . Requires an Access Key ID and a Secret Access Key . \ud83d\udd39 AWS Management Console access Allows sign-in via a web interface with a username and password. Users must enter their 12-digit account ID or alias . If Multi-Factor Authentication (MFA) is enabled, an extra authentication code is required. You can grant one , both , or neither access type depending on user needs. \ud83d\udfe0 Multi-Factor Authentication (MFA) \ud83d\udd10 MFA adds an extra layer of protection by requiring a secondary authentication token in addition to a password. Available MFA options: - \ud83d\udcf1 Virtual MFA apps \u2014 Google Authenticator , Authy , etc. - \ud83d\udd11 U2F hardware security keys. - \ud83d\udcbb Physical MFA devices (key fobs, display cards). MFA is strongly recommended for all users \u2014 especially root and administrative accounts . \ud83d\udfe0 Authorization: What Actions Are Permitted Authorization defines what users, services, or applications can do once authenticated. By default, all IAM users have no permissions . Access must be explicitly granted using IAM policies written in JSON . Each policy lists allowed or denied actions for specified AWS resources. \ud83d\udfe0 IAM Authorization Logic When creating IAM policies, keep these principles in mind: \u274c No default permissions \u2014 everything is denied unless explicitly allowed. \ud83d\udeab Explicit deny always overrides any allow. \u2705 Follow the Principle of Least Privilege \u2014 grant only the permissions users need to perform their tasks. \ud83c\udf0e IAM settings are global , not regional (they apply across all Regions). \ud83d\udfe0 IAM Policies An IAM policy defines a set of permissions that can be attached to users, groups, roles, or resources . Policies specify: - The actions users can perform. - The resources they can access. - The conditions under which access is granted or denied. Policy Evaluation Rules: - All relevant policies are evaluated together. - The most restrictive rule applies in case of conflict. Types of IAM Policies: - \ud83e\udde9 Identity-based policies - Attached to users, groups, or roles. - Can be: - Managed policies (reusable and standalone). - Inline policies (embedded directly in one entity). \ud83d\uddc2\ufe0f Resource-based policies Attached directly to an AWS resource (e.g., S3 bucket policies). Define who can access the resource and under what conditions. \ud83d\udfe0 Example: IAM Policy Document IAM policies are written in JSON format. An example policy might: - Allow access only to a specific DynamoDB table and an S3 bucket . - Include an \"Effect\": \"Deny\" statement to block any other actions or resources. - Use \"NotResource\" to prevent use of other services, even if granted elsewhere. \u27a1\ufe0f Remember: Explicit Deny overrides all other permissions. \ud83d\udfe0 Resource-Based Policies While identity-based policies are linked to IAM users or groups, resource-based policies are attached directly to a resource (for example, an S3 bucket). To create one in AWS Management Console: 1. Go to the resource (e.g., S3 bucket) . 2. Open the Permissions tab. 3. Click Bucket Policy , and define the JSON-formatted policy . Example Scenario: - The user MaryMajor can access the S3 bucket photos either by: - An identity-based policy attached to her user. - A resource-based policy on the bucket granting her access. If a Deny statement exists in the bucket policy, it overrides any Allow in identity-based policies. \ud83d\udfe0 IAM Permission Evaluation Process When IAM evaluates permissions, it follows this order: \ud83d\udd0d Check for any explicit Deny . \u2705 If no Deny, check for explicit Allow . \ud83d\udeab If neither exists, the default is Implicit Deny . This ensures fine-grained and secure access control for every AWS identity. \ud83d\udfe0 IAM Groups IAM Groups simplify permission management for multiple users. Example: Create a group called Developers , attach the required policies, and then add users. All users in that group automatically inherit the group\u2019s permissions. Key characteristics: - \ud83d\udc65 A group can contain many users . - \ud83d\udd04 A user can belong to multiple groups . - \ud83e\uddf1 Groups cannot be nested (no group inside another group). - \ud83d\udeab There is no default group \u2014 all must be created manually. \ud83d\udfe0 IAM Roles An IAM Role is similar to a user but not tied to a specific person. It is designed to be assumed temporarily by whoever needs it. Roles provide temporary security credentials and are commonly used for: - \ud83e\udd1d Cross-account access (between AWS accounts). - \ud83d\udcf1 Applications that require temporary AWS access (without embedding credentials). - \ud83e\uddd1\u200d\ud83d\udcbb Delegating access to third-party auditors or AWS services. - \ud83e\udde9 Federated access \u2014 users authenticated through corporate directories (e.g., Active Directory). Roles are fundamental to building secure, scalable, and compliant AWS environments. \ud83e\uddfe Key Takeaways \u2705 IAM policies are written in JSON and define permissions precisely. \u2705 Policies can be attached to users, groups, or roles . \u2705 IAM entities include users , groups , and roles . \u2705 An IAM user represents a person or application with credentials. \u2705 An IAM group simplifies permission assignment to multiple users. \u2705 An IAM role provides temporary, delegated access to AWS resources.","title":"\u25fd\ufe0f Section 2 - AWS Identity and Access Management (IAM)"},{"location":"cloud-practitioner/module-4/m4_sec2/#module-4-aws-cloud-security","text":"","title":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security"},{"location":"cloud-practitioner/module-4/m4_sec2/#2-section-2-aws-identity-and-access-management-iam","text":"","title":"2\ufe0f\u20e3 Section 2: AWS Identity and Access Management (IAM)"},{"location":"cloud-practitioner/module-4/m4_sec2/#aws-identity-and-access-management-overview","text":"AWS Identity and Access Management (IAM) enables you to control access to AWS compute, storage, database, and application services. It handles both authentication (who can sign in) and authorization (what actions they can perform). IAM is a centralized access management tool that lets you define permissions to launch, configure, manage, and terminate resources in your AWS account. It provides granular control over resources \u2014 you can specify exactly which API calls users are authorized to make to each service. Whether you use the AWS Management Console , the AWS CLI , or SDKs , every call to an AWS service is an API call authenticated through IAM. IAM allows you to manage who can access what resources and how they can access them. You can assign different permission levels: - \ud83d\udc69\u200d\ud83d\udcbb Some users may have full administrative access . - \ud83d\udc40 Others may have read-only access to limited resources (e.g., specific S3 buckets). - \ud83d\udcbc Some may have access only to billing information or account details. IAM is a feature of every AWS account and is free of charge .","title":"\ud83d\udfe0 AWS Identity and Access Management Overview"},{"location":"cloud-practitioner/module-4/m4_sec2/#essential-iam-components","text":"To understand IAM, you must know its four key components: \ud83e\uddf1 Component \ud83d\udd0d Description IAM User Represents a person or application that interacts with AWS. Each has a unique name and credentials (passwords or keys). IAM Group A collection of IAM users . Helps manage permissions by assigning policies to groups instead of individuals. IAM Policy A JSON document that defines permissions. Specifies which actions are allowed or denied on which AWS resources. IAM Role Grants temporary access to AWS resources. Roles are not tied to a specific user and can be assumed by anyone authorized to do so.","title":"\ud83d\udfe0 Essential IAM Components"},{"location":"cloud-practitioner/module-4/m4_sec2/#authentication-and-access-types","text":"Authentication ensures that only verified users or systems can access AWS. When defining an IAM user , you can choose between two types of access: \ud83d\udd39 Programmatic access Uses the AWS CLI , SDKs , or APIs . Requires an Access Key ID and a Secret Access Key . \ud83d\udd39 AWS Management Console access Allows sign-in via a web interface with a username and password. Users must enter their 12-digit account ID or alias . If Multi-Factor Authentication (MFA) is enabled, an extra authentication code is required. You can grant one , both , or neither access type depending on user needs.","title":"\ud83d\udfe0 Authentication and Access Types"},{"location":"cloud-practitioner/module-4/m4_sec2/#multi-factor-authentication-mfa","text":"\ud83d\udd10 MFA adds an extra layer of protection by requiring a secondary authentication token in addition to a password. Available MFA options: - \ud83d\udcf1 Virtual MFA apps \u2014 Google Authenticator , Authy , etc. - \ud83d\udd11 U2F hardware security keys. - \ud83d\udcbb Physical MFA devices (key fobs, display cards). MFA is strongly recommended for all users \u2014 especially root and administrative accounts .","title":"\ud83d\udfe0 Multi-Factor Authentication (MFA)"},{"location":"cloud-practitioner/module-4/m4_sec2/#authorization-what-actions-are-permitted","text":"Authorization defines what users, services, or applications can do once authenticated. By default, all IAM users have no permissions . Access must be explicitly granted using IAM policies written in JSON . Each policy lists allowed or denied actions for specified AWS resources.","title":"\ud83d\udfe0 Authorization: What Actions Are Permitted"},{"location":"cloud-practitioner/module-4/m4_sec2/#iam-authorization-logic","text":"When creating IAM policies, keep these principles in mind: \u274c No default permissions \u2014 everything is denied unless explicitly allowed. \ud83d\udeab Explicit deny always overrides any allow. \u2705 Follow the Principle of Least Privilege \u2014 grant only the permissions users need to perform their tasks. \ud83c\udf0e IAM settings are global , not regional (they apply across all Regions).","title":"\ud83d\udfe0 IAM Authorization Logic"},{"location":"cloud-practitioner/module-4/m4_sec2/#iam-policies","text":"An IAM policy defines a set of permissions that can be attached to users, groups, roles, or resources . Policies specify: - The actions users can perform. - The resources they can access. - The conditions under which access is granted or denied. Policy Evaluation Rules: - All relevant policies are evaluated together. - The most restrictive rule applies in case of conflict. Types of IAM Policies: - \ud83e\udde9 Identity-based policies - Attached to users, groups, or roles. - Can be: - Managed policies (reusable and standalone). - Inline policies (embedded directly in one entity). \ud83d\uddc2\ufe0f Resource-based policies Attached directly to an AWS resource (e.g., S3 bucket policies). Define who can access the resource and under what conditions.","title":"\ud83d\udfe0 IAM Policies"},{"location":"cloud-practitioner/module-4/m4_sec2/#example-iam-policy-document","text":"IAM policies are written in JSON format. An example policy might: - Allow access only to a specific DynamoDB table and an S3 bucket . - Include an \"Effect\": \"Deny\" statement to block any other actions or resources. - Use \"NotResource\" to prevent use of other services, even if granted elsewhere. \u27a1\ufe0f Remember: Explicit Deny overrides all other permissions.","title":"\ud83d\udfe0 Example: IAM Policy Document"},{"location":"cloud-practitioner/module-4/m4_sec2/#resource-based-policies","text":"While identity-based policies are linked to IAM users or groups, resource-based policies are attached directly to a resource (for example, an S3 bucket). To create one in AWS Management Console: 1. Go to the resource (e.g., S3 bucket) . 2. Open the Permissions tab. 3. Click Bucket Policy , and define the JSON-formatted policy . Example Scenario: - The user MaryMajor can access the S3 bucket photos either by: - An identity-based policy attached to her user. - A resource-based policy on the bucket granting her access. If a Deny statement exists in the bucket policy, it overrides any Allow in identity-based policies.","title":"\ud83d\udfe0 Resource-Based Policies"},{"location":"cloud-practitioner/module-4/m4_sec2/#iam-permission-evaluation-process","text":"When IAM evaluates permissions, it follows this order: \ud83d\udd0d Check for any explicit Deny . \u2705 If no Deny, check for explicit Allow . \ud83d\udeab If neither exists, the default is Implicit Deny . This ensures fine-grained and secure access control for every AWS identity.","title":"\ud83d\udfe0 IAM Permission Evaluation Process"},{"location":"cloud-practitioner/module-4/m4_sec2/#iam-groups","text":"IAM Groups simplify permission management for multiple users. Example: Create a group called Developers , attach the required policies, and then add users. All users in that group automatically inherit the group\u2019s permissions. Key characteristics: - \ud83d\udc65 A group can contain many users . - \ud83d\udd04 A user can belong to multiple groups . - \ud83e\uddf1 Groups cannot be nested (no group inside another group). - \ud83d\udeab There is no default group \u2014 all must be created manually.","title":"\ud83d\udfe0 IAM Groups"},{"location":"cloud-practitioner/module-4/m4_sec2/#iam-roles","text":"An IAM Role is similar to a user but not tied to a specific person. It is designed to be assumed temporarily by whoever needs it. Roles provide temporary security credentials and are commonly used for: - \ud83e\udd1d Cross-account access (between AWS accounts). - \ud83d\udcf1 Applications that require temporary AWS access (without embedding credentials). - \ud83e\uddd1\u200d\ud83d\udcbb Delegating access to third-party auditors or AWS services. - \ud83e\udde9 Federated access \u2014 users authenticated through corporate directories (e.g., Active Directory). Roles are fundamental to building secure, scalable, and compliant AWS environments.","title":"\ud83d\udfe0 IAM Roles"},{"location":"cloud-practitioner/module-4/m4_sec2/#key-takeaways","text":"\u2705 IAM policies are written in JSON and define permissions precisely. \u2705 Policies can be attached to users, groups, or roles . \u2705 IAM entities include users , groups , and roles . \u2705 An IAM user represents a person or application with credentials. \u2705 An IAM group simplifies permission assignment to multiple users. \u2705 An IAM role provides temporary, delegated access to AWS resources.","title":"\ud83e\uddfe Key Takeaways"},{"location":"cloud-practitioner/module-4/m4_sec3/","text":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security 3\ufe0f\u20e3 Section 3: Securing a New AWS Account \ud83d\udfe0 AWS Account Root User Access vs. IAM Access When you first create an AWS account , you begin with a single sign-in identity that has complete access to all AWS services and resources in the account. This identity is called the AWS account root user , and it is accessed by signing in to the AWS Management Console using the email address and password you used when creating the account. The root user has and retains full access to all resources in the account. Therefore, AWS strongly recommends that you do not use root user credentials for daily operations. Instead, AWS recommends using IAM to create additional users and assign permissions following the principle of least privilege . For example: - If you require administrator-level permissions, create an IAM user and grant full access to that user. - Later, you can modify or revoke those permissions by changing associated IAM policies. If multiple users need access to the account: - Create unique credentials for each user. - Define which resources each user can access. - Avoid sharing the same credentials among multiple users. \u26a0\ufe0f Some specific administrative tasks can only be performed by the root user . You can find a full list of such tasks here: \ud83d\udd17 Tasks that require root user credentials . \ud83d\udfe0 Securing a New AWS Account: Account Root User To stop using the account root user for daily operations, follow these steps: Create an IAM user for yourself While logged in as the root user, create a new IAM user with AWS Management Console access enabled. Do not attach permissions yet. Save the IAM user\u2019s access keys if needed. Create an IAM group Give the group a descriptive name (for example, FullAccess ). Attach IAM policies that grant full access to essential AWS services. Add your newly created IAM user to this group. Disable and remove root access keys If your root user has access keys, delete them immediately. Enable a password policy Apply a strong password policy for all IAM users. Copy the IAM user sign-in link from the IAM dashboard. Sign out as the root user Use the sign-in link to log in as your IAM user instead. Store root credentials securely Keep them in a safe and restricted location . \ud83d\udcd8 For detailed steps, see the AWS guide: \ud83d\udd17 Creating Your First IAM Admin User and Group . \ud83d\udfe0 Securing a New AWS Account: MFA (Multi-Factor Authentication) To enhance security, enable MFA for both the root user and all IAM users . MFA requires users to provide a second form of authentication (in addition to their password). This protects against unauthorized access, even if passwords are compromised. You can also enable MFA to secure programmatic access to AWS APIs. For configuration details, see: \ud83d\udd17 Configuring MFA-Protected API Access MFA device options include: - \ud83d\udcf1 Virtual MFA apps (e.g., Google Authenticator , Authy ) - \ud83d\udd11 U2F security key devices - \ud83d\udcbb Hardware MFA devices (key fobs or display cards) \ud83d\udfe0 Securing a New AWS Account: AWS CloudTrail AWS CloudTrail is a service that records all API requests made to resources in your account, providing operational auditing and security visibility . CloudTrail is enabled by default for all AWS accounts. It retains a record of the last 90 days of management event activity. You can view or download these logs for create , modify , and delete operations. You can extend log retention and enable event alerts by creating a trail . This allows you to: - Store CloudTrail logs for longer periods . - Send notifications when specific events occur . \ud83d\udcd8 For detailed guidance, see: \ud83d\udd17 Creating a Trail Using the Console (AWS Documentation) You can also review the list of supported services here: \ud83d\udd17 CloudTrail Service-Specific Topics \ud83d\udfe0 Securing a New AWS Account: Billing Reports Another best practice for securing and managing your AWS account is to enable billing reports , such as the AWS Cost and Usage Report . These reports provide detailed insights into resource usage and estimated costs . AWS delivers them automatically to an Amazon S3 bucket of your choice. Reports are updated at least once per day . The AWS Cost and Usage Report tracks: - Hourly and daily usage by service. - Estimated charges for each AWS service. \ud83d\udcd8 Learn more here: \ud83d\udd17 Creating an AWS Cost and Usage Report \ud83e\uddfe Key Takeaways \u2705 Enable Multi-Factor Authentication (MFA) for all users (including root). \u2705 Delete root user access keys . \u2705 Create individual IAM users and grant permissions following the Principle of Least Privilege . \u2705 Use groups to assign permissions efficiently. \u2705 Enforce a strong password policy . \u2705 Delegate permissions using roles instead of sharing credentials. \u2705 Monitor all account activity using AWS CloudTrail .","title":"\u25fd\ufe0f Section 3 - Securing a New AWS Account"},{"location":"cloud-practitioner/module-4/m4_sec3/#module-4-aws-cloud-security","text":"","title":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security"},{"location":"cloud-practitioner/module-4/m4_sec3/#3-section-3-securing-a-new-aws-account","text":"","title":"3\ufe0f\u20e3 Section 3: Securing a New AWS Account"},{"location":"cloud-practitioner/module-4/m4_sec3/#aws-account-root-user-access-vs-iam-access","text":"When you first create an AWS account , you begin with a single sign-in identity that has complete access to all AWS services and resources in the account. This identity is called the AWS account root user , and it is accessed by signing in to the AWS Management Console using the email address and password you used when creating the account. The root user has and retains full access to all resources in the account. Therefore, AWS strongly recommends that you do not use root user credentials for daily operations. Instead, AWS recommends using IAM to create additional users and assign permissions following the principle of least privilege . For example: - If you require administrator-level permissions, create an IAM user and grant full access to that user. - Later, you can modify or revoke those permissions by changing associated IAM policies. If multiple users need access to the account: - Create unique credentials for each user. - Define which resources each user can access. - Avoid sharing the same credentials among multiple users. \u26a0\ufe0f Some specific administrative tasks can only be performed by the root user . You can find a full list of such tasks here: \ud83d\udd17 Tasks that require root user credentials .","title":"\ud83d\udfe0 AWS Account Root User Access vs. IAM Access"},{"location":"cloud-practitioner/module-4/m4_sec3/#securing-a-new-aws-account-account-root-user","text":"To stop using the account root user for daily operations, follow these steps: Create an IAM user for yourself While logged in as the root user, create a new IAM user with AWS Management Console access enabled. Do not attach permissions yet. Save the IAM user\u2019s access keys if needed. Create an IAM group Give the group a descriptive name (for example, FullAccess ). Attach IAM policies that grant full access to essential AWS services. Add your newly created IAM user to this group. Disable and remove root access keys If your root user has access keys, delete them immediately. Enable a password policy Apply a strong password policy for all IAM users. Copy the IAM user sign-in link from the IAM dashboard. Sign out as the root user Use the sign-in link to log in as your IAM user instead. Store root credentials securely Keep them in a safe and restricted location . \ud83d\udcd8 For detailed steps, see the AWS guide: \ud83d\udd17 Creating Your First IAM Admin User and Group .","title":"\ud83d\udfe0 Securing a New AWS Account: Account Root User"},{"location":"cloud-practitioner/module-4/m4_sec3/#securing-a-new-aws-account-mfa-multi-factor-authentication","text":"To enhance security, enable MFA for both the root user and all IAM users . MFA requires users to provide a second form of authentication (in addition to their password). This protects against unauthorized access, even if passwords are compromised. You can also enable MFA to secure programmatic access to AWS APIs. For configuration details, see: \ud83d\udd17 Configuring MFA-Protected API Access MFA device options include: - \ud83d\udcf1 Virtual MFA apps (e.g., Google Authenticator , Authy ) - \ud83d\udd11 U2F security key devices - \ud83d\udcbb Hardware MFA devices (key fobs or display cards)","title":"\ud83d\udfe0 Securing a New AWS Account: MFA (Multi-Factor Authentication)"},{"location":"cloud-practitioner/module-4/m4_sec3/#securing-a-new-aws-account-aws-cloudtrail","text":"AWS CloudTrail is a service that records all API requests made to resources in your account, providing operational auditing and security visibility . CloudTrail is enabled by default for all AWS accounts. It retains a record of the last 90 days of management event activity. You can view or download these logs for create , modify , and delete operations. You can extend log retention and enable event alerts by creating a trail . This allows you to: - Store CloudTrail logs for longer periods . - Send notifications when specific events occur . \ud83d\udcd8 For detailed guidance, see: \ud83d\udd17 Creating a Trail Using the Console (AWS Documentation) You can also review the list of supported services here: \ud83d\udd17 CloudTrail Service-Specific Topics","title":"\ud83d\udfe0 Securing a New AWS Account: AWS CloudTrail"},{"location":"cloud-practitioner/module-4/m4_sec3/#securing-a-new-aws-account-billing-reports","text":"Another best practice for securing and managing your AWS account is to enable billing reports , such as the AWS Cost and Usage Report . These reports provide detailed insights into resource usage and estimated costs . AWS delivers them automatically to an Amazon S3 bucket of your choice. Reports are updated at least once per day . The AWS Cost and Usage Report tracks: - Hourly and daily usage by service. - Estimated charges for each AWS service. \ud83d\udcd8 Learn more here: \ud83d\udd17 Creating an AWS Cost and Usage Report","title":"\ud83d\udfe0 Securing a New AWS Account: Billing Reports"},{"location":"cloud-practitioner/module-4/m4_sec3/#key-takeaways","text":"\u2705 Enable Multi-Factor Authentication (MFA) for all users (including root). \u2705 Delete root user access keys . \u2705 Create individual IAM users and grant permissions following the Principle of Least Privilege . \u2705 Use groups to assign permissions efficiently. \u2705 Enforce a strong password policy . \u2705 Delegate permissions using roles instead of sharing credentials. \u2705 Monitor all account activity using AWS CloudTrail .","title":"\ud83e\uddfe Key Takeaways"},{"location":"cloud-practitioner/module-4/m4_sec4/","text":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security 4\ufe0f\u20e3 Section 4: Securing Accounts \ud83d\udfe0 AWS Organizations AWS Organizations is an account management service that enables you to consolidate multiple AWS accounts into a single organization that you create and centrally manage. This section focuses on the security features provided by AWS Organizations. Key security capabilities include: \ud83e\uddf1 Grouping accounts into Organizational Units (OUs) and attaching different access policies to each OU. Example: If you have accounts that should only access AWS services that meet certain regulatory requirements , you can group them into one OU and attach a policy that blocks access to non-compliant services. \ud83d\udd10 Integration with AWS Identity and Access Management (IAM) : AWS Organizations extends IAM control to the account level, allowing you to define what users and roles in an account (or group of accounts) can do. \u2699\ufe0f Permission intersection : Effective permissions are determined by the intersection between: The AWS Organizations policy settings (e.g., Service Control Policies), and The IAM policies applied within the account. A user can access only what is allowed by both policy types. \ud83d\udee1\ufe0f Service Control Policies (SCPs) : These define the maximum permissions that member accounts in the organization can have. SCPs can restrict access to specific AWS services, resources, or API actions. Even administrators in member accounts cannot override these restrictions. When AWS Organizations blocks access to a service, resource, or API action, no user or role in that account can access it \u2014 even if an admin explicitly grants permission. \ud83d\udfe0 AWS Organizations: Service Control Policies (SCPs) SCPs provide centralized control over the maximum available permissions for all accounts within an organization. They ensure that every account operates within the organization\u2019s access control boundaries. Key details: SCPs are available only when all features are enabled , including consolidated billing . \ud83d\udcd8 Learn more: Enable All Features in AWS Organizations SCPs are not available if the organization uses only consolidated billing features. For instructions on enabling and managing SCPs, see: Enabling and Disabling a Policy Type on a Root Comparison to IAM Policies: Feature Service Control Policy (SCP) IAM Policy Purpose Defines maximum permissions within an organization Grants or denies permissions to specific identities Syntax JSON (similar to IAM policies) JSON Scope Organization, Root, or OU level Account or Resource level Grants permissions? \u274c No (it only limits) \u2705 Yes Important notes: - Attaching an SCP to the organization root or an OU sets a boundary for what member accounts can do. - SCPs do not replace IAM \u2014 you still need to attach IAM policies to actually grant access. Learn more about IAM policies: \ud83d\udcd8 AWS IAM Policies Documentation \ud83d\udfe0 AWS Key Management Service (AWS KMS) AWS Key Management Service (AWS KMS) enables you to create, manage, and control encryption keys used across AWS services and applications. Key characteristics: \ud83e\udde9 Uses Hardware Security Modules (HSMs) that are validated (or in the process of validation) under Federal Information Processing Standards (FIPS) 140-2 . \ud83d\udd10 Provides secure and resilient key management infrastructure. \ud83e\uddfe Integrates with AWS CloudTrail to log all key usage for compliance and auditing. \ud83e\udeaa Manages Customer Master Keys (CMKs) that control access to Data Encryption Keys (DEKs) . \ud83d\udd04 You can create, import, or rotate keys as needed. \ud83c\udf10 Integrates with most AWS services (e.g., S3, EBS, RDS, Lambda) to manage encryption. Learn more: \ud83d\udcd8 AWS Key Management Service Features \ud83d\udfe0 Amazon Cognito Amazon Cognito provides secure solutions for user authentication and access control within your applications. Core functionalities: \ud83e\uddcd\u200d\u2642\ufe0f Role-based access : You can define roles and map users to roles, ensuring that applications access only authorized AWS resources. \ud83c\udf0d Support for SAML 2.0 (Security Assertion Markup Language) : Cognito uses SAML \u2014 an open standard for exchanging identity and security information between identity providers and applications. Supports Single Sign-On (SSO) using corporate credentials (e.g., from Microsoft Active Directory). Enables seamless authentication across multiple applications. Compliance and Regulatory Support: Amazon Cognito helps organizations meet multiple security and compliance requirements , including those for highly regulated industries such as healthcare and finance. Compliance frameworks supported: - \ud83c\udfe5 HIPAA \u2013 AWS HIPAA Compliance - \ud83d\udcb3 PCI DSS \u2013 AWS PCI DSS FAQs - \ud83e\uddfe AICPA SOC \u2013 AWS SOC FAQs - \ud83c\udf10 ISO/IEC Standards : - ISO/IEC 27001 - ISO/IEC 27017 - ISO/IEC 27018 - ISO 9001 By using Amazon Cognito, you can manage users securely while complying with key international standards . \ud83d\udfe0 AWS Shield AWS Shield is a managed Distributed Denial of Service (DDoS) protection service designed to protect applications running on AWS. Key capabilities: \ud83e\udde0 Provides always-on detection and automatic inline mitigations to minimize downtime and latency. \ud83d\udee1\ufe0f Protects against multiple attack types, including: Infrastructure-layer attacks (e.g., UDP floods) State exhaustion attacks (e.g., TCP SYN floods) Application-layer attacks (e.g., HTTP GET/POST floods) \ud83d\udcd8 For examples, refer to the AWS WAF Developer Guide . AWS Shield Service Tiers: Tier Description Cost AWS Shield Standard Enabled by default for all AWS customers. Provides baseline DDoS protection. Free AWS Shield Advanced Offers enhanced protection against large or sophisticated attacks. Includes 24/7 DDoS Response Team (DRT) support. Paid service (requires Enterprise or Business Support) AWS Shield Advanced extends protection to: - Amazon EC2 - Elastic Load Balancing (ELB) - Amazon CloudFront - AWS Global Accelerator - Amazon Route 53 \ud83e\uddfe Key Takeaways \u2705 AWS Organizations allows central management and security control across multiple accounts. \u2705 Service Control Policies (SCPs) define the maximum permissions available within the organization. \u2705 AWS KMS manages encryption keys securely using FIPS-compliant HSMs. \u2705 Amazon Cognito provides secure, standards-based authentication and supports regulatory compliance (HIPAA, PCI DSS, ISO, etc.). \u2705 AWS Shield offers managed DDoS protection \u2014 both free (Standard) and advanced (paid) tiers.","title":"\u25fd\ufe0f Section 4 - Securing Accounts"},{"location":"cloud-practitioner/module-4/m4_sec4/#module-4-aws-cloud-security","text":"","title":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security"},{"location":"cloud-practitioner/module-4/m4_sec4/#4-section-4-securing-accounts","text":"","title":"4\ufe0f\u20e3 Section 4: Securing Accounts"},{"location":"cloud-practitioner/module-4/m4_sec4/#aws-organizations","text":"AWS Organizations is an account management service that enables you to consolidate multiple AWS accounts into a single organization that you create and centrally manage. This section focuses on the security features provided by AWS Organizations. Key security capabilities include: \ud83e\uddf1 Grouping accounts into Organizational Units (OUs) and attaching different access policies to each OU. Example: If you have accounts that should only access AWS services that meet certain regulatory requirements , you can group them into one OU and attach a policy that blocks access to non-compliant services. \ud83d\udd10 Integration with AWS Identity and Access Management (IAM) : AWS Organizations extends IAM control to the account level, allowing you to define what users and roles in an account (or group of accounts) can do. \u2699\ufe0f Permission intersection : Effective permissions are determined by the intersection between: The AWS Organizations policy settings (e.g., Service Control Policies), and The IAM policies applied within the account. A user can access only what is allowed by both policy types. \ud83d\udee1\ufe0f Service Control Policies (SCPs) : These define the maximum permissions that member accounts in the organization can have. SCPs can restrict access to specific AWS services, resources, or API actions. Even administrators in member accounts cannot override these restrictions. When AWS Organizations blocks access to a service, resource, or API action, no user or role in that account can access it \u2014 even if an admin explicitly grants permission.","title":"\ud83d\udfe0 AWS Organizations"},{"location":"cloud-practitioner/module-4/m4_sec4/#aws-organizations-service-control-policies-scps","text":"SCPs provide centralized control over the maximum available permissions for all accounts within an organization. They ensure that every account operates within the organization\u2019s access control boundaries. Key details: SCPs are available only when all features are enabled , including consolidated billing . \ud83d\udcd8 Learn more: Enable All Features in AWS Organizations SCPs are not available if the organization uses only consolidated billing features. For instructions on enabling and managing SCPs, see: Enabling and Disabling a Policy Type on a Root Comparison to IAM Policies: Feature Service Control Policy (SCP) IAM Policy Purpose Defines maximum permissions within an organization Grants or denies permissions to specific identities Syntax JSON (similar to IAM policies) JSON Scope Organization, Root, or OU level Account or Resource level Grants permissions? \u274c No (it only limits) \u2705 Yes Important notes: - Attaching an SCP to the organization root or an OU sets a boundary for what member accounts can do. - SCPs do not replace IAM \u2014 you still need to attach IAM policies to actually grant access. Learn more about IAM policies: \ud83d\udcd8 AWS IAM Policies Documentation","title":"\ud83d\udfe0 AWS Organizations: Service Control Policies (SCPs)"},{"location":"cloud-practitioner/module-4/m4_sec4/#aws-key-management-service-aws-kms","text":"AWS Key Management Service (AWS KMS) enables you to create, manage, and control encryption keys used across AWS services and applications. Key characteristics: \ud83e\udde9 Uses Hardware Security Modules (HSMs) that are validated (or in the process of validation) under Federal Information Processing Standards (FIPS) 140-2 . \ud83d\udd10 Provides secure and resilient key management infrastructure. \ud83e\uddfe Integrates with AWS CloudTrail to log all key usage for compliance and auditing. \ud83e\udeaa Manages Customer Master Keys (CMKs) that control access to Data Encryption Keys (DEKs) . \ud83d\udd04 You can create, import, or rotate keys as needed. \ud83c\udf10 Integrates with most AWS services (e.g., S3, EBS, RDS, Lambda) to manage encryption. Learn more: \ud83d\udcd8 AWS Key Management Service Features","title":"\ud83d\udfe0 AWS Key Management Service (AWS KMS)"},{"location":"cloud-practitioner/module-4/m4_sec4/#amazon-cognito","text":"Amazon Cognito provides secure solutions for user authentication and access control within your applications. Core functionalities: \ud83e\uddcd\u200d\u2642\ufe0f Role-based access : You can define roles and map users to roles, ensuring that applications access only authorized AWS resources. \ud83c\udf0d Support for SAML 2.0 (Security Assertion Markup Language) : Cognito uses SAML \u2014 an open standard for exchanging identity and security information between identity providers and applications. Supports Single Sign-On (SSO) using corporate credentials (e.g., from Microsoft Active Directory). Enables seamless authentication across multiple applications. Compliance and Regulatory Support: Amazon Cognito helps organizations meet multiple security and compliance requirements , including those for highly regulated industries such as healthcare and finance. Compliance frameworks supported: - \ud83c\udfe5 HIPAA \u2013 AWS HIPAA Compliance - \ud83d\udcb3 PCI DSS \u2013 AWS PCI DSS FAQs - \ud83e\uddfe AICPA SOC \u2013 AWS SOC FAQs - \ud83c\udf10 ISO/IEC Standards : - ISO/IEC 27001 - ISO/IEC 27017 - ISO/IEC 27018 - ISO 9001 By using Amazon Cognito, you can manage users securely while complying with key international standards .","title":"\ud83d\udfe0 Amazon Cognito"},{"location":"cloud-practitioner/module-4/m4_sec4/#aws-shield","text":"AWS Shield is a managed Distributed Denial of Service (DDoS) protection service designed to protect applications running on AWS. Key capabilities: \ud83e\udde0 Provides always-on detection and automatic inline mitigations to minimize downtime and latency. \ud83d\udee1\ufe0f Protects against multiple attack types, including: Infrastructure-layer attacks (e.g., UDP floods) State exhaustion attacks (e.g., TCP SYN floods) Application-layer attacks (e.g., HTTP GET/POST floods) \ud83d\udcd8 For examples, refer to the AWS WAF Developer Guide . AWS Shield Service Tiers: Tier Description Cost AWS Shield Standard Enabled by default for all AWS customers. Provides baseline DDoS protection. Free AWS Shield Advanced Offers enhanced protection against large or sophisticated attacks. Includes 24/7 DDoS Response Team (DRT) support. Paid service (requires Enterprise or Business Support) AWS Shield Advanced extends protection to: - Amazon EC2 - Elastic Load Balancing (ELB) - Amazon CloudFront - AWS Global Accelerator - Amazon Route 53","title":"\ud83d\udfe0 AWS Shield"},{"location":"cloud-practitioner/module-4/m4_sec4/#key-takeaways","text":"\u2705 AWS Organizations allows central management and security control across multiple accounts. \u2705 Service Control Policies (SCPs) define the maximum permissions available within the organization. \u2705 AWS KMS manages encryption keys securely using FIPS-compliant HSMs. \u2705 Amazon Cognito provides secure, standards-based authentication and supports regulatory compliance (HIPAA, PCI DSS, ISO, etc.). \u2705 AWS Shield offers managed DDoS protection \u2014 both free (Standard) and advanced (paid) tiers.","title":"\ud83e\uddfe Key Takeaways"},{"location":"cloud-practitioner/module-4/m4_sec5/","text":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security 5\ufe0f\u20e3 Section 5: Securing Data on AWS \ud83d\udfe0 Encryption of Data at Rest Data encryption is an essential tool for protecting digital information. It converts readable data into an unreadable format using a secret key . Even if an attacker gains access to the data, they cannot interpret it without the key. Data at rest refers to information physically stored on disk or tape. AWS allows you to create encrypted file systems so that all data and metadata are automatically encrypted using the Advanced Encryption Standard (AES)-256 algorithm. When using AWS Key Management Service (KMS) , encryption and decryption are handled automatically and transparently , meaning you don\u2019t need to modify your applications. If your organization is subject to corporate or regulatory policies that require encryption, AWS recommends enabling encryption on all services that store data. \ud83d\udd17 See supported services: How AWS Services Use AWS KMS \ud83d\udfe0 Encryption of Data in Transit Data in transit refers to data moving across networks . It is protected using Transport Layer Security (TLS) 1.2 with AES-256 encryption . TLS was formerly known as Secure Sockets Layer (SSL) . AWS Certificate Manager (ACM) allows you to provision, manage, and deploy SSL/TLS certificates to secure network communications and verify the identity of websites and resources. Key points: HTTPS (TLS/SSL) protects traffic from eavesdropping and man-in-the-middle attacks . AWS Certificate Manager also handles certificate renewals automatically . HTTP traffic is not secure; always use HTTPS instead. Examples of encryption in transit: \ud83e\udde9 An EC2 instance mounting an Amazon EFS shared file system \u2014 all data traffic is encrypted using TLS/SSL. \ud83d\udcd8 Learn more: Encryption of EFS Data in Transit \ud83d\uddc4\ufe0f AWS Storage Gateway connecting on-premises infrastructure to Amazon S3 \u2014 data is encrypted while traveling over the Internet. \ud83d\udfe0 Securing Amazon S3 Buckets and Objects By default, Amazon S3 buckets are private and accessible only to users who are explicitly granted access. Best Practices for S3 Security: \ud83d\udeab Enable Amazon S3 Block Public Access Overrides all other permissions or bucket policies. Prevents accidental public exposure of S3 data. \ud83e\uddfe Use IAM policies Define which users or roles can access specific buckets and objects. \ud83d\udcdc Use Bucket Policies Define access permissions directly on the bucket. Useful when IAM authentication is not available. Bucket policies can grant cross-account access or public access , but must be written carefully. \u274c Use Access Control Lists (ACLs) only when necessary ACLs are an older access mechanism that predates IAM. Avoid overly permissive ACLs. \ud83d\udd0d Use AWS Trusted Advisor Check for bucket permissions that may allow global access .","title":"\u25fd\ufe0f Section 5 - Securing Data on AWS"},{"location":"cloud-practitioner/module-4/m4_sec5/#module-4-aws-cloud-security","text":"","title":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security"},{"location":"cloud-practitioner/module-4/m4_sec5/#5-section-5-securing-data-on-aws","text":"","title":"5\ufe0f\u20e3 Section 5: Securing Data on AWS"},{"location":"cloud-practitioner/module-4/m4_sec5/#encryption-of-data-at-rest","text":"Data encryption is an essential tool for protecting digital information. It converts readable data into an unreadable format using a secret key . Even if an attacker gains access to the data, they cannot interpret it without the key. Data at rest refers to information physically stored on disk or tape. AWS allows you to create encrypted file systems so that all data and metadata are automatically encrypted using the Advanced Encryption Standard (AES)-256 algorithm. When using AWS Key Management Service (KMS) , encryption and decryption are handled automatically and transparently , meaning you don\u2019t need to modify your applications. If your organization is subject to corporate or regulatory policies that require encryption, AWS recommends enabling encryption on all services that store data. \ud83d\udd17 See supported services: How AWS Services Use AWS KMS","title":"\ud83d\udfe0 Encryption of Data at Rest"},{"location":"cloud-practitioner/module-4/m4_sec5/#encryption-of-data-in-transit","text":"Data in transit refers to data moving across networks . It is protected using Transport Layer Security (TLS) 1.2 with AES-256 encryption . TLS was formerly known as Secure Sockets Layer (SSL) . AWS Certificate Manager (ACM) allows you to provision, manage, and deploy SSL/TLS certificates to secure network communications and verify the identity of websites and resources. Key points: HTTPS (TLS/SSL) protects traffic from eavesdropping and man-in-the-middle attacks . AWS Certificate Manager also handles certificate renewals automatically . HTTP traffic is not secure; always use HTTPS instead. Examples of encryption in transit: \ud83e\udde9 An EC2 instance mounting an Amazon EFS shared file system \u2014 all data traffic is encrypted using TLS/SSL. \ud83d\udcd8 Learn more: Encryption of EFS Data in Transit \ud83d\uddc4\ufe0f AWS Storage Gateway connecting on-premises infrastructure to Amazon S3 \u2014 data is encrypted while traveling over the Internet.","title":"\ud83d\udfe0 Encryption of Data in Transit"},{"location":"cloud-practitioner/module-4/m4_sec5/#securing-amazon-s3-buckets-and-objects","text":"By default, Amazon S3 buckets are private and accessible only to users who are explicitly granted access. Best Practices for S3 Security: \ud83d\udeab Enable Amazon S3 Block Public Access Overrides all other permissions or bucket policies. Prevents accidental public exposure of S3 data. \ud83e\uddfe Use IAM policies Define which users or roles can access specific buckets and objects. \ud83d\udcdc Use Bucket Policies Define access permissions directly on the bucket. Useful when IAM authentication is not available. Bucket policies can grant cross-account access or public access , but must be written carefully. \u274c Use Access Control Lists (ACLs) only when necessary ACLs are an older access mechanism that predates IAM. Avoid overly permissive ACLs. \ud83d\udd0d Use AWS Trusted Advisor Check for bucket permissions that may allow global access .","title":"\ud83d\udfe0 Securing Amazon S3 Buckets and Objects"},{"location":"cloud-practitioner/module-4/m4_sec6/","text":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security 6\ufe0f\u20e3 Section 6: Working to Ensure Compliance \ud83d\udfe0 AWS Compliance Programs AWS works with external certifying bodies and independent auditors to provide customers with transparency into the security policies, processes, and controls implemented by AWS. A full list of compliance programs is available here: \ud83d\udd17 AWS Compliance Programs For details on which AWS services are covered under specific compliance frameworks, visit: \ud83d\udd17 AWS Services in Scope by Compliance Program Example: ISO/IEC 27001:2013 Certification This certification defines requirements for establishing, maintaining, and improving an Information Security Management System (ISMS) . It demonstrates that AWS manages security in a comprehensive and continuous way. AWS also supports customers in meeting common regulations and legal requirements , such as: \ud83c\udfe5 Health Insurance Portability and Accountability Act (HIPAA) \u2013 for healthcare data protection \ud83c\uddea\ud83c\uddfa General Data Protection Regulation (GDPR) \u2013 protects EU citizens\u2019 privacy and data \ud83d\udcd8 AWS GDPR Center \ud83d\udcb3 Payment Card Industry Data Security Standard (PCI DSS) \u2013 for payment data protection \ud83d\udfe0 AWS Config AWS Config enables you to assess, audit, and evaluate the configurations of your AWS resources. It continuously monitors and records resource configurations and automatically evaluates them against predefined compliance rules. Capabilities: \ud83d\udccb Tracks changes and relationships between resources. \ud83e\uddfe Provides a detailed configuration history for auditing. \u2699\ufe0f Detects and flags non-compliant resources . \ud83c\udf0d Operates as a Regional service , but can aggregate results across Regions or accounts for unified visibility. Benefits: - Simplifies compliance auditing , security analysis , change management , and operational troubleshooting . \ud83d\udfe0 AWS Artifact AWS Artifact provides on-demand access to AWS security and compliance documentation , such as: - ISO certifications - PCI reports - Service Organization Control (SOC) reports Key uses: Submit compliance documents to auditors or regulators to demonstrate AWS security posture. Use reports to evaluate your own cloud architecture and internal controls . Manage agreements and compliance documents (e.g., Business Associate Agreement for HIPAA). Features: AWS Artifact only provides documents about AWS itself . Customers are responsible for their own organization\u2019s compliance . You can review, accept, and track agreements (such as HIPAA BAA) directly in Artifact. Agreements can apply to multiple AWS accounts via AWS Organizations . \ud83d\udcd8 Learn more: Managing Agreements in AWS Artifact \ud83e\uddfe Key Takeaways \u2705 AWS Compliance Programs provide transparency into AWS security controls and certifications. \u2705 AWS Config continuously monitors configurations for compliance and security issues. \u2705 AWS Artifact offers access to official AWS compliance and audit reports for internal and external use.","title":"\u25fd\ufe0f Section 6 - Working to Ensure Compliance"},{"location":"cloud-practitioner/module-4/m4_sec6/#module-4-aws-cloud-security","text":"","title":"\ud83d\udee1\ufe0f Module 4 - AWS Cloud Security"},{"location":"cloud-practitioner/module-4/m4_sec6/#6-section-6-working-to-ensure-compliance","text":"","title":"6\ufe0f\u20e3 Section 6: Working to Ensure Compliance"},{"location":"cloud-practitioner/module-4/m4_sec6/#aws-compliance-programs","text":"AWS works with external certifying bodies and independent auditors to provide customers with transparency into the security policies, processes, and controls implemented by AWS. A full list of compliance programs is available here: \ud83d\udd17 AWS Compliance Programs For details on which AWS services are covered under specific compliance frameworks, visit: \ud83d\udd17 AWS Services in Scope by Compliance Program Example: ISO/IEC 27001:2013 Certification This certification defines requirements for establishing, maintaining, and improving an Information Security Management System (ISMS) . It demonstrates that AWS manages security in a comprehensive and continuous way. AWS also supports customers in meeting common regulations and legal requirements , such as: \ud83c\udfe5 Health Insurance Portability and Accountability Act (HIPAA) \u2013 for healthcare data protection \ud83c\uddea\ud83c\uddfa General Data Protection Regulation (GDPR) \u2013 protects EU citizens\u2019 privacy and data \ud83d\udcd8 AWS GDPR Center \ud83d\udcb3 Payment Card Industry Data Security Standard (PCI DSS) \u2013 for payment data protection","title":"\ud83d\udfe0 AWS Compliance Programs"},{"location":"cloud-practitioner/module-4/m4_sec6/#aws-config","text":"AWS Config enables you to assess, audit, and evaluate the configurations of your AWS resources. It continuously monitors and records resource configurations and automatically evaluates them against predefined compliance rules. Capabilities: \ud83d\udccb Tracks changes and relationships between resources. \ud83e\uddfe Provides a detailed configuration history for auditing. \u2699\ufe0f Detects and flags non-compliant resources . \ud83c\udf0d Operates as a Regional service , but can aggregate results across Regions or accounts for unified visibility. Benefits: - Simplifies compliance auditing , security analysis , change management , and operational troubleshooting .","title":"\ud83d\udfe0 AWS Config"},{"location":"cloud-practitioner/module-4/m4_sec6/#aws-artifact","text":"AWS Artifact provides on-demand access to AWS security and compliance documentation , such as: - ISO certifications - PCI reports - Service Organization Control (SOC) reports Key uses: Submit compliance documents to auditors or regulators to demonstrate AWS security posture. Use reports to evaluate your own cloud architecture and internal controls . Manage agreements and compliance documents (e.g., Business Associate Agreement for HIPAA). Features: AWS Artifact only provides documents about AWS itself . Customers are responsible for their own organization\u2019s compliance . You can review, accept, and track agreements (such as HIPAA BAA) directly in Artifact. Agreements can apply to multiple AWS accounts via AWS Organizations . \ud83d\udcd8 Learn more: Managing Agreements in AWS Artifact","title":"\ud83d\udfe0 AWS Artifact"},{"location":"cloud-practitioner/module-4/m4_sec6/#key-takeaways","text":"\u2705 AWS Compliance Programs provide transparency into AWS security controls and certifications. \u2705 AWS Config continuously monitors configurations for compliance and security issues. \u2705 AWS Artifact offers access to official AWS compliance and audit reports for internal and external use.","title":"\ud83e\uddfe Key Takeaways"},{"location":"cloud-practitioner/module-5/m5_sec1/","text":"\ud83c\udf10 Module 5 - Networking and Content Delivery 1\ufe0f\u20e3 Section 1: Networking Basics In this section, we review fundamental networking concepts that form the foundation for understanding Amazon Virtual Private Cloud (Amazon VPC) . \ud83d\udfe0 What is a Network? A computer network is a connection of two or more client machines that share resources. \ud83d\udd39 Key concepts: A network can be logically partitioned into smaller units called subnets . Networking devices (such as routers and switches) connect clients and enable communication between them. \ud83d\udcd8 Example: Subnet 1 \u2194 Router \u2194 Subnet 2 \ud83d\udfe0 IP Addresses Each device in a network has a unique Internet Protocol (IP) address that identifies it. IP addresses are written in decimal format (e.g., 192.0.2.0 ) but are stored in binary by machines. Each IP address consists of four octets , separated by dots ( . ). Each octet = 8 bits \u2192 ranges from 0 to 255 . Total = 32 bits in binary (4 \u00d7 8). \ud83d\udca1 Example: 192.0.2.0 = 11000000.00000000.00000010.00000000 \ud83d\udfe0 IPv4 vs IPv6 Version Bit Length Example Description IPv4 32 bits 192.0.2.0 Older standard, supports ~4.3 billion addresses IPv6 128 bits 2600:1f18:22ba:8c00:ba86:a05e:a5ba:00FF Newer standard, supports vastly more devices \ud83d\udd39 IPv6 address format: 8 groups of 4 hexadecimal characters separated by colons ( : ). Each group = 16 bits \u2192 range from 0000 to FFFF . Total = 128 bits in binary. \u2705 IPv6 enables more scalability to accommodate the growing number of internet-connected devices. \ud83d\udfe0 Classless Inter-Domain Routing (CIDR) CIDR (Classless Inter-Domain Routing) is a notation used to describe a range of IP addresses . \ud83d\udcd8 CIDR format: <IP Address>/<Prefix Length> For example: 192.0.2.0/24 \ud83d\udd39 How it works: The number after the slash ( / ) indicates how many bits are fixed for the network identifier. The remaining bits are variable (host identifiers). \ud83e\uddee Example: CIDR Fixed Bits Flexible Bits Address Range Total IPs 192.0.2.0/24 24 8 192.0.2.0 \u2013 192.0.2.255 256 192.0.2.0/16 16 16 192.0.0.0 \u2013 192.0.255.255 65,536 \u2699\ufe0f Special CIDR Cases: 192.0.2.0/32 \u2192 Only one fixed IP (useful for firewall rules). 0.0.0.0/0 \u2192 Represents all IP addresses on the internet . \ud83d\udca1 CIDR simplifies routing and allocation of IP addresses by grouping consecutive addresses efficiently. \ud83d\udfe0 OSI Model (Open Systems Interconnection) The OSI model is a conceptual framework that describes how data travels through a network . It consists of 7 layers , each responsible for specific functions and protocols. Layer Name Function Common Protocols / Addresses 7 Application Interface for apps to access the network HTTP(S), FTP, DHCP, LDAP 6 Presentation Data formatting, encryption, translation ASCII, ICA 5 Session Manages sessions and data exchange NetBIOS, RPC 4 Transport End-to-end communication between hosts TCP, UDP 3 Network Routing and packet forwarding IP 2 Data Link Transfers data within same LAN MAC, Bridges, Switches 1 Physical Transmits raw bits over medium Electrical signals, Hubs \ud83e\udde9 Key Notes: Routers operate at Layer 3 (Network) . Switches and bridges operate at Layer 2 (Data Link) . Hubs work at Layer 1 (Physical) . \ud83d\udcac The OSI model helps you understand how communication happens inside Amazon VPC , which will be covered next. \ud83d\udfe2 Key Takeaways \u2705 A network connects devices to share resources and can be divided into subnets . \u2705 Each device has a unique IP address (IPv4 or IPv6). \u2705 CIDR notation defines IP address ranges using a prefix (e.g., /24 ). \u2705 The OSI model describes how data moves through seven network layers. \u2705 These fundamentals are essential for understanding Amazon VPC and AWS networking.","title":"\u25fd\ufe0f Section 1 - Networking Basics"},{"location":"cloud-practitioner/module-5/m5_sec1/#module-5-networking-and-content-delivery","text":"","title":"\ud83c\udf10 Module 5 - Networking and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec1/#1-section-1-networking-basics","text":"In this section, we review fundamental networking concepts that form the foundation for understanding Amazon Virtual Private Cloud (Amazon VPC) .","title":"1\ufe0f\u20e3 Section 1: Networking Basics"},{"location":"cloud-practitioner/module-5/m5_sec1/#what-is-a-network","text":"A computer network is a connection of two or more client machines that share resources. \ud83d\udd39 Key concepts: A network can be logically partitioned into smaller units called subnets . Networking devices (such as routers and switches) connect clients and enable communication between them. \ud83d\udcd8 Example: Subnet 1 \u2194 Router \u2194 Subnet 2","title":"\ud83d\udfe0 What is a Network?"},{"location":"cloud-practitioner/module-5/m5_sec1/#ip-addresses","text":"Each device in a network has a unique Internet Protocol (IP) address that identifies it. IP addresses are written in decimal format (e.g., 192.0.2.0 ) but are stored in binary by machines. Each IP address consists of four octets , separated by dots ( . ). Each octet = 8 bits \u2192 ranges from 0 to 255 . Total = 32 bits in binary (4 \u00d7 8). \ud83d\udca1 Example: 192.0.2.0 = 11000000.00000000.00000010.00000000","title":"\ud83d\udfe0 IP Addresses"},{"location":"cloud-practitioner/module-5/m5_sec1/#ipv4-vs-ipv6","text":"Version Bit Length Example Description IPv4 32 bits 192.0.2.0 Older standard, supports ~4.3 billion addresses IPv6 128 bits 2600:1f18:22ba:8c00:ba86:a05e:a5ba:00FF Newer standard, supports vastly more devices \ud83d\udd39 IPv6 address format: 8 groups of 4 hexadecimal characters separated by colons ( : ). Each group = 16 bits \u2192 range from 0000 to FFFF . Total = 128 bits in binary. \u2705 IPv6 enables more scalability to accommodate the growing number of internet-connected devices.","title":"\ud83d\udfe0 IPv4 vs IPv6"},{"location":"cloud-practitioner/module-5/m5_sec1/#classless-inter-domain-routing-cidr","text":"CIDR (Classless Inter-Domain Routing) is a notation used to describe a range of IP addresses . \ud83d\udcd8 CIDR format: <IP Address>/<Prefix Length> For example: 192.0.2.0/24 \ud83d\udd39 How it works: The number after the slash ( / ) indicates how many bits are fixed for the network identifier. The remaining bits are variable (host identifiers).","title":"\ud83d\udfe0 Classless Inter-Domain Routing (CIDR)"},{"location":"cloud-practitioner/module-5/m5_sec1/#example","text":"CIDR Fixed Bits Flexible Bits Address Range Total IPs 192.0.2.0/24 24 8 192.0.2.0 \u2013 192.0.2.255 256 192.0.2.0/16 16 16 192.0.0.0 \u2013 192.0.255.255 65,536","title":"\ud83e\uddee Example:"},{"location":"cloud-practitioner/module-5/m5_sec1/#special-cidr-cases","text":"192.0.2.0/32 \u2192 Only one fixed IP (useful for firewall rules). 0.0.0.0/0 \u2192 Represents all IP addresses on the internet . \ud83d\udca1 CIDR simplifies routing and allocation of IP addresses by grouping consecutive addresses efficiently.","title":"\u2699\ufe0f Special CIDR Cases:"},{"location":"cloud-practitioner/module-5/m5_sec1/#osi-model-open-systems-interconnection","text":"The OSI model is a conceptual framework that describes how data travels through a network . It consists of 7 layers , each responsible for specific functions and protocols. Layer Name Function Common Protocols / Addresses 7 Application Interface for apps to access the network HTTP(S), FTP, DHCP, LDAP 6 Presentation Data formatting, encryption, translation ASCII, ICA 5 Session Manages sessions and data exchange NetBIOS, RPC 4 Transport End-to-end communication between hosts TCP, UDP 3 Network Routing and packet forwarding IP 2 Data Link Transfers data within same LAN MAC, Bridges, Switches 1 Physical Transmits raw bits over medium Electrical signals, Hubs \ud83e\udde9 Key Notes: Routers operate at Layer 3 (Network) . Switches and bridges operate at Layer 2 (Data Link) . Hubs work at Layer 1 (Physical) . \ud83d\udcac The OSI model helps you understand how communication happens inside Amazon VPC , which will be covered next.","title":"\ud83d\udfe0 OSI Model (Open Systems Interconnection)"},{"location":"cloud-practitioner/module-5/m5_sec1/#key-takeaways","text":"\u2705 A network connects devices to share resources and can be divided into subnets . \u2705 Each device has a unique IP address (IPv4 or IPv6). \u2705 CIDR notation defines IP address ranges using a prefix (e.g., /24 ). \u2705 The OSI model describes how data moves through seven network layers. \u2705 These fundamentals are essential for understanding Amazon VPC and AWS networking.","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-5/m5_sec2/","text":"\ud83c\udf10 Module 5 - Networking and Content Delivery 2\ufe0f\u20e3 Section 2: Amazon Virtual Private Cloud (Amazon VPC) \ud83d\udfe0 What is Amazon VPC? Amazon Virtual Private Cloud (Amazon VPC) enables you to provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define and control . \ud83d\udd39 Key capabilities: Selection of your own IP address range . Creation of subnets within the VPC. Configuration of route tables and network gateways. Use of IPv4 and IPv6 for secure access to resources. Multiple layers of network security using security groups and network ACLs . \ud83d\udcd8 Example setup: Public subnet \u2192 web servers that access the internet. Private subnet \u2192 backend systems (databases, application servers) without internet access. \u2705 Amazon VPC provides full control over your virtual networking environment, similar to running your own data center but with the scalability of AWS. \ud83d\udfe0 VPCs and Subnets A VPC is a virtual network isolated from other VPCs in the AWS Cloud. \ud83d\udccb VPC characteristics: Logically isolated from other VPCs. Dedicated to your AWS account. Belongs to a single Region but can span multiple Availability Zones (AZs) . \ud83d\udccb Subnets characteristics: A range of IP addresses that divides a VPC into smaller networks. Each subnet belongs to a single Availability Zone . Classified as: Public subnet \u2192 direct internet access. Private subnet \u2192 no internet access. \ud83d\udca1 Best practice: Create subnets in multiple AZs for high availability and fault tolerance. \ud83d\udfe0 IP Addressing in a VPC When you create a VPC, you must assign an IPv4 CIDR block (range of private IPv4 addresses). \ud83d\udd39 Important notes: CIDR block cannot be changed after creation. CIDR block size limits: Largest: /16 \u2192 65,536 addresses. Smallest: /28 \u2192 16 addresses. IPv6 addressing is also supported. Subnet CIDR blocks cannot overlap. No duplicate IP addresses are allowed in the same VPC. \ud83e\uddee Example: A VPC with a /16 block (65,536 IPs) can be divided into /24 subnets (256 IPs each). \ud83d\udcda Learn more: AWS VPC Documentation \ud83d\udfe0 Reserved IP Addresses When you create a subnet , AWS reserves five IP addresses in each subnet\u2019s CIDR block that cannot be used. Reserved For Example (CIDR 10.0.0.0/24) Description Network address 10.0.0.0 Identifies the subnet itself VPC local router 10.0.0.1 For internal communication DNS resolution 10.0.0.2 AWS-provided DNS Future use 10.0.0.3 Reserved for AWS use Broadcast address 10.0.0.255 Used for broadcast traffic \ud83d\udca1 Example: A subnet with /24 CIDR block (256 addresses) \u2192 251 available for use. \ud83d\udfe0 Public IP Address Types Each instance in a VPC automatically receives a private IP address . You can also assign public IPs for internet access. \ud83d\udccb Types of public IP addresses: Public IPv4 address \u2192 Automatically or manually assigned at the subnet level. Elastic IP address (EIP): Static, public IPv4 address tied to your AWS account. Can be allocated, reassigned, or released anytime. Allows quick recovery by remapping to another instance. Additional costs may apply \u2014 release unused EIPs to avoid charges. \ud83d\udca1 Associating an Elastic IP with a network interface allows you to move all its attributes between instances in one step. \ud83d\udcda Learn more: Elastic IP Addresses Documentation \ud83d\udfe0 Elastic Network Interface (ENI) An Elastic Network Interface (ENI) is a virtual network interface that you can: Attach to an instance. Detach from an instance and reattach to another. \ud83d\udd39 Key points: ENI attributes (IP, MAC, security group) move with it when reattached. Each instance has a primary ENI (default, non-detachable). Additional ENIs can be created and attached depending on instance type. \ud83d\udcda Learn more: Elastic Network Interface Documentation \ud83d\udfe0 Route Tables and Routes A route table defines how network traffic is directed from subnets within your VPC. \ud83d\udccb Key concepts: A route specifies: Destination \u2192 CIDR block of target network. Target \u2192 where to send traffic (e.g., internet gateway, NAT gateway). Each route table contains a default local route for internal VPC communication. Every subnet must be associated with exactly one route table. \ud83e\udded Main route table: Automatically created with the VPC. Controls routing for subnets not explicitly linked to another route table. You can add custom routes , but cannot delete the local route . \ud83d\udcda Learn more: VPC Route Tables Documentation \ud83d\udfe2 Key Takeaways \u2705 A VPC is a logically isolated section of the AWS Cloud. \u2705 Each VPC belongs to one Region and requires a CIDR block . \u2705 Subnets divide a VPC and each belong to one Availability Zone. \u2705 Route tables control traffic within and outside subnets. \u2705 Each route table includes a default local route that cannot be deleted.","title":"\u25fd\ufe0f Section 2 - Amazon Virtual Private Cloud (Amazon VPC)"},{"location":"cloud-practitioner/module-5/m5_sec2/#module-5-networking-and-content-delivery","text":"","title":"\ud83c\udf10 Module 5 - Networking and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec2/#2-section-2-amazon-virtual-private-cloud-amazon-vpc","text":"","title":"2\ufe0f\u20e3 Section 2: Amazon Virtual Private Cloud (Amazon VPC)"},{"location":"cloud-practitioner/module-5/m5_sec2/#what-is-amazon-vpc","text":"Amazon Virtual Private Cloud (Amazon VPC) enables you to provision a logically isolated section of the AWS Cloud where you can launch AWS resources in a virtual network that you define and control . \ud83d\udd39 Key capabilities: Selection of your own IP address range . Creation of subnets within the VPC. Configuration of route tables and network gateways. Use of IPv4 and IPv6 for secure access to resources. Multiple layers of network security using security groups and network ACLs . \ud83d\udcd8 Example setup: Public subnet \u2192 web servers that access the internet. Private subnet \u2192 backend systems (databases, application servers) without internet access. \u2705 Amazon VPC provides full control over your virtual networking environment, similar to running your own data center but with the scalability of AWS.","title":"\ud83d\udfe0 What is Amazon VPC?"},{"location":"cloud-practitioner/module-5/m5_sec2/#vpcs-and-subnets","text":"A VPC is a virtual network isolated from other VPCs in the AWS Cloud.","title":"\ud83d\udfe0 VPCs and Subnets"},{"location":"cloud-practitioner/module-5/m5_sec2/#vpc-characteristics","text":"Logically isolated from other VPCs. Dedicated to your AWS account. Belongs to a single Region but can span multiple Availability Zones (AZs) .","title":"\ud83d\udccb VPC characteristics:"},{"location":"cloud-practitioner/module-5/m5_sec2/#subnets-characteristics","text":"A range of IP addresses that divides a VPC into smaller networks. Each subnet belongs to a single Availability Zone . Classified as: Public subnet \u2192 direct internet access. Private subnet \u2192 no internet access. \ud83d\udca1 Best practice: Create subnets in multiple AZs for high availability and fault tolerance.","title":"\ud83d\udccb Subnets characteristics:"},{"location":"cloud-practitioner/module-5/m5_sec2/#ip-addressing-in-a-vpc","text":"When you create a VPC, you must assign an IPv4 CIDR block (range of private IPv4 addresses). \ud83d\udd39 Important notes: CIDR block cannot be changed after creation. CIDR block size limits: Largest: /16 \u2192 65,536 addresses. Smallest: /28 \u2192 16 addresses. IPv6 addressing is also supported. Subnet CIDR blocks cannot overlap. No duplicate IP addresses are allowed in the same VPC. \ud83e\uddee Example: A VPC with a /16 block (65,536 IPs) can be divided into /24 subnets (256 IPs each). \ud83d\udcda Learn more: AWS VPC Documentation","title":"\ud83d\udfe0 IP Addressing in a VPC"},{"location":"cloud-practitioner/module-5/m5_sec2/#reserved-ip-addresses","text":"When you create a subnet , AWS reserves five IP addresses in each subnet\u2019s CIDR block that cannot be used. Reserved For Example (CIDR 10.0.0.0/24) Description Network address 10.0.0.0 Identifies the subnet itself VPC local router 10.0.0.1 For internal communication DNS resolution 10.0.0.2 AWS-provided DNS Future use 10.0.0.3 Reserved for AWS use Broadcast address 10.0.0.255 Used for broadcast traffic \ud83d\udca1 Example: A subnet with /24 CIDR block (256 addresses) \u2192 251 available for use.","title":"\ud83d\udfe0 Reserved IP Addresses"},{"location":"cloud-practitioner/module-5/m5_sec2/#public-ip-address-types","text":"Each instance in a VPC automatically receives a private IP address . You can also assign public IPs for internet access.","title":"\ud83d\udfe0 Public IP Address Types"},{"location":"cloud-practitioner/module-5/m5_sec2/#types-of-public-ip-addresses","text":"Public IPv4 address \u2192 Automatically or manually assigned at the subnet level. Elastic IP address (EIP): Static, public IPv4 address tied to your AWS account. Can be allocated, reassigned, or released anytime. Allows quick recovery by remapping to another instance. Additional costs may apply \u2014 release unused EIPs to avoid charges. \ud83d\udca1 Associating an Elastic IP with a network interface allows you to move all its attributes between instances in one step. \ud83d\udcda Learn more: Elastic IP Addresses Documentation","title":"\ud83d\udccb Types of public IP addresses:"},{"location":"cloud-practitioner/module-5/m5_sec2/#elastic-network-interface-eni","text":"An Elastic Network Interface (ENI) is a virtual network interface that you can: Attach to an instance. Detach from an instance and reattach to another. \ud83d\udd39 Key points: ENI attributes (IP, MAC, security group) move with it when reattached. Each instance has a primary ENI (default, non-detachable). Additional ENIs can be created and attached depending on instance type. \ud83d\udcda Learn more: Elastic Network Interface Documentation","title":"\ud83d\udfe0 Elastic Network Interface (ENI)"},{"location":"cloud-practitioner/module-5/m5_sec2/#route-tables-and-routes","text":"A route table defines how network traffic is directed from subnets within your VPC.","title":"\ud83d\udfe0 Route Tables and Routes"},{"location":"cloud-practitioner/module-5/m5_sec2/#key-concepts","text":"A route specifies: Destination \u2192 CIDR block of target network. Target \u2192 where to send traffic (e.g., internet gateway, NAT gateway). Each route table contains a default local route for internal VPC communication. Every subnet must be associated with exactly one route table.","title":"\ud83d\udccb Key concepts:"},{"location":"cloud-practitioner/module-5/m5_sec2/#main-route-table","text":"Automatically created with the VPC. Controls routing for subnets not explicitly linked to another route table. You can add custom routes , but cannot delete the local route . \ud83d\udcda Learn more: VPC Route Tables Documentation","title":"\ud83e\udded Main route table:"},{"location":"cloud-practitioner/module-5/m5_sec2/#key-takeaways","text":"\u2705 A VPC is a logically isolated section of the AWS Cloud. \u2705 Each VPC belongs to one Region and requires a CIDR block . \u2705 Subnets divide a VPC and each belong to one Availability Zone. \u2705 Route tables control traffic within and outside subnets. \u2705 Each route table includes a default local route that cannot be deleted.","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-5/m5_sec3/","text":"\ud83c\udf10 Module 5 - Networking and Content Delivery 3\ufe0f\u20e3 Section 3: VPC Connectivity Options \ud83d\udfe0 AWS Site-to-Site VPN By default, instances launched in a VPC cannot communicate with remote networks . To connect your VPC to an on-premises or remote data center, you can set up a Site-to-Site VPN connection . \u2699\ufe0f Steps to create a VPN connection: Create a Virtual Private Gateway (VGW): Attach it to your VPC. Define a Customer Gateway: Provides AWS with information about your VPN device. Configure route tables: Direct traffic destined for your corporate network to the VGW. Establish a Site-to-Site VPN connection: Links the two networks securely. Update security groups and routing rules to allow communication. \ud83d\udcd8 Learn more: AWS VPN Connections Documentation \ud83d\udca1 Example: Subnet Route Table Destination Target Public Subnet 10.0.0.0/16 local 0.0.0.0/0 igw-id Private Subnet 10.0.0.0/16 local 192.168.10.0/24 vgw-id \ud83d\udfe0 AWS Direct Connect (DX) AWS Direct Connect (DX) provides a dedicated, private network connection between your on-premises data center and AWS. \ud83d\udca1 Benefits: Reduces network latency caused by distance. Increases bandwidth throughput. Provides a more consistent network experience than internet-based VPNs. Uses the IEEE 802.1Q VLAN standard for virtual local area networks. \ud83d\udcda Learn more: AWS Direct Connect \ud83e\udde9 Use case: Ideal for organizations with high-volume data transfers or latency-sensitive workloads between AWS and their data centers. \ud83d\udfe0 VPC Endpoints A VPC endpoint allows private connectivity between your VPC and supported AWS services without using the internet , VPN, or Direct Connect. \ud83d\udd12 Traffic never leaves the AWS network. Instances in the VPC do not require public IPs to access these services. \ud83e\udde9 Two types of endpoints: Interface Endpoints (powered by AWS PrivateLink) Connect to AWS services, partner services, or other customers' VPCs. Each connection creates an Elastic Network Interface (ENI) with a private IP address. You are charged per endpoint hour + data processing. Example: Amazon EC2 API endpoint. Gateway Endpoints Free to use (no hourly charge). Used for Amazon S3 and Amazon DynamoDB . Add a route to the route table targeting the gateway endpoint. \ud83d\udcda Learn more: VPC Endpoints Documentation \ud83d\udfe0 AWS Transit Gateway As organizations grow, they often have hundreds of VPCs across multiple AWS accounts and Regions. Managing point-to-point connections between them (via VPN or VPC peering) becomes complex. AWS Transit Gateway (TGW) simplifies this by acting as a central hub that connects multiple VPCs, on-premises networks, and remote offices using a hub-and-spoke model . \u2699\ufe0f Benefits of AWS Transit Gateway: Centralized control of connectivity policies . Simplified management and reduced operational cost. Scalable to connect multiple networks efficiently. Each network connects only once\u2014to the transit gateway\u2014and becomes reachable by all others. \ud83d\udcda Learn more: AWS Transit Gateway Documentation \ud83d\udca1 Hub-and-Spoke Model: +--------------------+ | AWS Transit GW | +--------------------+ / | \\ VPC A VPC B On-Premises \ud83e\udde0 Activities \ud83d\udd39 Network Diagram Exercise Identify and label the VPC components such as: Internet gateway (IGW) NAT gateway Elastic Network Interface (ENI) Route tables (public and private) Subnets (public and private) IP address ranges \u2705 Solution Overview: Public Subnet: 10.0.1.0/24 (uses IGW) Private Subnet: 10.0.2.0/24 (uses NAT Gateway) Local route: 10.0.0.0/16 Default route: 0.0.0.0/0 \u2192 IGW \ud83c\udfa5 AWS VPC Demonstration Watch the recorded demo: AWS VPC Wizard Demo Learn how to use the VPC Wizard to create a VPC with public and private subnets. \ud83d\udfe2 Key Takeaways \u2705 AWS provides multiple VPC connectivity options: Internet Gateway (IGW): Connects your VPC to the internet. NAT Gateway: Allows private subnets to connect to the internet securely. VPC Endpoint: Connects your VPC privately to AWS services. VPC Peering: Connects two VPCs directly. VPC Sharing: Allows multiple AWS accounts to share a single centrally managed VPC. AWS Site-to-Site VPN: Connects your VPC to on-prem networks securely. AWS Direct Connect: Provides dedicated physical connectivity. AWS Transit Gateway: Central hub for multi-VPC and on-prem connectivity. \u2705 Use the VPC Wizard to implement and test your network design efficiently.","title":"\u25fd\ufe0f Section 3 - VPC Connectivity Options"},{"location":"cloud-practitioner/module-5/m5_sec3/#module-5-networking-and-content-delivery","text":"","title":"\ud83c\udf10 Module 5 - Networking and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec3/#3-section-3-vpc-connectivity-options","text":"","title":"3\ufe0f\u20e3 Section 3: VPC Connectivity Options"},{"location":"cloud-practitioner/module-5/m5_sec3/#aws-site-to-site-vpn","text":"By default, instances launched in a VPC cannot communicate with remote networks . To connect your VPC to an on-premises or remote data center, you can set up a Site-to-Site VPN connection .","title":"\ud83d\udfe0 AWS Site-to-Site VPN"},{"location":"cloud-practitioner/module-5/m5_sec3/#steps-to-create-a-vpn-connection","text":"Create a Virtual Private Gateway (VGW): Attach it to your VPC. Define a Customer Gateway: Provides AWS with information about your VPN device. Configure route tables: Direct traffic destined for your corporate network to the VGW. Establish a Site-to-Site VPN connection: Links the two networks securely. Update security groups and routing rules to allow communication. \ud83d\udcd8 Learn more: AWS VPN Connections Documentation \ud83d\udca1 Example: Subnet Route Table Destination Target Public Subnet 10.0.0.0/16 local 0.0.0.0/0 igw-id Private Subnet 10.0.0.0/16 local 192.168.10.0/24 vgw-id","title":"\u2699\ufe0f Steps to create a VPN connection:"},{"location":"cloud-practitioner/module-5/m5_sec3/#aws-direct-connect-dx","text":"AWS Direct Connect (DX) provides a dedicated, private network connection between your on-premises data center and AWS.","title":"\ud83d\udfe0 AWS Direct Connect (DX)"},{"location":"cloud-practitioner/module-5/m5_sec3/#benefits","text":"Reduces network latency caused by distance. Increases bandwidth throughput. Provides a more consistent network experience than internet-based VPNs. Uses the IEEE 802.1Q VLAN standard for virtual local area networks. \ud83d\udcda Learn more: AWS Direct Connect \ud83e\udde9 Use case: Ideal for organizations with high-volume data transfers or latency-sensitive workloads between AWS and their data centers.","title":"\ud83d\udca1 Benefits:"},{"location":"cloud-practitioner/module-5/m5_sec3/#vpc-endpoints","text":"A VPC endpoint allows private connectivity between your VPC and supported AWS services without using the internet , VPN, or Direct Connect. \ud83d\udd12 Traffic never leaves the AWS network. Instances in the VPC do not require public IPs to access these services.","title":"\ud83d\udfe0 VPC Endpoints"},{"location":"cloud-practitioner/module-5/m5_sec3/#two-types-of-endpoints","text":"Interface Endpoints (powered by AWS PrivateLink) Connect to AWS services, partner services, or other customers' VPCs. Each connection creates an Elastic Network Interface (ENI) with a private IP address. You are charged per endpoint hour + data processing. Example: Amazon EC2 API endpoint. Gateway Endpoints Free to use (no hourly charge). Used for Amazon S3 and Amazon DynamoDB . Add a route to the route table targeting the gateway endpoint. \ud83d\udcda Learn more: VPC Endpoints Documentation","title":"\ud83e\udde9 Two types of endpoints:"},{"location":"cloud-practitioner/module-5/m5_sec3/#aws-transit-gateway","text":"As organizations grow, they often have hundreds of VPCs across multiple AWS accounts and Regions. Managing point-to-point connections between them (via VPN or VPC peering) becomes complex. AWS Transit Gateway (TGW) simplifies this by acting as a central hub that connects multiple VPCs, on-premises networks, and remote offices using a hub-and-spoke model .","title":"\ud83d\udfe0 AWS Transit Gateway"},{"location":"cloud-practitioner/module-5/m5_sec3/#benefits-of-aws-transit-gateway","text":"Centralized control of connectivity policies . Simplified management and reduced operational cost. Scalable to connect multiple networks efficiently. Each network connects only once\u2014to the transit gateway\u2014and becomes reachable by all others. \ud83d\udcda Learn more: AWS Transit Gateway Documentation \ud83d\udca1 Hub-and-Spoke Model: +--------------------+ | AWS Transit GW | +--------------------+ / | \\ VPC A VPC B On-Premises","title":"\u2699\ufe0f Benefits of AWS Transit Gateway:"},{"location":"cloud-practitioner/module-5/m5_sec3/#activities","text":"","title":"\ud83e\udde0 Activities"},{"location":"cloud-practitioner/module-5/m5_sec3/#network-diagram-exercise","text":"Identify and label the VPC components such as: Internet gateway (IGW) NAT gateway Elastic Network Interface (ENI) Route tables (public and private) Subnets (public and private) IP address ranges \u2705 Solution Overview: Public Subnet: 10.0.1.0/24 (uses IGW) Private Subnet: 10.0.2.0/24 (uses NAT Gateway) Local route: 10.0.0.0/16 Default route: 0.0.0.0/0 \u2192 IGW","title":"\ud83d\udd39 Network Diagram Exercise"},{"location":"cloud-practitioner/module-5/m5_sec3/#aws-vpc-demonstration","text":"Watch the recorded demo: AWS VPC Wizard Demo Learn how to use the VPC Wizard to create a VPC with public and private subnets.","title":"\ud83c\udfa5 AWS VPC Demonstration"},{"location":"cloud-practitioner/module-5/m5_sec3/#key-takeaways","text":"\u2705 AWS provides multiple VPC connectivity options: Internet Gateway (IGW): Connects your VPC to the internet. NAT Gateway: Allows private subnets to connect to the internet securely. VPC Endpoint: Connects your VPC privately to AWS services. VPC Peering: Connects two VPCs directly. VPC Sharing: Allows multiple AWS accounts to share a single centrally managed VPC. AWS Site-to-Site VPN: Connects your VPC to on-prem networks securely. AWS Direct Connect: Provides dedicated physical connectivity. AWS Transit Gateway: Central hub for multi-VPC and on-prem connectivity. \u2705 Use the VPC Wizard to implement and test your network design efficiently.","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-5/m5_sec4/","text":"\ud83c\udf10 Module 5 - Networking and Content Delivery 4\ufe0f\u20e3 Section 4: Securing Your VPC \ud83d\udfe0 Security Groups A security group acts as a virtual firewall for your Amazon EC2 instances, controlling inbound and outbound traffic . \u2699\ufe0f Key Characteristics: Operates at the instance level (not at the subnet level). Each instance in a subnet can have different security groups . Used to filter traffic to and from your instances. \ud83d\udcd8 Default behavior: Denies all inbound traffic . Allows all outbound traffic . \ud83d\udfe0 Security Group Rules Direction Default Behavior Customization Notes Inbound Denied Add rules to allow specific sources, ports, and protocols. Each rule specifies Source \u2192 Protocol \u2192 Port \u2192 Description. Outbound Allowed You can restrict or specify targets for traffic. If no outbound rules exist, no outbound traffic is allowed. \ud83d\udd39 Stateful behavior: Return traffic is automatically allowed , even if no explicit rule exists. Example: If an instance sends a request, the response traffic is allowed in. \ud83e\uddf1 Example Default Rules: Type Source/Destination Protocol Port Range Description Inbound sg-xxxxxxxx All All Allow inbound from interfaces in same SG Outbound 0.0.0.0/0 All All Allow all IPv4 outbound Outbound ::/0 All All Allow all IPv6 outbound \ud83d\udfe0 Custom Security Group Examples You can specify allow rules only \u2014 deny rules are not supported . All rules are evaluated before deciding whether to allow traffic. \u2705 Inbound Rules: Source Protocol Port Description 0.0.0.0/0 TCP 80 Allow HTTP traffic from all IPv4 0.0.0.0/0 TCP 443 Allow HTTPS traffic from all IPv4 Your network\u2019s public IPv4 range TCP 22 Allow SSH access to Linux instances \u2705 Outbound Rules: Destination Protocol Port Description Database SG ID TCP 1433 Allow Microsoft SQL Server access \ud83d\udca1 Best practice: Limit inbound SSH access to specific trusted IP ranges and use security groups as logical firewalls between application tiers. \ud83d\udfe0 Network Access Control Lists (Network ACLs) A Network ACL (Access Control List) provides an additional layer of security at the subnet level . It acts as a firewall for controlling inbound and outbound traffic to and from subnets. \u2699\ufe0f Key Characteristics: Operates at the subnet level . Each subnet must be associated with one network ACL. A single network ACL can be associated with multiple subnets . If not specified, subnets are automatically associated with the default network ACL . \ud83d\udcd8 When you associate a new ACL with a subnet, the previous one is replaced . \ud83d\udfe0 Network ACL Rules Feature Description Rule Types Separate inbound and outbound rules. Each can either allow or deny traffic. Default ACL Allows all inbound and outbound IPv4 (and IPv6) traffic. Stateless Return traffic must be explicitly allowed by rules. \ud83e\uddf1 Example Default ACL: Direction Rule # Type Protocol Port Source/Destination Action Inbound 100 All All All 0.0.0.0/0 ALLOW Inbound * All All All 0.0.0.0/0 DENY Outbound 100 All All All 0.0.0.0/0 ALLOW Outbound * All All All 0.0.0.0/0 DENY \ud83d\udfe0 Custom Network ACL Examples Custom ACLs deny all traffic by default until you add rules. Rules are evaluated in ascending order , starting from the lowest number. \u2705 Example Configuration: Direction Rule # Type Protocol Port Source/Destination Action Inbound 100 HTTPS TCP 443 0.0.0.0/0 ALLOW Inbound 120 SSH TCP 22 192.0.2.0/24 ALLOW Inbound * All All All 0.0.0.0/0 DENY Outbound 100 HTTPS TCP 443 0.0.0.0/0 ALLOW Outbound 120 SSH TCP 22 192.0.2.0/24 ALLOW Outbound * All All All 0.0.0.0/0 DENY \ud83d\udca1 Rule numbering tip: Use increments of 10 or 100 so new rules can be inserted easily later. \ud83d\udcda Learn more: Network ACLs Documentation \ud83d\udfe0 Security Groups vs Network ACLs Attribute Security Groups Network ACLs Scope Instance level Subnet level Rules Supported Allow rules only Allow and deny rules State Stateful Stateless Evaluation All rules evaluated together Rules evaluated by number order \ud83d\udca1 Summary: Security groups = micro-level protection (instances). Network ACLs = macro-level protection (subnets). \ud83e\udde9 Activity: Design a Secure VPC Scenario: You are a small business owner hosting a website on an EC2 instance. Customer data is stored on a backend database that must remain private. \ud83e\uddf1 Requirements: Separate web and database servers into different subnets. Network must start at 10.0.0.0 , with 256 IPv4 addresses per subnet . Customers must always have access to the web server. Database server must access the internet for patch updates. Architecture must be highly available and include at least one custom firewall layer . \ud83e\udde0 Hint: Combine security groups for instance-level protection with network ACLs for subnet-level protection. \ud83d\udfe2 Key Takeaways \u2705 Build security into every layer of your VPC architecture. \u2705 Isolate subnets when possible for better protection. \u2705 Use the appropriate gateway or VPN connection for your needs. \u2705 Apply firewall rules through security groups and network ACLs to safeguard traffic.","title":"\u25fd\ufe0f Section 4 - Securing Your VPC"},{"location":"cloud-practitioner/module-5/m5_sec4/#module-5-networking-and-content-delivery","text":"","title":"\ud83c\udf10 Module 5 - Networking and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec4/#4-section-4-securing-your-vpc","text":"","title":"4\ufe0f\u20e3 Section 4: Securing Your VPC"},{"location":"cloud-practitioner/module-5/m5_sec4/#security-groups","text":"A security group acts as a virtual firewall for your Amazon EC2 instances, controlling inbound and outbound traffic .","title":"\ud83d\udfe0 Security Groups"},{"location":"cloud-practitioner/module-5/m5_sec4/#key-characteristics","text":"Operates at the instance level (not at the subnet level). Each instance in a subnet can have different security groups . Used to filter traffic to and from your instances. \ud83d\udcd8 Default behavior: Denies all inbound traffic . Allows all outbound traffic .","title":"\u2699\ufe0f Key Characteristics:"},{"location":"cloud-practitioner/module-5/m5_sec4/#security-group-rules","text":"Direction Default Behavior Customization Notes Inbound Denied Add rules to allow specific sources, ports, and protocols. Each rule specifies Source \u2192 Protocol \u2192 Port \u2192 Description. Outbound Allowed You can restrict or specify targets for traffic. If no outbound rules exist, no outbound traffic is allowed. \ud83d\udd39 Stateful behavior: Return traffic is automatically allowed , even if no explicit rule exists. Example: If an instance sends a request, the response traffic is allowed in. \ud83e\uddf1 Example Default Rules: Type Source/Destination Protocol Port Range Description Inbound sg-xxxxxxxx All All Allow inbound from interfaces in same SG Outbound 0.0.0.0/0 All All Allow all IPv4 outbound Outbound ::/0 All All Allow all IPv6 outbound","title":"\ud83d\udfe0 Security Group Rules"},{"location":"cloud-practitioner/module-5/m5_sec4/#custom-security-group-examples","text":"You can specify allow rules only \u2014 deny rules are not supported . All rules are evaluated before deciding whether to allow traffic.","title":"\ud83d\udfe0 Custom Security Group Examples"},{"location":"cloud-practitioner/module-5/m5_sec4/#inbound-rules","text":"Source Protocol Port Description 0.0.0.0/0 TCP 80 Allow HTTP traffic from all IPv4 0.0.0.0/0 TCP 443 Allow HTTPS traffic from all IPv4 Your network\u2019s public IPv4 range TCP 22 Allow SSH access to Linux instances","title":"\u2705 Inbound Rules:"},{"location":"cloud-practitioner/module-5/m5_sec4/#outbound-rules","text":"Destination Protocol Port Description Database SG ID TCP 1433 Allow Microsoft SQL Server access \ud83d\udca1 Best practice: Limit inbound SSH access to specific trusted IP ranges and use security groups as logical firewalls between application tiers.","title":"\u2705 Outbound Rules:"},{"location":"cloud-practitioner/module-5/m5_sec4/#network-access-control-lists-network-acls","text":"A Network ACL (Access Control List) provides an additional layer of security at the subnet level . It acts as a firewall for controlling inbound and outbound traffic to and from subnets.","title":"\ud83d\udfe0 Network Access Control Lists (Network ACLs)"},{"location":"cloud-practitioner/module-5/m5_sec4/#key-characteristics_1","text":"Operates at the subnet level . Each subnet must be associated with one network ACL. A single network ACL can be associated with multiple subnets . If not specified, subnets are automatically associated with the default network ACL . \ud83d\udcd8 When you associate a new ACL with a subnet, the previous one is replaced .","title":"\u2699\ufe0f Key Characteristics:"},{"location":"cloud-practitioner/module-5/m5_sec4/#network-acl-rules","text":"Feature Description Rule Types Separate inbound and outbound rules. Each can either allow or deny traffic. Default ACL Allows all inbound and outbound IPv4 (and IPv6) traffic. Stateless Return traffic must be explicitly allowed by rules. \ud83e\uddf1 Example Default ACL: Direction Rule # Type Protocol Port Source/Destination Action Inbound 100 All All All 0.0.0.0/0 ALLOW Inbound * All All All 0.0.0.0/0 DENY Outbound 100 All All All 0.0.0.0/0 ALLOW Outbound * All All All 0.0.0.0/0 DENY","title":"\ud83d\udfe0 Network ACL Rules"},{"location":"cloud-practitioner/module-5/m5_sec4/#custom-network-acl-examples","text":"Custom ACLs deny all traffic by default until you add rules. Rules are evaluated in ascending order , starting from the lowest number.","title":"\ud83d\udfe0 Custom Network ACL Examples"},{"location":"cloud-practitioner/module-5/m5_sec4/#example-configuration","text":"Direction Rule # Type Protocol Port Source/Destination Action Inbound 100 HTTPS TCP 443 0.0.0.0/0 ALLOW Inbound 120 SSH TCP 22 192.0.2.0/24 ALLOW Inbound * All All All 0.0.0.0/0 DENY Outbound 100 HTTPS TCP 443 0.0.0.0/0 ALLOW Outbound 120 SSH TCP 22 192.0.2.0/24 ALLOW Outbound * All All All 0.0.0.0/0 DENY \ud83d\udca1 Rule numbering tip: Use increments of 10 or 100 so new rules can be inserted easily later. \ud83d\udcda Learn more: Network ACLs Documentation","title":"\u2705 Example Configuration:"},{"location":"cloud-practitioner/module-5/m5_sec4/#security-groups-vs-network-acls","text":"Attribute Security Groups Network ACLs Scope Instance level Subnet level Rules Supported Allow rules only Allow and deny rules State Stateful Stateless Evaluation All rules evaluated together Rules evaluated by number order \ud83d\udca1 Summary: Security groups = micro-level protection (instances). Network ACLs = macro-level protection (subnets).","title":"\ud83d\udfe0 Security Groups vs Network ACLs"},{"location":"cloud-practitioner/module-5/m5_sec4/#activity-design-a-secure-vpc","text":"Scenario: You are a small business owner hosting a website on an EC2 instance. Customer data is stored on a backend database that must remain private.","title":"\ud83e\udde9 Activity: Design a Secure VPC"},{"location":"cloud-practitioner/module-5/m5_sec4/#requirements","text":"Separate web and database servers into different subnets. Network must start at 10.0.0.0 , with 256 IPv4 addresses per subnet . Customers must always have access to the web server. Database server must access the internet for patch updates. Architecture must be highly available and include at least one custom firewall layer . \ud83e\udde0 Hint: Combine security groups for instance-level protection with network ACLs for subnet-level protection.","title":"\ud83e\uddf1 Requirements:"},{"location":"cloud-practitioner/module-5/m5_sec4/#key-takeaways","text":"\u2705 Build security into every layer of your VPC architecture. \u2705 Isolate subnets when possible for better protection. \u2705 Use the appropriate gateway or VPN connection for your needs. \u2705 Apply firewall rules through security groups and network ACLs to safeguard traffic.","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-5/m5_sec5/","text":"\ud83c\udf10 Module 5 - Networking and Content Delivery 5\ufe0f\u20e3 Section 5: Amazon Route 53 \ud83d\udfe0 What is Amazon Route 53? Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service designed to route end users to internet applications by translating domain names (like www.example.com ) into IP addresses (like 192.0.2.1 ). \ud83d\udd39 Key features: Fully compliant with IPv4 and IPv6 . Connects user requests to infrastructure running inside or outside AWS . Supports DNS health checks for routing traffic to healthy endpoints. Includes Traffic Flow , which allows global traffic management through various routing policies. Provides Domain Name Registration \u2014 you can register, purchase, and manage domains directly in Route 53. \ud83d\udcda Learn more: What is DNS? \ud83d\udca1 Example: Route 53 can route traffic to Amazon EC2 instances, Elastic Load Balancing load balancers, Amazon S3 buckets, or even on-premises servers. \ud83d\udfe0 How Route 53 DNS Resolution Works When a user initiates a DNS request, Route 53 performs the following steps: The user enters a domain name (e.g., www.example.com ). The DNS resolver queries Amazon Route 53 for the corresponding IP address. Route 53 returns the IP address (e.g., 192.0.2.0 ). The user\u2019s browser connects to that IP address to load the application. \ud83d\udcd8 This process ensures fast and reliable name resolution for your applications. \ud83d\udfe0 Amazon Route 53 Supported Routing Policies Amazon Route 53 supports multiple routing types that define how traffic is directed to resources. Routing Type Description Use Case Simple Routing Maps a single resource to a domain. Single web server or basic setup. Weighted Routing Distributes traffic based on assigned weights. A/B testing or gradual deployments. Latency-Based Routing (LBR) Routes users to the region with the lowest latency . Global apps where performance matters. Geolocation Routing Routes traffic based on the user\u2019s geographic location . Deliver localized content or regional compliance. Geoproximity Routing Routes traffic based on the location of resources , optionally shifting traffic between locations. Move or balance traffic between regions. Failover Routing Enables active-passive failover ; routes traffic to a backup site if the primary becomes unavailable. High availability and disaster recovery. Multivalue Answer Routing Returns up to eight healthy records , selected randomly. Basic load balancing and redundancy. \ud83d\udcd8 Example: Weighted Routing If two record sets share the same domain, one with weight 3 and another with weight 1 , Route 53 will serve: 75% of traffic \u2192 record with weight 3 25% of traffic \u2192 record with weight 1 \ud83d\udca1 You can combine routing types (e.g., Latency + Failover ) for complex global architectures. \ud83d\udfe0 Use Case: Multi-Region Deployment In a multi-region deployment , Route 53 directs users to the nearest AWS Region to reduce latency. Domain Name Type Value example.com ALIAS some-elb-name.us-west-2.elb.amazonaws.com example.com ALIAS some-elb-name.ap-southeast-2.elb.amazonaws.com \ud83e\udde9 Benefits: Latency-based routing \u2192 users connect to the region offering the best performance. Load balancing across regions and Availability Zones. \ud83d\udca1 This setup improves global availability and user experience . \ud83d\udfe0 Amazon Route 53 DNS Failover You can improve the availability of your applications with Route 53 by configuring DNS failover and health checks . \u2699\ufe0f Capabilities: Configure backup and failover scenarios for your own applications. Enable multi-region, highly available architectures on AWS. Create health checks to monitor the health and performance of web servers or other endpoints. \ud83e\udde9 Health checks can monitor: The health of a specific resource (e.g., a web server). The status of other health checks (for complex dependencies). The state of an Amazon CloudWatch alarm . \ud83d\udcda Learn more: Route 53 Health Checks \ud83d\udfe2 Key Takeaways \u2705 Amazon Route 53 provides scalable, reliable, and cost-effective DNS management. \u2705 It supports multiple routing policies for flexibility in directing user traffic. \u2705 Use Latency , Geolocation , and Failover routing for high availability and performance. \u2705 Enable health checks to ensure traffic is only routed to healthy endpoints. \u2705 Route 53 can be used for domain registration, DNS routing, and application health monitoring in one service.","title":"\u25fd\ufe0f Section 5 - Amazon Route 53"},{"location":"cloud-practitioner/module-5/m5_sec5/#module-5-networking-and-content-delivery","text":"","title":"\ud83c\udf10 Module 5 - Networking and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec5/#5-section-5-amazon-route-53","text":"","title":"5\ufe0f\u20e3 Section 5: Amazon Route 53"},{"location":"cloud-practitioner/module-5/m5_sec5/#what-is-amazon-route-53","text":"Amazon Route 53 is a highly available and scalable Domain Name System (DNS) web service designed to route end users to internet applications by translating domain names (like www.example.com ) into IP addresses (like 192.0.2.1 ). \ud83d\udd39 Key features: Fully compliant with IPv4 and IPv6 . Connects user requests to infrastructure running inside or outside AWS . Supports DNS health checks for routing traffic to healthy endpoints. Includes Traffic Flow , which allows global traffic management through various routing policies. Provides Domain Name Registration \u2014 you can register, purchase, and manage domains directly in Route 53. \ud83d\udcda Learn more: What is DNS? \ud83d\udca1 Example: Route 53 can route traffic to Amazon EC2 instances, Elastic Load Balancing load balancers, Amazon S3 buckets, or even on-premises servers.","title":"\ud83d\udfe0 What is Amazon Route 53?"},{"location":"cloud-practitioner/module-5/m5_sec5/#how-route-53-dns-resolution-works","text":"When a user initiates a DNS request, Route 53 performs the following steps: The user enters a domain name (e.g., www.example.com ). The DNS resolver queries Amazon Route 53 for the corresponding IP address. Route 53 returns the IP address (e.g., 192.0.2.0 ). The user\u2019s browser connects to that IP address to load the application. \ud83d\udcd8 This process ensures fast and reliable name resolution for your applications.","title":"\ud83d\udfe0 How Route 53 DNS Resolution Works"},{"location":"cloud-practitioner/module-5/m5_sec5/#amazon-route-53-supported-routing-policies","text":"Amazon Route 53 supports multiple routing types that define how traffic is directed to resources. Routing Type Description Use Case Simple Routing Maps a single resource to a domain. Single web server or basic setup. Weighted Routing Distributes traffic based on assigned weights. A/B testing or gradual deployments. Latency-Based Routing (LBR) Routes users to the region with the lowest latency . Global apps where performance matters. Geolocation Routing Routes traffic based on the user\u2019s geographic location . Deliver localized content or regional compliance. Geoproximity Routing Routes traffic based on the location of resources , optionally shifting traffic between locations. Move or balance traffic between regions. Failover Routing Enables active-passive failover ; routes traffic to a backup site if the primary becomes unavailable. High availability and disaster recovery. Multivalue Answer Routing Returns up to eight healthy records , selected randomly. Basic load balancing and redundancy. \ud83d\udcd8 Example: Weighted Routing If two record sets share the same domain, one with weight 3 and another with weight 1 , Route 53 will serve: 75% of traffic \u2192 record with weight 3 25% of traffic \u2192 record with weight 1 \ud83d\udca1 You can combine routing types (e.g., Latency + Failover ) for complex global architectures.","title":"\ud83d\udfe0 Amazon Route 53 Supported Routing Policies"},{"location":"cloud-practitioner/module-5/m5_sec5/#use-case-multi-region-deployment","text":"In a multi-region deployment , Route 53 directs users to the nearest AWS Region to reduce latency. Domain Name Type Value example.com ALIAS some-elb-name.us-west-2.elb.amazonaws.com example.com ALIAS some-elb-name.ap-southeast-2.elb.amazonaws.com \ud83e\udde9 Benefits: Latency-based routing \u2192 users connect to the region offering the best performance. Load balancing across regions and Availability Zones. \ud83d\udca1 This setup improves global availability and user experience .","title":"\ud83d\udfe0 Use Case: Multi-Region Deployment"},{"location":"cloud-practitioner/module-5/m5_sec5/#amazon-route-53-dns-failover","text":"You can improve the availability of your applications with Route 53 by configuring DNS failover and health checks .","title":"\ud83d\udfe0 Amazon Route 53 DNS Failover"},{"location":"cloud-practitioner/module-5/m5_sec5/#capabilities","text":"Configure backup and failover scenarios for your own applications. Enable multi-region, highly available architectures on AWS. Create health checks to monitor the health and performance of web servers or other endpoints.","title":"\u2699\ufe0f Capabilities:"},{"location":"cloud-practitioner/module-5/m5_sec5/#health-checks-can-monitor","text":"The health of a specific resource (e.g., a web server). The status of other health checks (for complex dependencies). The state of an Amazon CloudWatch alarm . \ud83d\udcda Learn more: Route 53 Health Checks","title":"\ud83e\udde9 Health checks can monitor:"},{"location":"cloud-practitioner/module-5/m5_sec5/#key-takeaways","text":"\u2705 Amazon Route 53 provides scalable, reliable, and cost-effective DNS management. \u2705 It supports multiple routing policies for flexibility in directing user traffic. \u2705 Use Latency , Geolocation , and Failover routing for high availability and performance. \u2705 Enable health checks to ensure traffic is only routed to healthy endpoints. \u2705 Route 53 can be used for domain registration, DNS routing, and application health monitoring in one service.","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-5/m5_sec6/","text":"\ud83c\udf10 Module 5 - Networking and Content Delivery 6\ufe0f\u20e3 Section 6: Amazon CloudFront \ud83d\udfe0 Introduction The purpose of networking is to share information between connected resources . In this section, you\u2019ll learn about Amazon CloudFront , AWS\u2019s Content Delivery Network (CDN) service, which helps deliver content to users worldwide with low latency and high transfer speeds . \ud83d\udfe0 Network Latency and Content Delivery When users access a website or stream a video, their requests pass through multiple routers across different networks before reaching the origin server \u2014 the source where the original data (HTML, CSS, JavaScript, media files) is stored. \u26a0\ufe0f Challenges: Each network hop increases latency. Performance varies across geographic locations . \ud83d\udca1 Solution: A Content Delivery Network (CDN) reduces latency by caching and serving content from locations closer to the user . \ud83d\udfe0 What is a Content Delivery Network (CDN)? A CDN is a globally distributed system of caching servers that deliver both static and dynamic content faster to end users. \u2699\ufe0f Key Features: Caches copies of commonly requested files (static content like HTML, CSS, JavaScript, and images). Delivers content from the nearest Point of Presence (PoP) to the user. Accelerates dynamic content that cannot be cached by routing requests efficiently. Improves performance and scalability of applications. Establishes secure, low-latency connections closer to users. \ud83d\udca1 Result: Faster response times, reduced load on origin servers, and improved user experience. \ud83d\udfe0 Amazon CloudFront Overview Amazon CloudFront is a fast, secure, and globally distributed CDN service that delivers data, videos, applications, and APIs to users worldwide. \u2699\ufe0f Key Highlights: Global network of edge locations and regional caches. Self-service model with pay-as-you-go pricing . Delivers files over HTTP/HTTPS to ensure security and reliability. \ud83d\udca1 Unlike traditional CDN contracts, CloudFront requires no upfront commitments or minimum fees \u2014 it scales automatically with your needs. \ud83d\udcda Learn more: Amazon CloudFront Documentation \ud83d\udfe0 Amazon CloudFront Infrastructure Amazon CloudFront delivers content through a worldwide network of edge locations and regional edge caches . \ud83d\udce6 Components: Edge Locations: Network of data centers located around the world. Serve popular content immediately and with low latency . Regional Edge Caches: Larger cache capacity than edge locations. Store less popular content longer to reduce origin fetches. Positioned between the origin server and global edge locations . \ud83d\udca1 Performance Benefit: By caching content at multiple layers, CloudFront ensures faster delivery and fewer trips to the origin server. \ud83d\udcd8 Learn more: How CloudFront Delivers Content \ud83d\udfe0 Amazon CloudFront Benefits Benefit Description Fast and Global CloudFront\u2019s global infrastructure reduces latency using edge locations and regional caches. Security at the Edge Built-in network and application protection (e.g., AWS Shield Standard ) and support for custom SSL/TLS certificates via AWS Certificate Manager. Highly Programmable Supports customization using Lambda@Edge , allowing you to run code close to users for improved responsiveness. Integrates with DevOps and CI/CD pipelines. Deep AWS Integration Seamlessly integrates with AWS services (like S3, EC2, and Elastic Load Balancing) and shares the same global network backbone. Cost-Effective No minimum fees or long-term commitments. You pay only for what you use. Efficient caching reduces load on origin servers and operational costs. \ud83d\udca1 Example: CloudFront collapses multiple simultaneous viewer requests for the same file into a single origin request, further reducing costs and latency. \ud83d\udfe0 Amazon CloudFront Pricing You pay for what you use , based on four primary metrics: Data Transfer Out Charged per GB for data transferred from CloudFront edge locations to the internet or your origin. Pricing varies by geographic region. HTTP(S) Requests Charged per request made to CloudFront for content delivery. Invalidation Requests First 1,000 paths per month are free. Beyond that, $0.005 per invalidation path. Dedicated IP Custom SSL $600 per month per SSL certificate used for Dedicated IP mode. Charges are prorated by the hour. \ud83d\udcd8 Example: If an SSL certificate is active for one day, the cost is (1/30) \u00d7 $600 = $20 . \ud83d\udcda Learn more: Amazon CloudFront Pricing \ud83d\udfe2 Key Takeaways \u2705 A CDN is a globally distributed network of caching servers that accelerates content delivery. \u2705 Amazon CloudFront delivers data, videos, apps, and APIs securely with low latency and high speeds . \u2705 It provides major benefits: \ud83c\udf0e Fast and global \ud83d\udee1\ufe0f Security at the edge \u2699\ufe0f Highly programmable \ud83d\udd17 Deep AWS integration \ud83d\udcb8 Cost-effective","title":"\u25fd\ufe0f Section 6 - Amazon CloudFront"},{"location":"cloud-practitioner/module-5/m5_sec6/#module-5-networking-and-content-delivery","text":"","title":"\ud83c\udf10 Module 5 - Networking and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec6/#6-section-6-amazon-cloudfront","text":"","title":"6\ufe0f\u20e3 Section 6: Amazon CloudFront"},{"location":"cloud-practitioner/module-5/m5_sec6/#introduction","text":"The purpose of networking is to share information between connected resources . In this section, you\u2019ll learn about Amazon CloudFront , AWS\u2019s Content Delivery Network (CDN) service, which helps deliver content to users worldwide with low latency and high transfer speeds .","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-5/m5_sec6/#network-latency-and-content-delivery","text":"When users access a website or stream a video, their requests pass through multiple routers across different networks before reaching the origin server \u2014 the source where the original data (HTML, CSS, JavaScript, media files) is stored.","title":"\ud83d\udfe0 Network Latency and Content Delivery"},{"location":"cloud-practitioner/module-5/m5_sec6/#challenges","text":"Each network hop increases latency. Performance varies across geographic locations . \ud83d\udca1 Solution: A Content Delivery Network (CDN) reduces latency by caching and serving content from locations closer to the user .","title":"\u26a0\ufe0f Challenges:"},{"location":"cloud-practitioner/module-5/m5_sec6/#what-is-a-content-delivery-network-cdn","text":"A CDN is a globally distributed system of caching servers that deliver both static and dynamic content faster to end users.","title":"\ud83d\udfe0 What is a Content Delivery Network (CDN)?"},{"location":"cloud-practitioner/module-5/m5_sec6/#key-features","text":"Caches copies of commonly requested files (static content like HTML, CSS, JavaScript, and images). Delivers content from the nearest Point of Presence (PoP) to the user. Accelerates dynamic content that cannot be cached by routing requests efficiently. Improves performance and scalability of applications. Establishes secure, low-latency connections closer to users. \ud83d\udca1 Result: Faster response times, reduced load on origin servers, and improved user experience.","title":"\u2699\ufe0f Key Features:"},{"location":"cloud-practitioner/module-5/m5_sec6/#amazon-cloudfront-overview","text":"Amazon CloudFront is a fast, secure, and globally distributed CDN service that delivers data, videos, applications, and APIs to users worldwide.","title":"\ud83d\udfe0 Amazon CloudFront Overview"},{"location":"cloud-practitioner/module-5/m5_sec6/#key-highlights","text":"Global network of edge locations and regional caches. Self-service model with pay-as-you-go pricing . Delivers files over HTTP/HTTPS to ensure security and reliability. \ud83d\udca1 Unlike traditional CDN contracts, CloudFront requires no upfront commitments or minimum fees \u2014 it scales automatically with your needs. \ud83d\udcda Learn more: Amazon CloudFront Documentation","title":"\u2699\ufe0f Key Highlights:"},{"location":"cloud-practitioner/module-5/m5_sec6/#amazon-cloudfront-infrastructure","text":"Amazon CloudFront delivers content through a worldwide network of edge locations and regional edge caches .","title":"\ud83d\udfe0 Amazon CloudFront Infrastructure"},{"location":"cloud-practitioner/module-5/m5_sec6/#components","text":"Edge Locations: Network of data centers located around the world. Serve popular content immediately and with low latency . Regional Edge Caches: Larger cache capacity than edge locations. Store less popular content longer to reduce origin fetches. Positioned between the origin server and global edge locations . \ud83d\udca1 Performance Benefit: By caching content at multiple layers, CloudFront ensures faster delivery and fewer trips to the origin server. \ud83d\udcd8 Learn more: How CloudFront Delivers Content","title":"\ud83d\udce6 Components:"},{"location":"cloud-practitioner/module-5/m5_sec6/#amazon-cloudfront-benefits","text":"Benefit Description Fast and Global CloudFront\u2019s global infrastructure reduces latency using edge locations and regional caches. Security at the Edge Built-in network and application protection (e.g., AWS Shield Standard ) and support for custom SSL/TLS certificates via AWS Certificate Manager. Highly Programmable Supports customization using Lambda@Edge , allowing you to run code close to users for improved responsiveness. Integrates with DevOps and CI/CD pipelines. Deep AWS Integration Seamlessly integrates with AWS services (like S3, EC2, and Elastic Load Balancing) and shares the same global network backbone. Cost-Effective No minimum fees or long-term commitments. You pay only for what you use. Efficient caching reduces load on origin servers and operational costs. \ud83d\udca1 Example: CloudFront collapses multiple simultaneous viewer requests for the same file into a single origin request, further reducing costs and latency.","title":"\ud83d\udfe0 Amazon CloudFront Benefits"},{"location":"cloud-practitioner/module-5/m5_sec6/#amazon-cloudfront-pricing","text":"You pay for what you use , based on four primary metrics: Data Transfer Out Charged per GB for data transferred from CloudFront edge locations to the internet or your origin. Pricing varies by geographic region. HTTP(S) Requests Charged per request made to CloudFront for content delivery. Invalidation Requests First 1,000 paths per month are free. Beyond that, $0.005 per invalidation path. Dedicated IP Custom SSL $600 per month per SSL certificate used for Dedicated IP mode. Charges are prorated by the hour. \ud83d\udcd8 Example: If an SSL certificate is active for one day, the cost is (1/30) \u00d7 $600 = $20 . \ud83d\udcda Learn more: Amazon CloudFront Pricing","title":"\ud83d\udfe0 Amazon CloudFront Pricing"},{"location":"cloud-practitioner/module-5/m5_sec6/#key-takeaways","text":"\u2705 A CDN is a globally distributed network of caching servers that accelerates content delivery. \u2705 Amazon CloudFront delivers data, videos, apps, and APIs securely with low latency and high speeds . \u2705 It provides major benefits: \ud83c\udf0e Fast and global \ud83d\udee1\ufe0f Security at the edge \u2699\ufe0f Highly programmable \ud83d\udd17 Deep AWS integration \ud83d\udcb8 Cost-effective","title":"\ud83d\udfe2 Key Takeaways"},{"location":"cloud-practitioner/module-6/m6_sec1/","text":"\u2699\ufe0f Module 6 - Compute 1\ufe0f\u20e3 Section 1: Compute Services Overview \ud83d\udfe0 Introduction AWS offers a broad range of compute services in the cloud. Each service is designed for different use cases, with varying levels of control, management, and flexibility. This section covers the most important compute services and how they are categorized within the AWS Cloud. \ud83d\udda5\ufe0f Primary Compute Services Service Brief Description Amazon Elastic Compute Cloud (Amazon EC2) Provides resizable compute capacity (virtual machines) in the cloud. Amazon EC2 Auto Scaling Automatically adjusts capacity to maintain performance and availability. Amazon Elastic Container Registry (Amazon ECR) Secure, scalable repository for storing Docker images. Amazon Elastic Container Service (Amazon ECS) Container orchestration service to run Docker applications. VMware Cloud on AWS Enables hybrid environments without custom hardware. AWS Elastic Beanstalk Platform as a service (PaaS) that simplifies application deployment. AWS Lambda Serverless compute service that runs code on demand, charging only for execution time. Amazon Elastic Kubernetes Service (Amazon EKS) Managed Kubernetes service for running containerized workloads. Amazon Lightsail Simplified environment for building web apps and websites. AWS Batch Runs batch processing jobs at any scale. AWS Fargate Runs containers without managing servers or clusters. AWS Outposts Runs AWS services on-premises for hybrid workloads. AWS Serverless Application Repository Repository to discover and deploy pre-built serverless applications. \u2699\ufe0f Compute Service Categories AWS compute services can be grouped into four main categories , based on their level of control and management: Services Key Concepts Characteristics Ease of Use Amazon EC2 \u2022 Infrastructure as a Service (IaaS) \u2022 Instance-based \u2022 Virtual machines \u2022 Provision virtual machines that you can manage as you choose A familiar concept to many IT professionals. AWS Lambda \u2022 Serverless computing \u2022 Function-based \u2022 Low-cost \u2022 Write and deploy code that runs on a schedule or that can be triggered by events \u2022 Use when possible (architect for the cloud) A relatively new concept for many IT staff members, but easy to use after you learn how. Amazon ECS Amazon EKS AWS Fargate Amazon ECR \u2022 Container-based computing \u2022 Instance-based \u2022 Spin up and run jobs more quickly AWS Fargate reduces administrative overhead, but you can use options that give you more control. AWS Elastic Beanstalk \u2022 Platform as a Service (PaaS) \u2022 For web applications \u2022 Focus on your code (building your application) \u2022 Easily integrates with other AWS services \u2014 databases, DNS, etc. Fast and easy to get started. \ud83d\udcc8 Category Details \ud83e\udde9 IaaS \u2013 Amazon EC2 Provides virtual machines called EC2 instances . Offers full control over OS, storage, security, and networking. Ideal for users familiar with traditional on-premises environments. Foundational service of AWS and among the most widely used. \u26a1 Serverless \u2013 AWS Lambda Runs code without provisioning or managing servers. Automatically scales based on demand. Pay only for actual execution time. Integrated with multiple AWS services such as S3, DynamoDB, and API Gateway. \ud83d\udc33 Container-based \u2013 ECS, EKS, Fargate, ECR Run workloads inside containers on a shared OS. Faster startup than virtual machines. Easier deployment, scaling, and portability of microservices. AWS Fargate eliminates the need to manage servers or clusters. \u2601\ufe0f PaaS \u2013 Elastic Beanstalk Fully managed platform for deploying web applications. AWS handles infrastructure provisioning, load balancing, scaling, and monitoring. Developers only upload their code and configuration files. \ud83e\uddee Choosing the Right Compute Option There\u2019s no single best service for every scenario. Your choice depends on: \ud83d\udcca Application design \ud83d\udd01 Usage patterns \u2699\ufe0f Configuration and management needs \ud83d\udcb8 Cost and operational model \ud83d\udc49 Using the wrong service can result in inefficiency, higher costs, or poor performance. \ud83d\udca1 Best Practices Evaluate all compute options before selecting a service. Understand configuration choices \u2014 instance type, size, storage, and network. Collect performance metrics using tools such as Amazon CloudWatch . Leverage elasticity to automatically scale with demand. Continuously reassess compute requirements to optimize for performance and cost. \ud83d\udd0d Architecture Example A customer might start using Amazon EC2 for full control, then migrate to AWS Lambda or Elastic Beanstalk as the application evolves into a more agile, cloud-native architecture. AWS recommends: \u201cCollect performance metrics, and adjust your compute configuration as your architecture evolves.\u201d \ud83d\udcf9 Reference: Inventory Tracking Solution Example \u2013 AWS YouTube Video \ud83e\udde0 Key Takeaways AWS offers multiple compute options: EC2 , Lambda , ECS/EKS/Fargate , and Elastic Beanstalk . Main categories: IaaS \u2192 EC2 Serverless \u2192 Lambda Containers \u2192 ECS, EKS, Fargate PaaS \u2192 Elastic Beanstalk Choosing the right service depends on control level , management needs , and application design . Best practices: Evaluate all options. Use metrics to guide decisions. Optimize and reassess regularly for performance and cost efficiency.","title":"\u25fd\ufe0f Section 1 - Compute Services Overview"},{"location":"cloud-practitioner/module-6/m6_sec1/#module-6-compute","text":"","title":"\u2699\ufe0f Module 6 - Compute"},{"location":"cloud-practitioner/module-6/m6_sec1/#1-section-1-compute-services-overview","text":"","title":"1\ufe0f\u20e3 Section 1: Compute Services Overview"},{"location":"cloud-practitioner/module-6/m6_sec1/#introduction","text":"AWS offers a broad range of compute services in the cloud. Each service is designed for different use cases, with varying levels of control, management, and flexibility. This section covers the most important compute services and how they are categorized within the AWS Cloud.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-6/m6_sec1/#primary-compute-services","text":"Service Brief Description Amazon Elastic Compute Cloud (Amazon EC2) Provides resizable compute capacity (virtual machines) in the cloud. Amazon EC2 Auto Scaling Automatically adjusts capacity to maintain performance and availability. Amazon Elastic Container Registry (Amazon ECR) Secure, scalable repository for storing Docker images. Amazon Elastic Container Service (Amazon ECS) Container orchestration service to run Docker applications. VMware Cloud on AWS Enables hybrid environments without custom hardware. AWS Elastic Beanstalk Platform as a service (PaaS) that simplifies application deployment. AWS Lambda Serverless compute service that runs code on demand, charging only for execution time. Amazon Elastic Kubernetes Service (Amazon EKS) Managed Kubernetes service for running containerized workloads. Amazon Lightsail Simplified environment for building web apps and websites. AWS Batch Runs batch processing jobs at any scale. AWS Fargate Runs containers without managing servers or clusters. AWS Outposts Runs AWS services on-premises for hybrid workloads. AWS Serverless Application Repository Repository to discover and deploy pre-built serverless applications.","title":"\ud83d\udda5\ufe0f Primary Compute Services"},{"location":"cloud-practitioner/module-6/m6_sec1/#compute-service-categories","text":"AWS compute services can be grouped into four main categories , based on their level of control and management: Services Key Concepts Characteristics Ease of Use Amazon EC2 \u2022 Infrastructure as a Service (IaaS) \u2022 Instance-based \u2022 Virtual machines \u2022 Provision virtual machines that you can manage as you choose A familiar concept to many IT professionals. AWS Lambda \u2022 Serverless computing \u2022 Function-based \u2022 Low-cost \u2022 Write and deploy code that runs on a schedule or that can be triggered by events \u2022 Use when possible (architect for the cloud) A relatively new concept for many IT staff members, but easy to use after you learn how. Amazon ECS Amazon EKS AWS Fargate Amazon ECR \u2022 Container-based computing \u2022 Instance-based \u2022 Spin up and run jobs more quickly AWS Fargate reduces administrative overhead, but you can use options that give you more control. AWS Elastic Beanstalk \u2022 Platform as a Service (PaaS) \u2022 For web applications \u2022 Focus on your code (building your application) \u2022 Easily integrates with other AWS services \u2014 databases, DNS, etc. Fast and easy to get started.","title":"\u2699\ufe0f Compute Service Categories"},{"location":"cloud-practitioner/module-6/m6_sec1/#category-details","text":"","title":"\ud83d\udcc8 Category Details"},{"location":"cloud-practitioner/module-6/m6_sec1/#iaas-amazon-ec2","text":"Provides virtual machines called EC2 instances . Offers full control over OS, storage, security, and networking. Ideal for users familiar with traditional on-premises environments. Foundational service of AWS and among the most widely used.","title":"\ud83e\udde9 IaaS \u2013 Amazon EC2"},{"location":"cloud-practitioner/module-6/m6_sec1/#serverless-aws-lambda","text":"Runs code without provisioning or managing servers. Automatically scales based on demand. Pay only for actual execution time. Integrated with multiple AWS services such as S3, DynamoDB, and API Gateway.","title":"\u26a1 Serverless \u2013 AWS Lambda"},{"location":"cloud-practitioner/module-6/m6_sec1/#container-based-ecs-eks-fargate-ecr","text":"Run workloads inside containers on a shared OS. Faster startup than virtual machines. Easier deployment, scaling, and portability of microservices. AWS Fargate eliminates the need to manage servers or clusters.","title":"\ud83d\udc33 Container-based \u2013 ECS, EKS, Fargate, ECR"},{"location":"cloud-practitioner/module-6/m6_sec1/#paas-elastic-beanstalk","text":"Fully managed platform for deploying web applications. AWS handles infrastructure provisioning, load balancing, scaling, and monitoring. Developers only upload their code and configuration files.","title":"\u2601\ufe0f PaaS \u2013 Elastic Beanstalk"},{"location":"cloud-practitioner/module-6/m6_sec1/#choosing-the-right-compute-option","text":"There\u2019s no single best service for every scenario. Your choice depends on: \ud83d\udcca Application design \ud83d\udd01 Usage patterns \u2699\ufe0f Configuration and management needs \ud83d\udcb8 Cost and operational model \ud83d\udc49 Using the wrong service can result in inefficiency, higher costs, or poor performance.","title":"\ud83e\uddee Choosing the Right Compute Option"},{"location":"cloud-practitioner/module-6/m6_sec1/#best-practices","text":"Evaluate all compute options before selecting a service. Understand configuration choices \u2014 instance type, size, storage, and network. Collect performance metrics using tools such as Amazon CloudWatch . Leverage elasticity to automatically scale with demand. Continuously reassess compute requirements to optimize for performance and cost.","title":"\ud83d\udca1 Best Practices"},{"location":"cloud-practitioner/module-6/m6_sec1/#architecture-example","text":"A customer might start using Amazon EC2 for full control, then migrate to AWS Lambda or Elastic Beanstalk as the application evolves into a more agile, cloud-native architecture. AWS recommends: \u201cCollect performance metrics, and adjust your compute configuration as your architecture evolves.\u201d \ud83d\udcf9 Reference: Inventory Tracking Solution Example \u2013 AWS YouTube Video","title":"\ud83d\udd0d Architecture Example"},{"location":"cloud-practitioner/module-6/m6_sec1/#key-takeaways","text":"AWS offers multiple compute options: EC2 , Lambda , ECS/EKS/Fargate , and Elastic Beanstalk . Main categories: IaaS \u2192 EC2 Serverless \u2192 Lambda Containers \u2192 ECS, EKS, Fargate PaaS \u2192 Elastic Beanstalk Choosing the right service depends on control level , management needs , and application design . Best practices: Evaluate all options. Use metrics to guide decisions. Optimize and reassess regularly for performance and cost efficiency.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-6/m6_sec2/","text":"\u2699\ufe0f Module 6 - Compute 2\ufe0f\u20e3 Section 2: Amazon Elastic Compute Cloud (Amazon EC2) \ud83d\udfe0 Introduction to Amazon EC2 Amazon Elastic Compute Cloud (Amazon EC2) provides secure, resizable compute capacity in the AWS Cloud. It is designed to make web-scale cloud computing easier for developers. With EC2, you can: - Launch virtual servers (instances) within minutes. - Configure CPU, memory, storage, and networking. - Scale up or down to handle variable workloads. - Pay only for what you use. Key benefits: - Elasticity and scalability. - Complete control over instances. - Flexible cloud hosting environment. - Integration with most AWS services. \ud83d\udca1 Understanding EC2 Instances An EC2 instance is a virtual server running on AWS infrastructure. You can: - Choose from a wide variety of instance types optimized for compute, memory, or storage. - Launch instances in specific Availability Zones within a Region. - Use Auto Scaling and Elastic Load Balancing (ELB) for high availability and performance. Each instance type is a combination of: - CPU - Memory - Storage - Networking capacity \u2699\ufe0f The EC2 Launch Process When launching an EC2 instance, you define its configuration in several steps: Choose an Amazon Machine Image (AMI) AMI = a pre-configured template containing an operating system, software, and settings. AWS provides both public AMIs and custom AMIs . You can also create your own AMI from an existing instance for reuse. Choose an Instance Type Instance types are grouped into families based on their use case: Instance Family Optimization Focus Example Use Cases General Purpose Balanced compute, memory, and networking Web servers, app servers Compute Optimized High-performance CPU High-traffic web apps, scientific modeling Memory Optimized Large memory for in-memory processing Databases, analytics Storage Optimized High, sequential read/write access Data warehousing, big data Accelerated Computing GPU or FPGA acceleration Machine learning, rendering Configure Instance Details Specify number of instances , VPC , subnet , public IP settings , IAM role , and shutdown behavior . Optionally, add user data scripts to automate setup tasks at boot. Add Storage Choose between multiple storage options (see below). Add Tags Tags are key-value pairs for organization and cost tracking (e.g., Environment=Production ). Configure Security Group Acts as a virtual firewall for your instance. Controls inbound/outbound traffic using rules (protocols, ports, IP ranges). Review and Launch Choose or create a key pair to enable secure SSH (Linux) or RDP (Windows) access. \ud83e\uddf1 Amazon Machine Images (AMIs) An AMI defines: The operating system. Initial state (applications, libraries, and configurations). Permissions for usage (public or private). You can share , copy , or encrypt AMIs. AMIs are Region-specific but can be copied to other Regions. \ud83d\udcbe EC2 Storage Options AWS provides several types of storage that can be attached or integrated with EC2: Storage Type Description Key Features Example Use Amazon Elastic Block Store (EBS) Block storage attached to EC2 instances. Persistent, durable, automatically replicated within AZ. Databases, file systems, boot volumes. Instance Store Temporary block storage physically attached to the host. Very high I/O performance but data lost when instance stops/terminates. Caching, temporary files, buffers. Amazon Elastic File System (EFS) Fully managed NFS file system shared across instances. Scalable, elastic, accessible across multiple AZs. Shared application data, content management. Amazon Simple Storage Service (S3) Object storage for any type of data. Highly durable (11 9s), scalable, accessible anywhere. Backups, logs, static assets, snapshots. \ud83d\udd12 Security and Access \ud83d\udd11 Key Pairs Used for secure SSH/RDP access to your instances. A key pair consists of: Public key (stored by AWS) Private key (stored by you, required for login) Always keep private keys secure. Lost private keys cannot be recovered. \ud83e\uddf1 Security Groups Virtual firewalls controlling inbound/outbound traffic. Rules are stateful : if you allow an inbound connection, its response is automatically allowed. You can assign one or more security groups per instance. \ud83d\udc64 IAM Roles Allow your instance to securely access other AWS services without embedding credentials . Best practice: assign a specific IAM role to each instance rather than using access keys. \ud83c\udf10 Networking Each EC2 instance resides inside an Amazon Virtual Private Cloud (VPC) . Within the VPC, you can configure: - Subnets \u2192 logical segments of your network (public or private). - Elastic IP Addresses \u2192 static public IPs that can be reassigned between instances. - Elastic Network Interfaces (ENIs) \u2192 virtual network cards for more advanced configurations. Public vs. Private IPs - Public IPs : Accessible from the Internet (temporary unless associated with an Elastic IP). - Private IPs : Used for communication within a VPC. \ud83e\udde9 EC2 Instance Lifecycle State Description Pending The instance is being launched. Running The instance is operational and billing begins. Stopping / Stopped Instance is halted but data persists on EBS volumes. Shutting-down / Terminated Instance is permanently deleted. \ud83d\udcca Monitoring EC2 Use Amazon CloudWatch to monitor EC2 performance metrics, such as: - CPU utilization - Disk I/O - Network traffic - Status checks You can create CloudWatch Alarms to trigger notifications or Auto Scaling actions. \ud83d\udcac EC2 Cost Model Amazon EC2 offers multiple pricing models: Model Description Use Case On-Demand Pay per second or hour with no commitment. Short-term, unpredictable workloads. Reserved Instances 1\u20133 year commitment with discounts up to 75%. Steady-state workloads. Spot Instances Up to 90% discount; can be interrupted by AWS. Flexible, fault-tolerant workloads. Dedicated Hosts / Instances Physically isolated hardware. Compliance or licensing requirements. \ud83e\udde0 Key Takeaways Amazon EC2 provides scalable virtual servers in the cloud. You can fully control the instance type, OS, storage, and network. AMIs simplify deployment by offering reusable templates. Security Groups act as virtual firewalls; IAM Roles grant secure access to other AWS services. CloudWatch is used for monitoring performance. Choose the right pricing model to balance cost and flexibility. Combine Auto Scaling and Elastic Load Balancing for high availability and resilience.","title":"\u25fd\ufe0f Section 2 - Amazon Elastic Compute Cloud (Amazon EC2)"},{"location":"cloud-practitioner/module-6/m6_sec2/#module-6-compute","text":"","title":"\u2699\ufe0f Module 6 - Compute"},{"location":"cloud-practitioner/module-6/m6_sec2/#2-section-2-amazon-elastic-compute-cloud-amazon-ec2","text":"","title":"2\ufe0f\u20e3 Section 2: Amazon Elastic Compute Cloud (Amazon EC2)"},{"location":"cloud-practitioner/module-6/m6_sec2/#introduction-to-amazon-ec2","text":"Amazon Elastic Compute Cloud (Amazon EC2) provides secure, resizable compute capacity in the AWS Cloud. It is designed to make web-scale cloud computing easier for developers. With EC2, you can: - Launch virtual servers (instances) within minutes. - Configure CPU, memory, storage, and networking. - Scale up or down to handle variable workloads. - Pay only for what you use. Key benefits: - Elasticity and scalability. - Complete control over instances. - Flexible cloud hosting environment. - Integration with most AWS services.","title":"\ud83d\udfe0 Introduction to Amazon EC2"},{"location":"cloud-practitioner/module-6/m6_sec2/#understanding-ec2-instances","text":"An EC2 instance is a virtual server running on AWS infrastructure. You can: - Choose from a wide variety of instance types optimized for compute, memory, or storage. - Launch instances in specific Availability Zones within a Region. - Use Auto Scaling and Elastic Load Balancing (ELB) for high availability and performance. Each instance type is a combination of: - CPU - Memory - Storage - Networking capacity","title":"\ud83d\udca1 Understanding EC2 Instances"},{"location":"cloud-practitioner/module-6/m6_sec2/#the-ec2-launch-process","text":"When launching an EC2 instance, you define its configuration in several steps: Choose an Amazon Machine Image (AMI) AMI = a pre-configured template containing an operating system, software, and settings. AWS provides both public AMIs and custom AMIs . You can also create your own AMI from an existing instance for reuse. Choose an Instance Type Instance types are grouped into families based on their use case: Instance Family Optimization Focus Example Use Cases General Purpose Balanced compute, memory, and networking Web servers, app servers Compute Optimized High-performance CPU High-traffic web apps, scientific modeling Memory Optimized Large memory for in-memory processing Databases, analytics Storage Optimized High, sequential read/write access Data warehousing, big data Accelerated Computing GPU or FPGA acceleration Machine learning, rendering Configure Instance Details Specify number of instances , VPC , subnet , public IP settings , IAM role , and shutdown behavior . Optionally, add user data scripts to automate setup tasks at boot. Add Storage Choose between multiple storage options (see below). Add Tags Tags are key-value pairs for organization and cost tracking (e.g., Environment=Production ). Configure Security Group Acts as a virtual firewall for your instance. Controls inbound/outbound traffic using rules (protocols, ports, IP ranges). Review and Launch Choose or create a key pair to enable secure SSH (Linux) or RDP (Windows) access.","title":"\u2699\ufe0f The EC2 Launch Process"},{"location":"cloud-practitioner/module-6/m6_sec2/#amazon-machine-images-amis","text":"An AMI defines: The operating system. Initial state (applications, libraries, and configurations). Permissions for usage (public or private). You can share , copy , or encrypt AMIs. AMIs are Region-specific but can be copied to other Regions.","title":"\ud83e\uddf1 Amazon Machine Images (AMIs)"},{"location":"cloud-practitioner/module-6/m6_sec2/#ec2-storage-options","text":"AWS provides several types of storage that can be attached or integrated with EC2: Storage Type Description Key Features Example Use Amazon Elastic Block Store (EBS) Block storage attached to EC2 instances. Persistent, durable, automatically replicated within AZ. Databases, file systems, boot volumes. Instance Store Temporary block storage physically attached to the host. Very high I/O performance but data lost when instance stops/terminates. Caching, temporary files, buffers. Amazon Elastic File System (EFS) Fully managed NFS file system shared across instances. Scalable, elastic, accessible across multiple AZs. Shared application data, content management. Amazon Simple Storage Service (S3) Object storage for any type of data. Highly durable (11 9s), scalable, accessible anywhere. Backups, logs, static assets, snapshots.","title":"\ud83d\udcbe EC2 Storage Options"},{"location":"cloud-practitioner/module-6/m6_sec2/#security-and-access","text":"","title":"\ud83d\udd12 Security and Access"},{"location":"cloud-practitioner/module-6/m6_sec2/#key-pairs","text":"Used for secure SSH/RDP access to your instances. A key pair consists of: Public key (stored by AWS) Private key (stored by you, required for login) Always keep private keys secure. Lost private keys cannot be recovered.","title":"\ud83d\udd11 Key Pairs"},{"location":"cloud-practitioner/module-6/m6_sec2/#security-groups","text":"Virtual firewalls controlling inbound/outbound traffic. Rules are stateful : if you allow an inbound connection, its response is automatically allowed. You can assign one or more security groups per instance.","title":"\ud83e\uddf1 Security Groups"},{"location":"cloud-practitioner/module-6/m6_sec2/#iam-roles","text":"Allow your instance to securely access other AWS services without embedding credentials . Best practice: assign a specific IAM role to each instance rather than using access keys.","title":"\ud83d\udc64 IAM Roles"},{"location":"cloud-practitioner/module-6/m6_sec2/#networking","text":"Each EC2 instance resides inside an Amazon Virtual Private Cloud (VPC) . Within the VPC, you can configure: - Subnets \u2192 logical segments of your network (public or private). - Elastic IP Addresses \u2192 static public IPs that can be reassigned between instances. - Elastic Network Interfaces (ENIs) \u2192 virtual network cards for more advanced configurations. Public vs. Private IPs - Public IPs : Accessible from the Internet (temporary unless associated with an Elastic IP). - Private IPs : Used for communication within a VPC.","title":"\ud83c\udf10 Networking"},{"location":"cloud-practitioner/module-6/m6_sec2/#ec2-instance-lifecycle","text":"State Description Pending The instance is being launched. Running The instance is operational and billing begins. Stopping / Stopped Instance is halted but data persists on EBS volumes. Shutting-down / Terminated Instance is permanently deleted.","title":"\ud83e\udde9 EC2 Instance Lifecycle"},{"location":"cloud-practitioner/module-6/m6_sec2/#monitoring-ec2","text":"Use Amazon CloudWatch to monitor EC2 performance metrics, such as: - CPU utilization - Disk I/O - Network traffic - Status checks You can create CloudWatch Alarms to trigger notifications or Auto Scaling actions.","title":"\ud83d\udcca Monitoring EC2"},{"location":"cloud-practitioner/module-6/m6_sec2/#ec2-cost-model","text":"Amazon EC2 offers multiple pricing models: Model Description Use Case On-Demand Pay per second or hour with no commitment. Short-term, unpredictable workloads. Reserved Instances 1\u20133 year commitment with discounts up to 75%. Steady-state workloads. Spot Instances Up to 90% discount; can be interrupted by AWS. Flexible, fault-tolerant workloads. Dedicated Hosts / Instances Physically isolated hardware. Compliance or licensing requirements.","title":"\ud83d\udcac EC2 Cost Model"},{"location":"cloud-practitioner/module-6/m6_sec2/#key-takeaways","text":"Amazon EC2 provides scalable virtual servers in the cloud. You can fully control the instance type, OS, storage, and network. AMIs simplify deployment by offering reusable templates. Security Groups act as virtual firewalls; IAM Roles grant secure access to other AWS services. CloudWatch is used for monitoring performance. Choose the right pricing model to balance cost and flexibility. Combine Auto Scaling and Elastic Load Balancing for high availability and resilience.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-6/m6_sec3/","text":"\u2699\ufe0f Module 6 - Compute 3\ufe0f\u20e3 Section 3: Amazon EC2 Cost Optimization \ud83d\udfe0 Introduction Cost optimization is a key benefit of using AWS compute services. AWS gives you flexibility to choose different pricing models and features to manage costs while maintaining performance. This section covers strategies and tools for optimizing EC2 costs through instance selection, elasticity, automation, and monitoring. \ud83d\udcb8 EC2 Pricing Models Amazon EC2 offers several pricing options depending on your workload type and budget. Pricing Model Description Ideal For On-Demand Instances Pay for compute capacity by the hour or second, with no long-term commitments. Unpredictable workloads or testing environments. Reserved Instances (RIs) Commit to a 1- or 3-year term for significant discounts (up to 75%). Steady-state or predictable workloads. Spot Instances Use unused EC2 capacity at discounts up to 90%. AWS may reclaim capacity with short notice. Fault-tolerant, flexible, or batch workloads. Dedicated Hosts Physical servers dedicated to a single customer for regulatory or licensing compliance. Enterprise or compliance-heavy workloads. Savings Plans Flexible pricing model offering savings across EC2, Fargate, and Lambda in exchange for a 1- or 3-year usage commitment. Variable workloads across services. \u2699\ufe0f Key Cost Optimization Strategies AWS defines four pillars of EC2 cost optimization : 1\ufe0f\u20e3 Right-Size Your Resources Choose the most efficient instance types and sizes for your workload. Regularly analyze performance and adjust resources accordingly. Use AWS Compute Optimizer to receive recommendations based on utilization data. 2\ufe0f\u20e3 Increase Elasticity Scale resources dynamically using Auto Scaling . Automatically add or remove instances based on demand. Avoid over-provisioning by aligning capacity with actual usage. Combine Elastic Load Balancing (ELB) and Auto Scaling to distribute traffic efficiently. 3\ufe0f\u20e3 Use the Optimal Pricing Model Evaluate the combination of On-Demand , Reserved , and Spot Instances . Example: Use On-Demand for unpredictable peaks. Use Reserved Instances for steady-state workloads. Use Spot for batch jobs or background tasks. 4\ufe0f\u20e3 Optimize Storage and Data Transfer Choose the right EBS volume type (e.g., gp3 vs. io2) to balance performance and cost. Delete unused EBS snapshots and orphaned volumes. Use Amazon S3 Lifecycle Policies to move data to cheaper storage classes. Consolidate data transfer where possible using Amazon CloudFront or PrivateLink . \ud83d\udcc8 Tools for Cost Optimization AWS provides several tools to help monitor and reduce compute costs: Tool Function AWS Cost Explorer Visualize, track, and analyze AWS spending patterns. AWS Budgets Set custom cost and usage budgets with email/SNS alerts. AWS Trusted Advisor Provides cost optimization checks and recommendations (e.g., idle instances, underused RIs). AWS Compute Optimizer Suggests optimal EC2 instance types based on past performance metrics. Amazon CloudWatch Monitors resource utilization (CPU, memory, network) to identify inefficiencies. \ud83e\uddee Right-Sizing Example Let\u2019s say you have multiple m5.large instances running at only 15% CPU utilization. By switching to t3.medium instances, you could: - Reduce cost by more than 50% . - Maintain the same performance level for typical usage. - Automatically scale up when load increases (with Auto Scaling). \ud83d\udca1 AWS Compute Optimizer uses CloudWatch metrics to make these recommendations automatically. \ud83d\udd01 Leveraging Elasticity and Automation Elasticity is one of the core advantages of the AWS Cloud. You can: - Automatically scale in/out using Auto Scaling Groups . - Stop or terminate instances during off-peak hours to save money. - Use AWS Lambda or EventBridge to schedule instance shutdowns. - Employ Savings Plans to automatically apply lower rates to eligible compute usage. Elastic workloads = efficient cost management \u2705 \ud83d\udcac Reserved Instances and Savings Plans \ud83d\udd39 Reserved Instances (RIs) Provide discounts in exchange for long-term usage. Types: Standard RIs \u2192 largest discount; fixed instance type and Region. Convertible RIs \u2192 flexibility to change instance families or OS. Scheduled RIs \u2192 run at specific times, ideal for predictable usage windows. \ud83d\udd39 Savings Plans Newer, more flexible option. Commit to a consistent spend ($/hour) rather than specific instances. Automatically applies savings to any compute usage (EC2, Fargate, or Lambda). Easier to manage and more adaptable than RIs. \ud83d\udca1 Spot Instances and Workload Resilience Spot Instances can offer up to 90% discounts but can be interrupted when AWS reclaims capacity. Best practices for Spot usage: - Use Spot Fleets to diversify across instance types and AZs. - Combine Spot with On-Demand or Reserved Instances. - Store critical data on EBS or S3 to preserve state. - Use Auto Scaling with interruption handling to maintain performance. \ud83e\udde0 Key Takeaways EC2 pricing flexibility allows you to balance cost, performance, and reliability. Apply the four pillars of cost optimization : Right-size resources. Increase elasticity. Choose the optimal pricing model. Optimize storage and data transfer. Use AWS tools like Cost Explorer , Trusted Advisor , Compute Optimizer , and CloudWatch . Combine On-Demand , Reserved , and Spot Instances for maximum savings. Automation and elasticity are the most powerful levers for long-term cost efficiency.","title":"\u25fd\ufe0f Section 3 - Amazon EC2 Cost Optimization"},{"location":"cloud-practitioner/module-6/m6_sec3/#module-6-compute","text":"","title":"\u2699\ufe0f Module 6 - Compute"},{"location":"cloud-practitioner/module-6/m6_sec3/#3-section-3-amazon-ec2-cost-optimization","text":"","title":"3\ufe0f\u20e3 Section 3: Amazon EC2 Cost Optimization"},{"location":"cloud-practitioner/module-6/m6_sec3/#introduction","text":"Cost optimization is a key benefit of using AWS compute services. AWS gives you flexibility to choose different pricing models and features to manage costs while maintaining performance. This section covers strategies and tools for optimizing EC2 costs through instance selection, elasticity, automation, and monitoring.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-6/m6_sec3/#ec2-pricing-models","text":"Amazon EC2 offers several pricing options depending on your workload type and budget. Pricing Model Description Ideal For On-Demand Instances Pay for compute capacity by the hour or second, with no long-term commitments. Unpredictable workloads or testing environments. Reserved Instances (RIs) Commit to a 1- or 3-year term for significant discounts (up to 75%). Steady-state or predictable workloads. Spot Instances Use unused EC2 capacity at discounts up to 90%. AWS may reclaim capacity with short notice. Fault-tolerant, flexible, or batch workloads. Dedicated Hosts Physical servers dedicated to a single customer for regulatory or licensing compliance. Enterprise or compliance-heavy workloads. Savings Plans Flexible pricing model offering savings across EC2, Fargate, and Lambda in exchange for a 1- or 3-year usage commitment. Variable workloads across services.","title":"\ud83d\udcb8 EC2 Pricing Models"},{"location":"cloud-practitioner/module-6/m6_sec3/#key-cost-optimization-strategies","text":"AWS defines four pillars of EC2 cost optimization :","title":"\u2699\ufe0f Key Cost Optimization Strategies"},{"location":"cloud-practitioner/module-6/m6_sec3/#1-right-size-your-resources","text":"Choose the most efficient instance types and sizes for your workload. Regularly analyze performance and adjust resources accordingly. Use AWS Compute Optimizer to receive recommendations based on utilization data.","title":"1\ufe0f\u20e3 Right-Size Your Resources"},{"location":"cloud-practitioner/module-6/m6_sec3/#2-increase-elasticity","text":"Scale resources dynamically using Auto Scaling . Automatically add or remove instances based on demand. Avoid over-provisioning by aligning capacity with actual usage. Combine Elastic Load Balancing (ELB) and Auto Scaling to distribute traffic efficiently.","title":"2\ufe0f\u20e3 Increase Elasticity"},{"location":"cloud-practitioner/module-6/m6_sec3/#3-use-the-optimal-pricing-model","text":"Evaluate the combination of On-Demand , Reserved , and Spot Instances . Example: Use On-Demand for unpredictable peaks. Use Reserved Instances for steady-state workloads. Use Spot for batch jobs or background tasks.","title":"3\ufe0f\u20e3 Use the Optimal Pricing Model"},{"location":"cloud-practitioner/module-6/m6_sec3/#4-optimize-storage-and-data-transfer","text":"Choose the right EBS volume type (e.g., gp3 vs. io2) to balance performance and cost. Delete unused EBS snapshots and orphaned volumes. Use Amazon S3 Lifecycle Policies to move data to cheaper storage classes. Consolidate data transfer where possible using Amazon CloudFront or PrivateLink .","title":"4\ufe0f\u20e3 Optimize Storage and Data Transfer"},{"location":"cloud-practitioner/module-6/m6_sec3/#tools-for-cost-optimization","text":"AWS provides several tools to help monitor and reduce compute costs: Tool Function AWS Cost Explorer Visualize, track, and analyze AWS spending patterns. AWS Budgets Set custom cost and usage budgets with email/SNS alerts. AWS Trusted Advisor Provides cost optimization checks and recommendations (e.g., idle instances, underused RIs). AWS Compute Optimizer Suggests optimal EC2 instance types based on past performance metrics. Amazon CloudWatch Monitors resource utilization (CPU, memory, network) to identify inefficiencies.","title":"\ud83d\udcc8 Tools for Cost Optimization"},{"location":"cloud-practitioner/module-6/m6_sec3/#right-sizing-example","text":"Let\u2019s say you have multiple m5.large instances running at only 15% CPU utilization. By switching to t3.medium instances, you could: - Reduce cost by more than 50% . - Maintain the same performance level for typical usage. - Automatically scale up when load increases (with Auto Scaling). \ud83d\udca1 AWS Compute Optimizer uses CloudWatch metrics to make these recommendations automatically.","title":"\ud83e\uddee Right-Sizing Example"},{"location":"cloud-practitioner/module-6/m6_sec3/#leveraging-elasticity-and-automation","text":"Elasticity is one of the core advantages of the AWS Cloud. You can: - Automatically scale in/out using Auto Scaling Groups . - Stop or terminate instances during off-peak hours to save money. - Use AWS Lambda or EventBridge to schedule instance shutdowns. - Employ Savings Plans to automatically apply lower rates to eligible compute usage. Elastic workloads = efficient cost management \u2705","title":"\ud83d\udd01 Leveraging Elasticity and Automation"},{"location":"cloud-practitioner/module-6/m6_sec3/#reserved-instances-and-savings-plans","text":"","title":"\ud83d\udcac Reserved Instances and Savings Plans"},{"location":"cloud-practitioner/module-6/m6_sec3/#reserved-instances-ris","text":"Provide discounts in exchange for long-term usage. Types: Standard RIs \u2192 largest discount; fixed instance type and Region. Convertible RIs \u2192 flexibility to change instance families or OS. Scheduled RIs \u2192 run at specific times, ideal for predictable usage windows.","title":"\ud83d\udd39 Reserved Instances (RIs)"},{"location":"cloud-practitioner/module-6/m6_sec3/#savings-plans","text":"Newer, more flexible option. Commit to a consistent spend ($/hour) rather than specific instances. Automatically applies savings to any compute usage (EC2, Fargate, or Lambda). Easier to manage and more adaptable than RIs.","title":"\ud83d\udd39 Savings Plans"},{"location":"cloud-practitioner/module-6/m6_sec3/#spot-instances-and-workload-resilience","text":"Spot Instances can offer up to 90% discounts but can be interrupted when AWS reclaims capacity. Best practices for Spot usage: - Use Spot Fleets to diversify across instance types and AZs. - Combine Spot with On-Demand or Reserved Instances. - Store critical data on EBS or S3 to preserve state. - Use Auto Scaling with interruption handling to maintain performance.","title":"\ud83d\udca1 Spot Instances and Workload Resilience"},{"location":"cloud-practitioner/module-6/m6_sec3/#key-takeaways","text":"EC2 pricing flexibility allows you to balance cost, performance, and reliability. Apply the four pillars of cost optimization : Right-size resources. Increase elasticity. Choose the optimal pricing model. Optimize storage and data transfer. Use AWS tools like Cost Explorer , Trusted Advisor , Compute Optimizer , and CloudWatch . Combine On-Demand , Reserved , and Spot Instances for maximum savings. Automation and elasticity are the most powerful levers for long-term cost efficiency.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-6/m6_sec4/","text":"\u2699\ufe0f Module 6 - Compute 4\ufe0f\u20e3 Section 4: Container Services \ud83d\udfe0 Introduction Container technology provides a lightweight and portable way to deploy, manage, and scale applications. Containers package an application and all its dependencies, ensuring that it runs consistently across different environments. AWS offers several fully managed container services to simplify deployment, orchestration, and scaling of containerized workloads. \ud83d\udc33 What Are Containers? A container is a standard software unit that packages code and dependencies together, ensuring consistency between development, testing, and production. Key benefits: - Fast startup and shutdown. - Lightweight \u2014 multiple containers can share the same OS kernel. - Consistent environment across development and production. - Portability between on-premises and cloud environments. - Simplified scaling and resource allocation. \u2699\ufe0f Containers vs. Virtual Machines Feature Containers Virtual Machines OS Layer Share the host OS kernel Each VM includes its own OS Startup Time Seconds Minutes Resource Usage Lightweight Heavy Isolation Process-level isolation Full hardware-level isolation Use Case Microservices, cloud-native apps Monolithic applications, full OS control Containers use container runtimes (like Docker or containerd) to execute applications. Multiple containers can run on the same virtual machine or EC2 instance. \ud83e\udde9 AWS Container Services Overview Service Description Key Benefits Amazon Elastic Container Service (ECS) Fully managed container orchestration service. Simplified management of Docker containers on AWS. AWS Fargate Serverless compute engine for containers. Run containers without provisioning or managing EC2 instances. Amazon Elastic Kubernetes Service (EKS) Managed service to run Kubernetes clusters. Leverages open-source Kubernetes tooling. Amazon Elastic Container Registry (ECR) Managed container image registry. Securely store, manage, and deploy Docker images. \ud83d\udfe0 Amazon Elastic Container Service (ECS) Amazon ECS is a fully managed service that allows you to run and scale containerized applications on AWS. Key features: - Supports Docker containers natively. - Integrates with EC2 and Fargate launch types. - Uses task definitions to describe one or more containers that run together. - Supports services for long-running applications or tasks for batch workloads. - Integrates with: - IAM for security and permissions. - CloudWatch for monitoring and logging. - Elastic Load Balancing (ELB) for traffic distribution. Launch types: 1. ECS with EC2 \u2013 You manage the EC2 instances that host containers. 2. ECS with Fargate \u2013 AWS manages the infrastructure; you focus only on containers. \u26a1 AWS Fargate AWS Fargate is a serverless compute engine for ECS and EKS. It allows you to run containers without provisioning or managing servers. Benefits: - No need to choose instance types or manage scaling. - Pay only for the resources consumed by running containers. - Integrates seamlessly with ECS and EKS. - Automatically scales based on resource requirements. - Enhances security \u2014 each task runs in its own isolated environment. Fargate is ideal for: - Microservices architectures. - Event-driven workloads. - Batch jobs and automation tasks. \u2638\ufe0f Amazon Elastic Kubernetes Service (EKS) Amazon EKS is a managed Kubernetes service that runs Kubernetes control plane nodes for you. It\u2019s designed for users who already use Kubernetes and want to leverage AWS infrastructure. Key benefits: - Fully managed Kubernetes control plane (highly available and secure). - Works with standard Kubernetes tooling (kubectl, Helm, etc.). - Supports EKS on EC2 and EKS on Fargate for flexible deployment. - Integrates with AWS services (IAM, CloudWatch, ALB, VPC). - Built-in security with VPC isolation, encryption, and IAM roles for service accounts. Common use cases: - Migrating existing Kubernetes workloads to AWS. - Running hybrid environments using Kubernetes. - Multi-tenant environments requiring strict isolation. \ud83c\udfd7\ufe0f Amazon Elastic Container Registry (ECR) Amazon ECR is a managed container image registry that integrates with ECS, EKS, and Fargate. Features: - Stores, manages, and deploys Docker images securely. - Scalable and highly available by default. - Integrated with IAM for fine-grained access control. - Supports image scanning for vulnerabilities. - Uses encryption at rest and in transit. ECR eliminates the need to operate your own image repositories or worry about scaling infrastructure. \ud83d\udd10 Security in Container Environments Best practices for securing container workloads on AWS: - Use IAM roles for tasks to control access to other services. - Apply least privilege principles in IAM policies. - Enable image scanning in ECR to detect vulnerabilities. - Use AWS Secrets Manager or AWS Systems Manager Parameter Store for sensitive configuration data. - Keep container base images updated and patched regularly. - Restrict network access with VPC security groups and network ACLs . \ud83d\udd01 Container Orchestration Orchestration automates deployment, scaling, and management of containerized applications. Function ECS EKS Managed Control Plane \u2714\ufe0f \u2714\ufe0f Custom Kubernetes APIs \u274c \u2714\ufe0f Integration with AWS Services Deep integration Moderate integration Ease of Use Easier for beginners Requires Kubernetes knowledge Ideal Use Case AWS-native apps Multi-cloud or hybrid workloads \ud83e\udde0 Key Takeaways Containers are lightweight, portable , and ideal for microservices architectures. ECS provides AWS-native container orchestration. EKS supports open-source Kubernetes for advanced use cases. Fargate allows serverless container deployment \u2014 no servers to manage. ECR provides secure, managed image storage. Combine these services for highly scalable, automated, and secure containerized applications. Apply best practices in security , monitoring , and cost optimization to manage container workloads effectively.","title":"\u25fd\ufe0f Section 4 - Container Services"},{"location":"cloud-practitioner/module-6/m6_sec4/#module-6-compute","text":"","title":"\u2699\ufe0f Module 6 - Compute"},{"location":"cloud-practitioner/module-6/m6_sec4/#4-section-4-container-services","text":"","title":"4\ufe0f\u20e3 Section 4: Container Services"},{"location":"cloud-practitioner/module-6/m6_sec4/#introduction","text":"Container technology provides a lightweight and portable way to deploy, manage, and scale applications. Containers package an application and all its dependencies, ensuring that it runs consistently across different environments. AWS offers several fully managed container services to simplify deployment, orchestration, and scaling of containerized workloads.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-6/m6_sec4/#what-are-containers","text":"A container is a standard software unit that packages code and dependencies together, ensuring consistency between development, testing, and production. Key benefits: - Fast startup and shutdown. - Lightweight \u2014 multiple containers can share the same OS kernel. - Consistent environment across development and production. - Portability between on-premises and cloud environments. - Simplified scaling and resource allocation.","title":"\ud83d\udc33 What Are Containers?"},{"location":"cloud-practitioner/module-6/m6_sec4/#containers-vs-virtual-machines","text":"Feature Containers Virtual Machines OS Layer Share the host OS kernel Each VM includes its own OS Startup Time Seconds Minutes Resource Usage Lightweight Heavy Isolation Process-level isolation Full hardware-level isolation Use Case Microservices, cloud-native apps Monolithic applications, full OS control Containers use container runtimes (like Docker or containerd) to execute applications. Multiple containers can run on the same virtual machine or EC2 instance.","title":"\u2699\ufe0f Containers vs. Virtual Machines"},{"location":"cloud-practitioner/module-6/m6_sec4/#aws-container-services-overview","text":"Service Description Key Benefits Amazon Elastic Container Service (ECS) Fully managed container orchestration service. Simplified management of Docker containers on AWS. AWS Fargate Serverless compute engine for containers. Run containers without provisioning or managing EC2 instances. Amazon Elastic Kubernetes Service (EKS) Managed service to run Kubernetes clusters. Leverages open-source Kubernetes tooling. Amazon Elastic Container Registry (ECR) Managed container image registry. Securely store, manage, and deploy Docker images.","title":"\ud83e\udde9 AWS Container Services Overview"},{"location":"cloud-practitioner/module-6/m6_sec4/#amazon-elastic-container-service-ecs","text":"Amazon ECS is a fully managed service that allows you to run and scale containerized applications on AWS. Key features: - Supports Docker containers natively. - Integrates with EC2 and Fargate launch types. - Uses task definitions to describe one or more containers that run together. - Supports services for long-running applications or tasks for batch workloads. - Integrates with: - IAM for security and permissions. - CloudWatch for monitoring and logging. - Elastic Load Balancing (ELB) for traffic distribution. Launch types: 1. ECS with EC2 \u2013 You manage the EC2 instances that host containers. 2. ECS with Fargate \u2013 AWS manages the infrastructure; you focus only on containers.","title":"\ud83d\udfe0 Amazon Elastic Container Service (ECS)"},{"location":"cloud-practitioner/module-6/m6_sec4/#aws-fargate","text":"AWS Fargate is a serverless compute engine for ECS and EKS. It allows you to run containers without provisioning or managing servers. Benefits: - No need to choose instance types or manage scaling. - Pay only for the resources consumed by running containers. - Integrates seamlessly with ECS and EKS. - Automatically scales based on resource requirements. - Enhances security \u2014 each task runs in its own isolated environment. Fargate is ideal for: - Microservices architectures. - Event-driven workloads. - Batch jobs and automation tasks.","title":"\u26a1 AWS Fargate"},{"location":"cloud-practitioner/module-6/m6_sec4/#amazon-elastic-kubernetes-service-eks","text":"Amazon EKS is a managed Kubernetes service that runs Kubernetes control plane nodes for you. It\u2019s designed for users who already use Kubernetes and want to leverage AWS infrastructure. Key benefits: - Fully managed Kubernetes control plane (highly available and secure). - Works with standard Kubernetes tooling (kubectl, Helm, etc.). - Supports EKS on EC2 and EKS on Fargate for flexible deployment. - Integrates with AWS services (IAM, CloudWatch, ALB, VPC). - Built-in security with VPC isolation, encryption, and IAM roles for service accounts. Common use cases: - Migrating existing Kubernetes workloads to AWS. - Running hybrid environments using Kubernetes. - Multi-tenant environments requiring strict isolation.","title":"\u2638\ufe0f Amazon Elastic Kubernetes Service (EKS)"},{"location":"cloud-practitioner/module-6/m6_sec4/#amazon-elastic-container-registry-ecr","text":"Amazon ECR is a managed container image registry that integrates with ECS, EKS, and Fargate. Features: - Stores, manages, and deploys Docker images securely. - Scalable and highly available by default. - Integrated with IAM for fine-grained access control. - Supports image scanning for vulnerabilities. - Uses encryption at rest and in transit. ECR eliminates the need to operate your own image repositories or worry about scaling infrastructure.","title":"\ud83c\udfd7\ufe0f Amazon Elastic Container Registry (ECR)"},{"location":"cloud-practitioner/module-6/m6_sec4/#security-in-container-environments","text":"Best practices for securing container workloads on AWS: - Use IAM roles for tasks to control access to other services. - Apply least privilege principles in IAM policies. - Enable image scanning in ECR to detect vulnerabilities. - Use AWS Secrets Manager or AWS Systems Manager Parameter Store for sensitive configuration data. - Keep container base images updated and patched regularly. - Restrict network access with VPC security groups and network ACLs .","title":"\ud83d\udd10 Security in Container Environments"},{"location":"cloud-practitioner/module-6/m6_sec4/#container-orchestration","text":"Orchestration automates deployment, scaling, and management of containerized applications. Function ECS EKS Managed Control Plane \u2714\ufe0f \u2714\ufe0f Custom Kubernetes APIs \u274c \u2714\ufe0f Integration with AWS Services Deep integration Moderate integration Ease of Use Easier for beginners Requires Kubernetes knowledge Ideal Use Case AWS-native apps Multi-cloud or hybrid workloads","title":"\ud83d\udd01 Container Orchestration"},{"location":"cloud-practitioner/module-6/m6_sec4/#key-takeaways","text":"Containers are lightweight, portable , and ideal for microservices architectures. ECS provides AWS-native container orchestration. EKS supports open-source Kubernetes for advanced use cases. Fargate allows serverless container deployment \u2014 no servers to manage. ECR provides secure, managed image storage. Combine these services for highly scalable, automated, and secure containerized applications. Apply best practices in security , monitoring , and cost optimization to manage container workloads effectively.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-6/m6_sec5/","text":"\u2699\ufe0f Module 6 - Compute 5\ufe0f\u20e3 Section 5: AWS Lambda (Serverless Compute) \ud83d\udfe0 Introduction AWS Lambda is a serverless compute service that lets you run code without provisioning or managing servers. You upload your code, configure triggers, and AWS handles the execution automatically. You are charged only for: - The number of requests to your functions. - The duration your code runs. No need to manage infrastructure \u2014 Lambda automatically scales and provides high availability. \u26a1 How AWS Lambda Works AWS Lambda runs your code in response to events such as: - Changes to data in Amazon S3 or DynamoDB . - HTTP requests via Amazon API Gateway . - Stream processing from Amazon Kinesis or MSK . - Scheduled events through Amazon EventBridge or CloudWatch Events . Each function runs inside a stateless, isolated environment that is automatically created when invoked. \ud83e\udde9 Key Features of AWS Lambda Feature Description Serverless No infrastructure to manage. AWS provisions resources on your behalf. Event-driven Executes code automatically in response to events or triggers. Automatic Scaling Scales from zero to thousands of requests per second seamlessly. Pay-per-use You are charged for compute time used (measured in milliseconds). Multi-language support Supports Node.js, Python, Java, Go, C#, Ruby, and custom runtimes. Integrations Works with over 200 AWS services as event sources or destinations. Built-in Monitoring Integrated with Amazon CloudWatch for logs and metrics. \u2699\ufe0f Lambda Function Components Every Lambda function has three main components: Code The logic you want to execute. Can be uploaded as a ZIP file or container image (up to 10 GB). You can edit code directly in the Lambda console or use tools like AWS CLI or SDKs. Handler The specific method inside your code that AWS Lambda executes. Example (Python): python def lambda_handler(event, context): print(\"Hello from Lambda!\") Execution Role (IAM Role) Grants your function permissions to access AWS resources (e.g., S3, DynamoDB). Follows the principle of least privilege for security. \u26a1 Execution and Scaling When a Lambda function is invoked: 1. AWS creates or reuses a container environment. 2. The handler runs your code with the provided event data. 3. Lambda scales automatically based on incoming requests. 4. Multiple executions can occur in parallel, each in an isolated environment. AWS manages: - Scaling and load balancing. - Health monitoring. - Logging and metrics. \ud83e\uddee Pricing Model You are billed based on: - Number of requests: $0.20 per 1 million requests (first 1 million free). - Compute time: Measured in milliseconds, depending on allocated memory (from 128 MB to 10 GB). - Free tier: 1 million requests and 400,000 GB-seconds per month. Example: - A function running for 100 ms with 512 MB of memory costs only fractions of a cent. Lambda\u2019s pricing model encourages cost efficiency for short-lived or variable workloads. \ud83e\udde0 Supported Event Sources Service Trigger Type Example Amazon S3 Object event Run code when a file is uploaded. Amazon DynamoDB Streams Data event React to database changes. Amazon API Gateway HTTP request Build serverless APIs. Amazon EventBridge / CloudWatch Scheduled or system event Run periodic tasks (cron). Amazon Kinesis / MSK Data stream Real-time data processing. AWS Step Functions Workflow trigger Execute function chains. \ud83e\uddf1 Integrations and Use Cases \ud83e\udea3 File Processing Automatically trigger a Lambda function when an object is uploaded to S3 (e.g., image resizing or metadata extraction). \ud83d\udd04 Data Transformation React to changes in DynamoDB and transform or forward the data to another service. \ud83c\udf10 Serverless APIs Combine Lambda with API Gateway to create fully managed REST or GraphQL APIs. \u23f0 Scheduled Tasks Use EventBridge rules to execute functions at fixed intervals (e.g., cleanup jobs). \ud83d\udcca Real-time Stream Processing Consume data from Amazon Kinesis streams for analytics or monitoring. \ud83d\udd10 Security and Permissions Each Lambda function uses an IAM role for AWS resource access. Store secrets and API keys securely in: AWS Secrets Manager AWS Systems Manager Parameter Store Use VPC integration if your Lambda function needs to access private resources. Enable CloudWatch Logs for monitoring executions and debugging. \u2699\ufe0f Best Practices Keep functions small and modular \u2014 single-purpose functions are easier to maintain. Avoid heavy dependencies \u2014 minimize cold start times. Reuse execution environments when possible (use global variables). Implement error handling and retries for reliability. Use concurrency limits to control scaling behavior. Monitor metrics such as invocation count, duration, and throttling via CloudWatch. Leverage Lambda Layers to share code and dependencies across functions. \ud83e\uddee Limits and Quotas Limit Value Memory Allocation 128 MB \u2013 10 GB Maximum Execution Time 15 minutes Package Size (ZIP) 250 MB Package Size (Container Image) 10 GB Concurrent Executions (Default) 1,000 (adjustable) Environment Variables 4 KB limit per function \ud83e\udde0 Key Takeaways AWS Lambda runs code without servers , automatically scaling based on demand. Event-driven model integrates with 200+ AWS services. Pay only for what you use \u2014 no idle costs . Use IAM roles for secure resource access and CloudWatch for monitoring. Lambda is ideal for: Event-driven processing. Serverless APIs. Automation and scheduled tasks. Follow best practices to reduce latency, cost, and improve maintainability.","title":"\u25fd\ufe0f Section 5 - AWS Lambda (Serverless Compute)"},{"location":"cloud-practitioner/module-6/m6_sec5/#module-6-compute","text":"","title":"\u2699\ufe0f Module 6 - Compute"},{"location":"cloud-practitioner/module-6/m6_sec5/#5-section-5-aws-lambda-serverless-compute","text":"","title":"5\ufe0f\u20e3 Section 5: AWS Lambda (Serverless Compute)"},{"location":"cloud-practitioner/module-6/m6_sec5/#introduction","text":"AWS Lambda is a serverless compute service that lets you run code without provisioning or managing servers. You upload your code, configure triggers, and AWS handles the execution automatically. You are charged only for: - The number of requests to your functions. - The duration your code runs. No need to manage infrastructure \u2014 Lambda automatically scales and provides high availability.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-6/m6_sec5/#how-aws-lambda-works","text":"AWS Lambda runs your code in response to events such as: - Changes to data in Amazon S3 or DynamoDB . - HTTP requests via Amazon API Gateway . - Stream processing from Amazon Kinesis or MSK . - Scheduled events through Amazon EventBridge or CloudWatch Events . Each function runs inside a stateless, isolated environment that is automatically created when invoked.","title":"\u26a1 How AWS Lambda Works"},{"location":"cloud-practitioner/module-6/m6_sec5/#key-features-of-aws-lambda","text":"Feature Description Serverless No infrastructure to manage. AWS provisions resources on your behalf. Event-driven Executes code automatically in response to events or triggers. Automatic Scaling Scales from zero to thousands of requests per second seamlessly. Pay-per-use You are charged for compute time used (measured in milliseconds). Multi-language support Supports Node.js, Python, Java, Go, C#, Ruby, and custom runtimes. Integrations Works with over 200 AWS services as event sources or destinations. Built-in Monitoring Integrated with Amazon CloudWatch for logs and metrics.","title":"\ud83e\udde9 Key Features of AWS Lambda"},{"location":"cloud-practitioner/module-6/m6_sec5/#lambda-function-components","text":"Every Lambda function has three main components: Code The logic you want to execute. Can be uploaded as a ZIP file or container image (up to 10 GB). You can edit code directly in the Lambda console or use tools like AWS CLI or SDKs. Handler The specific method inside your code that AWS Lambda executes. Example (Python): python def lambda_handler(event, context): print(\"Hello from Lambda!\") Execution Role (IAM Role) Grants your function permissions to access AWS resources (e.g., S3, DynamoDB). Follows the principle of least privilege for security.","title":"\u2699\ufe0f Lambda Function Components"},{"location":"cloud-practitioner/module-6/m6_sec5/#execution-and-scaling","text":"When a Lambda function is invoked: 1. AWS creates or reuses a container environment. 2. The handler runs your code with the provided event data. 3. Lambda scales automatically based on incoming requests. 4. Multiple executions can occur in parallel, each in an isolated environment. AWS manages: - Scaling and load balancing. - Health monitoring. - Logging and metrics.","title":"\u26a1 Execution and Scaling"},{"location":"cloud-practitioner/module-6/m6_sec5/#pricing-model","text":"You are billed based on: - Number of requests: $0.20 per 1 million requests (first 1 million free). - Compute time: Measured in milliseconds, depending on allocated memory (from 128 MB to 10 GB). - Free tier: 1 million requests and 400,000 GB-seconds per month. Example: - A function running for 100 ms with 512 MB of memory costs only fractions of a cent. Lambda\u2019s pricing model encourages cost efficiency for short-lived or variable workloads.","title":"\ud83e\uddee Pricing Model"},{"location":"cloud-practitioner/module-6/m6_sec5/#supported-event-sources","text":"Service Trigger Type Example Amazon S3 Object event Run code when a file is uploaded. Amazon DynamoDB Streams Data event React to database changes. Amazon API Gateway HTTP request Build serverless APIs. Amazon EventBridge / CloudWatch Scheduled or system event Run periodic tasks (cron). Amazon Kinesis / MSK Data stream Real-time data processing. AWS Step Functions Workflow trigger Execute function chains.","title":"\ud83e\udde0 Supported Event Sources"},{"location":"cloud-practitioner/module-6/m6_sec5/#integrations-and-use-cases","text":"","title":"\ud83e\uddf1 Integrations and Use Cases"},{"location":"cloud-practitioner/module-6/m6_sec5/#file-processing","text":"Automatically trigger a Lambda function when an object is uploaded to S3 (e.g., image resizing or metadata extraction).","title":"\ud83e\udea3 File Processing"},{"location":"cloud-practitioner/module-6/m6_sec5/#data-transformation","text":"React to changes in DynamoDB and transform or forward the data to another service.","title":"\ud83d\udd04 Data Transformation"},{"location":"cloud-practitioner/module-6/m6_sec5/#serverless-apis","text":"Combine Lambda with API Gateway to create fully managed REST or GraphQL APIs.","title":"\ud83c\udf10 Serverless APIs"},{"location":"cloud-practitioner/module-6/m6_sec5/#scheduled-tasks","text":"Use EventBridge rules to execute functions at fixed intervals (e.g., cleanup jobs).","title":"\u23f0 Scheduled Tasks"},{"location":"cloud-practitioner/module-6/m6_sec5/#real-time-stream-processing","text":"Consume data from Amazon Kinesis streams for analytics or monitoring.","title":"\ud83d\udcca Real-time Stream Processing"},{"location":"cloud-practitioner/module-6/m6_sec5/#security-and-permissions","text":"Each Lambda function uses an IAM role for AWS resource access. Store secrets and API keys securely in: AWS Secrets Manager AWS Systems Manager Parameter Store Use VPC integration if your Lambda function needs to access private resources. Enable CloudWatch Logs for monitoring executions and debugging.","title":"\ud83d\udd10 Security and Permissions"},{"location":"cloud-practitioner/module-6/m6_sec5/#best-practices","text":"Keep functions small and modular \u2014 single-purpose functions are easier to maintain. Avoid heavy dependencies \u2014 minimize cold start times. Reuse execution environments when possible (use global variables). Implement error handling and retries for reliability. Use concurrency limits to control scaling behavior. Monitor metrics such as invocation count, duration, and throttling via CloudWatch. Leverage Lambda Layers to share code and dependencies across functions.","title":"\u2699\ufe0f Best Practices"},{"location":"cloud-practitioner/module-6/m6_sec5/#limits-and-quotas","text":"Limit Value Memory Allocation 128 MB \u2013 10 GB Maximum Execution Time 15 minutes Package Size (ZIP) 250 MB Package Size (Container Image) 10 GB Concurrent Executions (Default) 1,000 (adjustable) Environment Variables 4 KB limit per function","title":"\ud83e\uddee Limits and Quotas"},{"location":"cloud-practitioner/module-6/m6_sec5/#key-takeaways","text":"AWS Lambda runs code without servers , automatically scaling based on demand. Event-driven model integrates with 200+ AWS services. Pay only for what you use \u2014 no idle costs . Use IAM roles for secure resource access and CloudWatch for monitoring. Lambda is ideal for: Event-driven processing. Serverless APIs. Automation and scheduled tasks. Follow best practices to reduce latency, cost, and improve maintainability.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-6/m6_sec6/","text":"\u2699\ufe0f Module 6 - Compute 6\ufe0f\u20e3 Section 6: AWS Elastic Beanstalk \ud83d\udfe0 Introduction AWS Elastic Beanstalk is a Platform as a Service (PaaS) that simplifies the process of deploying, managing, and scaling web applications and services. You simply upload your code, and Elastic Beanstalk automatically handles the deployment \u2014 including capacity provisioning, load balancing, auto scaling, and application health monitoring. You retain full control over the AWS resources running your application and can adjust configurations at any time. \ud83c\udf31 What Is AWS Elastic Beanstalk? Elastic Beanstalk helps developers focus on writing code , not managing infrastructure. Key capabilities: - Automatically provisions and operates the underlying infrastructure (EC2, ELB, Auto Scaling, RDS, etc.). - Supports multiple application platforms and programming languages. - Provides a unified dashboard to monitor performance and health. - Offers full control over resources if you want to customize configurations. - No additional charge \u2014 you pay only for the AWS resources used by your application. \ud83e\udde9 Supported Platforms AWS Elastic Beanstalk supports a wide range of languages and frameworks, including: Java .NET PHP Node.js Python Ruby Go Docker containers You can also use custom platforms with pre-configured AMIs for unique workloads. \u2699\ufe0f How Elastic Beanstalk Works Upload your application code. Supported sources: ZIP files, WAR files, or container images. You can deploy using the AWS Management Console, CLI, or API. Elastic Beanstalk provisions resources automatically. Creates an EC2 Auto Scaling group . Configures Elastic Load Balancer (ELB) . Sets up CloudWatch monitoring for metrics and alarms. Optionally launches an RDS instance for database needs. The environment is launched and monitored. Elastic Beanstalk monitors health and manages updates. Developers can deploy new versions at any time. \ud83e\uddf1 Application Architecture An Elastic Beanstalk application consists of two main components: Component Description Application A logical collection of components (environments, versions, configurations). Environment A collection of AWS resources running a specific version of your application. Each environment includes: - EC2 instances (compute layer). - Load balancer (traffic distribution). - Auto Scaling group (elasticity). - CloudWatch alarms (monitoring). You can deploy multiple environments \u2014 for example: - Development - Testing - Production \ud83d\udcbb Deployment Models Elastic Beanstalk supports several deployment strategies: Deployment Type Description Use Case All at Once Deploys new version to all instances simultaneously. Fastest, but may cause downtime. Rolling Deploys updates in batches, replacing instances gradually. Minimizes downtime; maintains partial availability. Rolling with Additional Batch Adds a new batch of instances before deploying. Maintains full capacity during deployment. Immutable Deploys new version to a separate set of instances, then swaps traffic. Safest; ensures rollback capability. Blue/Green Deployment Creates a new environment (green) and switches traffic from old (blue). Zero-downtime updates and testing. \ud83d\udcc8 Scaling with Elastic Beanstalk Elastic Beanstalk uses Auto Scaling to maintain performance and cost efficiency. Horizontal scaling: Adjusts the number of EC2 instances based on load. Vertical scaling: Changes instance types for more or less capacity. You can configure scaling based on: CPU utilization Network traffic Latency Custom CloudWatch metrics Load Balancing: Elastic Beanstalk automatically configures Elastic Load Balancer (ELB) to distribute incoming traffic evenly across instances. \ud83d\udd0d Monitoring and Health Elastic Beanstalk integrates with Amazon CloudWatch to track performance and system health. Metrics monitored include: - CPU utilization - Network I/O - Request count - Latency - Error rates Elastic Beanstalk provides a Health Dashboard showing: - Environment health status (green, yellow, red). - Event logs. - Deployment history. \ud83d\udee0\ufe0f Configuration Management Elastic Beanstalk allows configuration at multiple levels: Environment Configuration Modify EC2 instance types, scaling rules, or load balancer settings. Configuration Files (.ebextensions) Include .config files in your project root to customize resources (install software, configure packages, modify settings). Saved Configurations Reuse environment templates for consistent deployments across environments. Environment Variables Store sensitive configuration data for your application (e.g., API keys, DB credentials). \ud83d\udca1 Benefits of Using Elastic Beanstalk Benefit Description Fast Deployment Deploy fully configured applications within minutes. Automatic Management Handles infrastructure, scaling, and health monitoring. Developer Productivity Focus on code instead of infrastructure. Customizable Full control of underlying AWS resources if needed. No Extra Cost You pay only for the AWS resources your app uses. Integrated Monitoring Built-in health checks and CloudWatch integration. \ud83d\udd12 Security Considerations Elastic Beanstalk environments run inside your VPC . Use IAM roles for EC2 instances to securely access other AWS services. Use security groups to control network traffic. Enable encryption for data in transit (HTTPS/SSL). Apply the principle of least privilege for permissions. Use AWS Config or AWS CloudTrail to audit configuration and access changes. \ud83e\udde0 Best Practices Use Blue/Green deployments to minimize downtime. Monitor health and logs regularly to identify performance bottlenecks. Enable automatic scaling to handle variable traffic patterns. Automate environment creation using the Elastic Beanstalk CLI or CloudFormation. Secure your application using IAM, HTTPS, and network isolation. Use environment tagging to manage cost allocation. Regularly update platform versions for performance and security patches. \ud83e\udde0 Key Takeaways AWS Elastic Beanstalk is a fully managed PaaS for deploying web applications quickly and efficiently. It automatically handles provisioning, scaling, load balancing, and monitoring . Supports multiple languages, frameworks, and Docker containers . Developers retain full control over the underlying AWS resources. Deploy applications using rolling , immutable , or blue/green strategies for reliability. Integrates with CloudWatch , IAM , and VPC for security and observability. Ideal for teams that want speed, automation, and scalability without managing infrastructure.","title":"\u25fd\ufe0f Section 6 - AWS Elastic Beanstalk"},{"location":"cloud-practitioner/module-6/m6_sec6/#module-6-compute","text":"","title":"\u2699\ufe0f Module 6 - Compute"},{"location":"cloud-practitioner/module-6/m6_sec6/#6-section-6-aws-elastic-beanstalk","text":"","title":"6\ufe0f\u20e3 Section 6: AWS Elastic Beanstalk"},{"location":"cloud-practitioner/module-6/m6_sec6/#introduction","text":"AWS Elastic Beanstalk is a Platform as a Service (PaaS) that simplifies the process of deploying, managing, and scaling web applications and services. You simply upload your code, and Elastic Beanstalk automatically handles the deployment \u2014 including capacity provisioning, load balancing, auto scaling, and application health monitoring. You retain full control over the AWS resources running your application and can adjust configurations at any time.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-6/m6_sec6/#what-is-aws-elastic-beanstalk","text":"Elastic Beanstalk helps developers focus on writing code , not managing infrastructure. Key capabilities: - Automatically provisions and operates the underlying infrastructure (EC2, ELB, Auto Scaling, RDS, etc.). - Supports multiple application platforms and programming languages. - Provides a unified dashboard to monitor performance and health. - Offers full control over resources if you want to customize configurations. - No additional charge \u2014 you pay only for the AWS resources used by your application.","title":"\ud83c\udf31 What Is AWS Elastic Beanstalk?"},{"location":"cloud-practitioner/module-6/m6_sec6/#supported-platforms","text":"AWS Elastic Beanstalk supports a wide range of languages and frameworks, including: Java .NET PHP Node.js Python Ruby Go Docker containers You can also use custom platforms with pre-configured AMIs for unique workloads.","title":"\ud83e\udde9 Supported Platforms"},{"location":"cloud-practitioner/module-6/m6_sec6/#how-elastic-beanstalk-works","text":"Upload your application code. Supported sources: ZIP files, WAR files, or container images. You can deploy using the AWS Management Console, CLI, or API. Elastic Beanstalk provisions resources automatically. Creates an EC2 Auto Scaling group . Configures Elastic Load Balancer (ELB) . Sets up CloudWatch monitoring for metrics and alarms. Optionally launches an RDS instance for database needs. The environment is launched and monitored. Elastic Beanstalk monitors health and manages updates. Developers can deploy new versions at any time.","title":"\u2699\ufe0f How Elastic Beanstalk Works"},{"location":"cloud-practitioner/module-6/m6_sec6/#application-architecture","text":"An Elastic Beanstalk application consists of two main components: Component Description Application A logical collection of components (environments, versions, configurations). Environment A collection of AWS resources running a specific version of your application. Each environment includes: - EC2 instances (compute layer). - Load balancer (traffic distribution). - Auto Scaling group (elasticity). - CloudWatch alarms (monitoring). You can deploy multiple environments \u2014 for example: - Development - Testing - Production","title":"\ud83e\uddf1 Application Architecture"},{"location":"cloud-practitioner/module-6/m6_sec6/#deployment-models","text":"Elastic Beanstalk supports several deployment strategies: Deployment Type Description Use Case All at Once Deploys new version to all instances simultaneously. Fastest, but may cause downtime. Rolling Deploys updates in batches, replacing instances gradually. Minimizes downtime; maintains partial availability. Rolling with Additional Batch Adds a new batch of instances before deploying. Maintains full capacity during deployment. Immutable Deploys new version to a separate set of instances, then swaps traffic. Safest; ensures rollback capability. Blue/Green Deployment Creates a new environment (green) and switches traffic from old (blue). Zero-downtime updates and testing.","title":"\ud83d\udcbb Deployment Models"},{"location":"cloud-practitioner/module-6/m6_sec6/#scaling-with-elastic-beanstalk","text":"Elastic Beanstalk uses Auto Scaling to maintain performance and cost efficiency. Horizontal scaling: Adjusts the number of EC2 instances based on load. Vertical scaling: Changes instance types for more or less capacity. You can configure scaling based on: CPU utilization Network traffic Latency Custom CloudWatch metrics Load Balancing: Elastic Beanstalk automatically configures Elastic Load Balancer (ELB) to distribute incoming traffic evenly across instances.","title":"\ud83d\udcc8 Scaling with Elastic Beanstalk"},{"location":"cloud-practitioner/module-6/m6_sec6/#monitoring-and-health","text":"Elastic Beanstalk integrates with Amazon CloudWatch to track performance and system health. Metrics monitored include: - CPU utilization - Network I/O - Request count - Latency - Error rates Elastic Beanstalk provides a Health Dashboard showing: - Environment health status (green, yellow, red). - Event logs. - Deployment history.","title":"\ud83d\udd0d Monitoring and Health"},{"location":"cloud-practitioner/module-6/m6_sec6/#configuration-management","text":"Elastic Beanstalk allows configuration at multiple levels: Environment Configuration Modify EC2 instance types, scaling rules, or load balancer settings. Configuration Files (.ebextensions) Include .config files in your project root to customize resources (install software, configure packages, modify settings). Saved Configurations Reuse environment templates for consistent deployments across environments. Environment Variables Store sensitive configuration data for your application (e.g., API keys, DB credentials).","title":"\ud83d\udee0\ufe0f Configuration Management"},{"location":"cloud-practitioner/module-6/m6_sec6/#benefits-of-using-elastic-beanstalk","text":"Benefit Description Fast Deployment Deploy fully configured applications within minutes. Automatic Management Handles infrastructure, scaling, and health monitoring. Developer Productivity Focus on code instead of infrastructure. Customizable Full control of underlying AWS resources if needed. No Extra Cost You pay only for the AWS resources your app uses. Integrated Monitoring Built-in health checks and CloudWatch integration.","title":"\ud83d\udca1 Benefits of Using Elastic Beanstalk"},{"location":"cloud-practitioner/module-6/m6_sec6/#security-considerations","text":"Elastic Beanstalk environments run inside your VPC . Use IAM roles for EC2 instances to securely access other AWS services. Use security groups to control network traffic. Enable encryption for data in transit (HTTPS/SSL). Apply the principle of least privilege for permissions. Use AWS Config or AWS CloudTrail to audit configuration and access changes.","title":"\ud83d\udd12 Security Considerations"},{"location":"cloud-practitioner/module-6/m6_sec6/#best-practices","text":"Use Blue/Green deployments to minimize downtime. Monitor health and logs regularly to identify performance bottlenecks. Enable automatic scaling to handle variable traffic patterns. Automate environment creation using the Elastic Beanstalk CLI or CloudFormation. Secure your application using IAM, HTTPS, and network isolation. Use environment tagging to manage cost allocation. Regularly update platform versions for performance and security patches.","title":"\ud83e\udde0 Best Practices"},{"location":"cloud-practitioner/module-6/m6_sec6/#key-takeaways","text":"AWS Elastic Beanstalk is a fully managed PaaS for deploying web applications quickly and efficiently. It automatically handles provisioning, scaling, load balancing, and monitoring . Supports multiple languages, frameworks, and Docker containers . Developers retain full control over the underlying AWS resources. Deploy applications using rolling , immutable , or blue/green strategies for reliability. Integrates with CloudWatch , IAM , and VPC for security and observability. Ideal for teams that want speed, automation, and scalability without managing infrastructure.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec1/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 1\ufe0f\u20e3 Section 1: AWS Storage Overview \ud83d\udfe0 Introduction Storage is one of the foundational pillars of AWS cloud computing. AWS provides a variety of storage services that differ in how data is stored, accessed, managed, and priced. This section introduces the main types of storage in AWS and when to use each one. \ud83d\udcbe Storage Categories AWS offers three primary types of storage : Storage Type Service Examples Description Typical Use Cases \ud83e\udde9 Object Storage Amazon S3, S3 Glacier Stores data as objects (files + metadata) inside buckets. Optimized for scalability and durability. Backups, media storage, static websites, analytics, archives. \ud83d\udcbd Block Storage Amazon EBS, Instance Store Provides raw storage volumes that behave like physical hard drives. Low-latency access, ideal for databases. Databases, operating systems, transactional workloads. \ud83d\udcc1 File Storage Amazon EFS, Amazon FSx Offers shared file systems with standard file protocols (NFS, SMB). Shared applications, content management, enterprise workloads. \ud83e\udde9 Object Storage: Amazon S3 Amazon Simple Storage Service (Amazon S3) is AWS\u2019s object storage service designed for 99.999999999% (11 9s) durability and virtually unlimited scalability. Key characteristics: - Stores data as objects (each containing data, metadata, and a unique key). - Organized into buckets , which act as top-level containers. - Ideal for write-once, read-many scenarios. - Accessed via HTTPS endpoints or SDKs/APIs . Benefits: - Elastic scalability. - Designed for durability and high availability. - Integration with AWS services like Lambda, CloudFront, and Glue. - Multiple storage classes for cost optimization. \ud83e\udde0 Use case examples: Backups, log storage, static website hosting, data lakes, and archival. \ud83d\udcbd Block Storage: Amazon EBS Amazon Elastic Block Store (EBS) provides persistent block-level storage volumes for use with Amazon EC2 . Key characteristics: - Data is stored in fixed-size blocks, similar to traditional disks. - Low-latency access for read/write operations. - Each volume is automatically replicated within its Availability Zone. - Volumes can be attached to or detached from EC2 instances. Use cases: - Databases and transaction processing systems. - File systems requiring consistent performance. - Application data that must persist independently from EC2 instances. \ud83e\udde0 EBS vs. Instance Store: - EBS: Persistent and survives instance stops/restarts. - Instance Store: Temporary and deleted when the instance stops or terminates. \ud83d\udcc1 File Storage: Amazon EFS and Amazon FSx \ud83d\uddc2\ufe0f Amazon Elastic File System (EFS) Fully managed, scalable NFS file system. Accessible concurrently by multiple EC2 instances across multiple Availability Zones. Automatically grows and shrinks as files are added or removed. Ideal for Linux-based workloads that require shared file access. \ud83e\ude9f Amazon FSx Family Provides managed Windows and high-performance file systems: Service Description Amazon FSx for Windows File Server Fully managed Windows file system supporting SMB and Active Directory integration. Amazon FSx for Lustre High-performance file system for compute-intensive workloads (HPC, ML). Amazon FSx for NetApp ONTAP / OpenZFS Enterprise file systems with advanced data management features. \ud83e\udde0 Use case examples: EFS for Linux workloads, FSx for Windows or high-performance computing. \ud83c\udf10 Accessing Storage Services AWS storage services can be accessed in multiple ways: Access Method Example AWS Management Console Use graphical interface to create and manage resources. AWS CLI / SDKs / APIs Programmatic access for automation and integration. Mounting / Network Protocols NFS for EFS, SMB for FSx, HTTPS or SDKs for S3. Hybrid Services Storage Gateway, DataSync, or Snow Family devices. \ud83d\udd12 Security and Compliance All AWS storage services integrate with AWS Identity and Access Management (IAM) for authentication and authorization. Security features include: - Encryption at rest (SSE-S3, SSE-KMS, EBS encryption, etc.). - Encryption in transit (TLS). - Bucket policies , Access Control Lists (ACLs) , and VPC endpoints for network isolation. - Compliance with major frameworks such as ISO 27001 , SOC 1/2/3 , PCI-DSS , and HIPAA . \ud83e\uddee Cost Considerations AWS storage pricing is pay-as-you-go and depends on: - Amount of data stored. - Type of storage (S3 class, EBS volume type, FSx configuration, etc.). - Data access frequency (hot vs. cold). - Data retrieval and transfer costs. - Additional features (e.g., S3 replication or lifecycle transitions). \ud83e\udde0 Tip: Use AWS Cost Explorer and AWS Budgets to monitor and optimize storage costs. \ud83e\udde0 Key Takeaways AWS offers three core storage types : Object (S3) , Block (EBS) , and File (EFS/FSx) . Choose storage based on performance , durability , access patterns , and cost . S3 excels in scalability and durability for general-purpose storage. EBS provides low-latency block storage for EC2 instances. EFS/FSx offer shared file systems for Linux and Windows workloads. All storage services integrate with IAM , encryption , and CloudWatch for security and monitoring. Always apply cost optimization strategies using appropriate storage classes and lifecycle policies.","title":"\u25fd\ufe0f Section 1 - AWS Storage Overview"},{"location":"cloud-practitioner/module-7/m7_sec1/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec1/#1-section-1-aws-storage-overview","text":"","title":"1\ufe0f\u20e3 Section 1: AWS Storage Overview"},{"location":"cloud-practitioner/module-7/m7_sec1/#introduction","text":"Storage is one of the foundational pillars of AWS cloud computing. AWS provides a variety of storage services that differ in how data is stored, accessed, managed, and priced. This section introduces the main types of storage in AWS and when to use each one.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec1/#storage-categories","text":"AWS offers three primary types of storage : Storage Type Service Examples Description Typical Use Cases \ud83e\udde9 Object Storage Amazon S3, S3 Glacier Stores data as objects (files + metadata) inside buckets. Optimized for scalability and durability. Backups, media storage, static websites, analytics, archives. \ud83d\udcbd Block Storage Amazon EBS, Instance Store Provides raw storage volumes that behave like physical hard drives. Low-latency access, ideal for databases. Databases, operating systems, transactional workloads. \ud83d\udcc1 File Storage Amazon EFS, Amazon FSx Offers shared file systems with standard file protocols (NFS, SMB). Shared applications, content management, enterprise workloads.","title":"\ud83d\udcbe Storage Categories"},{"location":"cloud-practitioner/module-7/m7_sec1/#object-storage-amazon-s3","text":"Amazon Simple Storage Service (Amazon S3) is AWS\u2019s object storage service designed for 99.999999999% (11 9s) durability and virtually unlimited scalability. Key characteristics: - Stores data as objects (each containing data, metadata, and a unique key). - Organized into buckets , which act as top-level containers. - Ideal for write-once, read-many scenarios. - Accessed via HTTPS endpoints or SDKs/APIs . Benefits: - Elastic scalability. - Designed for durability and high availability. - Integration with AWS services like Lambda, CloudFront, and Glue. - Multiple storage classes for cost optimization. \ud83e\udde0 Use case examples: Backups, log storage, static website hosting, data lakes, and archival.","title":"\ud83e\udde9 Object Storage: Amazon S3"},{"location":"cloud-practitioner/module-7/m7_sec1/#block-storage-amazon-ebs","text":"Amazon Elastic Block Store (EBS) provides persistent block-level storage volumes for use with Amazon EC2 . Key characteristics: - Data is stored in fixed-size blocks, similar to traditional disks. - Low-latency access for read/write operations. - Each volume is automatically replicated within its Availability Zone. - Volumes can be attached to or detached from EC2 instances. Use cases: - Databases and transaction processing systems. - File systems requiring consistent performance. - Application data that must persist independently from EC2 instances. \ud83e\udde0 EBS vs. Instance Store: - EBS: Persistent and survives instance stops/restarts. - Instance Store: Temporary and deleted when the instance stops or terminates.","title":"\ud83d\udcbd Block Storage: Amazon EBS"},{"location":"cloud-practitioner/module-7/m7_sec1/#file-storage-amazon-efs-and-amazon-fsx","text":"","title":"\ud83d\udcc1 File Storage: Amazon EFS and Amazon FSx"},{"location":"cloud-practitioner/module-7/m7_sec1/#amazon-elastic-file-system-efs","text":"Fully managed, scalable NFS file system. Accessible concurrently by multiple EC2 instances across multiple Availability Zones. Automatically grows and shrinks as files are added or removed. Ideal for Linux-based workloads that require shared file access.","title":"\ud83d\uddc2\ufe0f Amazon Elastic File System (EFS)"},{"location":"cloud-practitioner/module-7/m7_sec1/#amazon-fsx-family","text":"Provides managed Windows and high-performance file systems: Service Description Amazon FSx for Windows File Server Fully managed Windows file system supporting SMB and Active Directory integration. Amazon FSx for Lustre High-performance file system for compute-intensive workloads (HPC, ML). Amazon FSx for NetApp ONTAP / OpenZFS Enterprise file systems with advanced data management features. \ud83e\udde0 Use case examples: EFS for Linux workloads, FSx for Windows or high-performance computing.","title":"\ud83e\ude9f Amazon FSx Family"},{"location":"cloud-practitioner/module-7/m7_sec1/#accessing-storage-services","text":"AWS storage services can be accessed in multiple ways: Access Method Example AWS Management Console Use graphical interface to create and manage resources. AWS CLI / SDKs / APIs Programmatic access for automation and integration. Mounting / Network Protocols NFS for EFS, SMB for FSx, HTTPS or SDKs for S3. Hybrid Services Storage Gateway, DataSync, or Snow Family devices.","title":"\ud83c\udf10 Accessing Storage Services"},{"location":"cloud-practitioner/module-7/m7_sec1/#security-and-compliance","text":"All AWS storage services integrate with AWS Identity and Access Management (IAM) for authentication and authorization. Security features include: - Encryption at rest (SSE-S3, SSE-KMS, EBS encryption, etc.). - Encryption in transit (TLS). - Bucket policies , Access Control Lists (ACLs) , and VPC endpoints for network isolation. - Compliance with major frameworks such as ISO 27001 , SOC 1/2/3 , PCI-DSS , and HIPAA .","title":"\ud83d\udd12 Security and Compliance"},{"location":"cloud-practitioner/module-7/m7_sec1/#cost-considerations","text":"AWS storage pricing is pay-as-you-go and depends on: - Amount of data stored. - Type of storage (S3 class, EBS volume type, FSx configuration, etc.). - Data access frequency (hot vs. cold). - Data retrieval and transfer costs. - Additional features (e.g., S3 replication or lifecycle transitions). \ud83e\udde0 Tip: Use AWS Cost Explorer and AWS Budgets to monitor and optimize storage costs.","title":"\ud83e\uddee Cost Considerations"},{"location":"cloud-practitioner/module-7/m7_sec1/#key-takeaways","text":"AWS offers three core storage types : Object (S3) , Block (EBS) , and File (EFS/FSx) . Choose storage based on performance , durability , access patterns , and cost . S3 excels in scalability and durability for general-purpose storage. EBS provides low-latency block storage for EC2 instances. EFS/FSx offer shared file systems for Linux and Windows workloads. All storage services integrate with IAM , encryption , and CloudWatch for security and monitoring. Always apply cost optimization strategies using appropriate storage classes and lifecycle policies.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec2/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 2\ufe0f\u20e3 Section 2: Amazon Simple Storage Service (Amazon S3) \ud83d\udfe0 Introduction Amazon Simple Storage Service (Amazon S3) is an object storage service designed for infinite scalability, high availability, and 11 9s (99.999999999%) durability . It allows you to store and retrieve any amount of data from anywhere on the web. S3 is the foundation of AWS\u2019s storage ecosystem \u2014 used for data lakes, backups, websites, analytics, archives, and more . \ud83d\udce6 Core Concepts Concept Description Bucket The top-level container for storing objects. Each bucket has a globally unique name and resides in a specific AWS Region. Object The fundamental storage entity, composed of data, metadata, and a unique key (object name). Key The unique identifier for an object within a bucket. Region Determines where your data is physically stored (affects latency, cost, and compliance). Prefix A logical grouping used to organize and retrieve objects efficiently. Metadata Descriptive information about an object (e.g., content type, encoding, owner, custom tags). \ud83e\udde0 Tip: You can store virtually unlimited objects in S3 \u2014 each up to 5 TB in size. \ud83d\udca1 Why Use Amazon S3 Designed for durability, scalability, and performance . Serverless \u2014 no infrastructure to manage. Accessed via HTTP(S) , AWS CLI , SDKs , or REST APIs . Integrates seamlessly with other AWS services: AWS Lambda for event-driven automation. CloudFront for content delivery. AWS Glue / Athena for analytics. Amazon Macie for sensitive data discovery. \ud83e\udde9 S3 Storage Classes Each S3 storage class is optimized for a different access pattern and cost profile. Storage Class Designed For Availability Durability Retrieval Time Use Cases S3 Standard Frequently accessed data 99.99% 99.999999999% Immediate Active data, websites, mobile apps S3 Intelligent-Tiering Unknown or variable access patterns 99.9% 99.999999999% Immediate Unpredictable workloads S3 Standard-IA (Infrequent Access) Infrequently accessed data 99.9% 99.999999999% Immediate Long-term storage, backups S3 One Zone-IA Infrequent access, single-AZ 99.5% 99.999999999% Immediate Secondary backups, easily recreated data S3 Glacier Instant Retrieval Archive data with immediate access 99.9% 99.999999999% Milliseconds Archival with occasional queries S3 Glacier Flexible Retrieval Archive data, retrieval in minutes\u2013hours 99.9% 99.999999999% Minutes to hours Compliance archives, large datasets S3 Glacier Deep Archive Long-term archival 99.9% 99.999999999% Hours (12\u201348h) Cold data, legal or historical archives \ud83e\udde0 Tip: Intelligent-Tiering automatically moves objects between access tiers, optimizing costs without manual effort. \ud83d\udd01 S3 Lifecycle Management Lifecycle rules allow you to automate transitions between storage classes or delete objects after a defined time. Example workflow: 1. Store new data in S3 Standard . 2. After 30 days, transition to Standard-IA . 3. After 90 days, move to Glacier Deep Archive . 4. After 365 days, automatically delete the object. Lifecycle configurations are policy-based , defined at the bucket or prefix level. \ud83c\udf0d Replication Amazon S3 supports automatic object replication across buckets for redundancy, compliance, and latency optimization. Type Description Typical Use Case Same-Region Replication (SRR) Copies objects between buckets in the same AWS Region. Backup, log aggregation, data redundancy. Cross-Region Replication (CRR) Copies objects across different Regions automatically. Disaster recovery, compliance, latency reduction. Replication can include metadata , ACLs , and optionally delete markers . You can filter which objects to replicate using prefix or tag-based rules. \ud83e\uddee Versioning Enables multiple versions of an object within a bucket. Protects against accidental deletions and overwrites. Works seamlessly with replication and lifecycle policies. Each version is uniquely identified and can be restored at any time. \u26a0\ufe0f Note: Enabling versioning increases storage costs because multiple copies are stored. \ud83e\uddf0 S3 Event Notifications S3 can trigger events in response to object-level operations (e.g., PUT, DELETE, COPY). You can configure notifications to: - Amazon SNS \u2192 Send alerts or fan-out messages. - Amazon SQS \u2192 Queue for processing. - AWS Lambda \u2192 Run code automatically when an event occurs. \ud83e\udde0 Example: Trigger an image-resizing Lambda function whenever a new file is uploaded. \ud83d\udd10 Security and Access Control Security in S3 is managed at multiple levels: 1. IAM Policies Define permissions for users, groups, or roles. Specify allowed actions (e.g., s3:GetObject , s3:PutObject ). 2. Bucket Policies Resource-based policies attached directly to a bucket. Control access for external accounts or applications. 3. Access Control Lists (ACLs) Legacy method for granting fine-grained access to individual objects or buckets. Best practice: use IAM or bucket policies instead. 4. Block Public Access Global setting that prevents accidental public exposure of buckets or objects. 5. Encryption Type Description SSE-S3 Server-side encryption with AWS-managed keys. SSE-KMS Encryption using AWS Key Management Service (KMS). SSE-C Customer-managed encryption keys. Client-side encryption Encryption done before data upload. \ud83d\udcca Monitoring and Logging Amazon CloudWatch Metrics: Monitor bucket-level metrics such as request count, latency, and errors. S3 Server Access Logging: Tracks access requests for audit and analysis. AWS CloudTrail: Logs all API calls to detect unauthorized activity. S3 Storage Lens: Provides organization-wide insights into storage usage and activity trends. \ud83e\udde0 Tip: Combine S3 Storage Lens with Cost Explorer to track usage and optimize storage efficiency. \ud83d\udcb0 Cost Factors Your total S3 cost depends on: - Storage class (Standard vs. Glacier). - Number of requests (PUT, GET, COPY, DELETE). - Data transfer out to the Internet or other Regions. - Lifecycle transitions and replication traffic. - Data retrieval for infrequent-access classes. Use S3 Analytics and Intelligent-Tiering to identify and transition infrequently accessed data automatically. \ud83e\udde0 Key Takeaways Amazon S3 is a highly durable, scalable object storage service . Organizes data into buckets and objects , with support for versioning , replication , and lifecycle rules . Multiple storage classes balance cost and access needs \u2014 from Standard to Glacier Deep Archive . S3 integrates deeply with AWS services like Lambda , CloudFront , and Athena . Security is layered: IAM policies , bucket policies , encryption , and Block Public Access . Use Storage Lens , CloudTrail , and Cost Explorer for visibility and cost control. Follow best practices : enable versioning, apply lifecycle policies, and protect your buckets from public exposure.","title":"\u25fd\ufe0f Section 2 - Amazon Simple Storage Service (Amazon S3)"},{"location":"cloud-practitioner/module-7/m7_sec2/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec2/#2-section-2-amazon-simple-storage-service-amazon-s3","text":"","title":"2\ufe0f\u20e3 Section 2: Amazon Simple Storage Service (Amazon S3)"},{"location":"cloud-practitioner/module-7/m7_sec2/#introduction","text":"Amazon Simple Storage Service (Amazon S3) is an object storage service designed for infinite scalability, high availability, and 11 9s (99.999999999%) durability . It allows you to store and retrieve any amount of data from anywhere on the web. S3 is the foundation of AWS\u2019s storage ecosystem \u2014 used for data lakes, backups, websites, analytics, archives, and more .","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec2/#core-concepts","text":"Concept Description Bucket The top-level container for storing objects. Each bucket has a globally unique name and resides in a specific AWS Region. Object The fundamental storage entity, composed of data, metadata, and a unique key (object name). Key The unique identifier for an object within a bucket. Region Determines where your data is physically stored (affects latency, cost, and compliance). Prefix A logical grouping used to organize and retrieve objects efficiently. Metadata Descriptive information about an object (e.g., content type, encoding, owner, custom tags). \ud83e\udde0 Tip: You can store virtually unlimited objects in S3 \u2014 each up to 5 TB in size.","title":"\ud83d\udce6 Core Concepts"},{"location":"cloud-practitioner/module-7/m7_sec2/#why-use-amazon-s3","text":"Designed for durability, scalability, and performance . Serverless \u2014 no infrastructure to manage. Accessed via HTTP(S) , AWS CLI , SDKs , or REST APIs . Integrates seamlessly with other AWS services: AWS Lambda for event-driven automation. CloudFront for content delivery. AWS Glue / Athena for analytics. Amazon Macie for sensitive data discovery.","title":"\ud83d\udca1 Why Use Amazon S3"},{"location":"cloud-practitioner/module-7/m7_sec2/#s3-storage-classes","text":"Each S3 storage class is optimized for a different access pattern and cost profile. Storage Class Designed For Availability Durability Retrieval Time Use Cases S3 Standard Frequently accessed data 99.99% 99.999999999% Immediate Active data, websites, mobile apps S3 Intelligent-Tiering Unknown or variable access patterns 99.9% 99.999999999% Immediate Unpredictable workloads S3 Standard-IA (Infrequent Access) Infrequently accessed data 99.9% 99.999999999% Immediate Long-term storage, backups S3 One Zone-IA Infrequent access, single-AZ 99.5% 99.999999999% Immediate Secondary backups, easily recreated data S3 Glacier Instant Retrieval Archive data with immediate access 99.9% 99.999999999% Milliseconds Archival with occasional queries S3 Glacier Flexible Retrieval Archive data, retrieval in minutes\u2013hours 99.9% 99.999999999% Minutes to hours Compliance archives, large datasets S3 Glacier Deep Archive Long-term archival 99.9% 99.999999999% Hours (12\u201348h) Cold data, legal or historical archives \ud83e\udde0 Tip: Intelligent-Tiering automatically moves objects between access tiers, optimizing costs without manual effort.","title":"\ud83e\udde9 S3 Storage Classes"},{"location":"cloud-practitioner/module-7/m7_sec2/#s3-lifecycle-management","text":"Lifecycle rules allow you to automate transitions between storage classes or delete objects after a defined time. Example workflow: 1. Store new data in S3 Standard . 2. After 30 days, transition to Standard-IA . 3. After 90 days, move to Glacier Deep Archive . 4. After 365 days, automatically delete the object. Lifecycle configurations are policy-based , defined at the bucket or prefix level.","title":"\ud83d\udd01 S3 Lifecycle Management"},{"location":"cloud-practitioner/module-7/m7_sec2/#replication","text":"Amazon S3 supports automatic object replication across buckets for redundancy, compliance, and latency optimization. Type Description Typical Use Case Same-Region Replication (SRR) Copies objects between buckets in the same AWS Region. Backup, log aggregation, data redundancy. Cross-Region Replication (CRR) Copies objects across different Regions automatically. Disaster recovery, compliance, latency reduction. Replication can include metadata , ACLs , and optionally delete markers . You can filter which objects to replicate using prefix or tag-based rules.","title":"\ud83c\udf0d Replication"},{"location":"cloud-practitioner/module-7/m7_sec2/#versioning","text":"Enables multiple versions of an object within a bucket. Protects against accidental deletions and overwrites. Works seamlessly with replication and lifecycle policies. Each version is uniquely identified and can be restored at any time. \u26a0\ufe0f Note: Enabling versioning increases storage costs because multiple copies are stored.","title":"\ud83e\uddee Versioning"},{"location":"cloud-practitioner/module-7/m7_sec2/#s3-event-notifications","text":"S3 can trigger events in response to object-level operations (e.g., PUT, DELETE, COPY). You can configure notifications to: - Amazon SNS \u2192 Send alerts or fan-out messages. - Amazon SQS \u2192 Queue for processing. - AWS Lambda \u2192 Run code automatically when an event occurs. \ud83e\udde0 Example: Trigger an image-resizing Lambda function whenever a new file is uploaded.","title":"\ud83e\uddf0 S3 Event Notifications"},{"location":"cloud-practitioner/module-7/m7_sec2/#security-and-access-control","text":"Security in S3 is managed at multiple levels:","title":"\ud83d\udd10 Security and Access Control"},{"location":"cloud-practitioner/module-7/m7_sec2/#1-iam-policies","text":"Define permissions for users, groups, or roles. Specify allowed actions (e.g., s3:GetObject , s3:PutObject ).","title":"1. IAM Policies"},{"location":"cloud-practitioner/module-7/m7_sec2/#2-bucket-policies","text":"Resource-based policies attached directly to a bucket. Control access for external accounts or applications.","title":"2. Bucket Policies"},{"location":"cloud-practitioner/module-7/m7_sec2/#3-access-control-lists-acls","text":"Legacy method for granting fine-grained access to individual objects or buckets. Best practice: use IAM or bucket policies instead.","title":"3. Access Control Lists (ACLs)"},{"location":"cloud-practitioner/module-7/m7_sec2/#4-block-public-access","text":"Global setting that prevents accidental public exposure of buckets or objects.","title":"4. Block Public Access"},{"location":"cloud-practitioner/module-7/m7_sec2/#5-encryption","text":"Type Description SSE-S3 Server-side encryption with AWS-managed keys. SSE-KMS Encryption using AWS Key Management Service (KMS). SSE-C Customer-managed encryption keys. Client-side encryption Encryption done before data upload.","title":"5. Encryption"},{"location":"cloud-practitioner/module-7/m7_sec2/#monitoring-and-logging","text":"Amazon CloudWatch Metrics: Monitor bucket-level metrics such as request count, latency, and errors. S3 Server Access Logging: Tracks access requests for audit and analysis. AWS CloudTrail: Logs all API calls to detect unauthorized activity. S3 Storage Lens: Provides organization-wide insights into storage usage and activity trends. \ud83e\udde0 Tip: Combine S3 Storage Lens with Cost Explorer to track usage and optimize storage efficiency.","title":"\ud83d\udcca Monitoring and Logging"},{"location":"cloud-practitioner/module-7/m7_sec2/#cost-factors","text":"Your total S3 cost depends on: - Storage class (Standard vs. Glacier). - Number of requests (PUT, GET, COPY, DELETE). - Data transfer out to the Internet or other Regions. - Lifecycle transitions and replication traffic. - Data retrieval for infrequent-access classes. Use S3 Analytics and Intelligent-Tiering to identify and transition infrequently accessed data automatically.","title":"\ud83d\udcb0 Cost Factors"},{"location":"cloud-practitioner/module-7/m7_sec2/#key-takeaways","text":"Amazon S3 is a highly durable, scalable object storage service . Organizes data into buckets and objects , with support for versioning , replication , and lifecycle rules . Multiple storage classes balance cost and access needs \u2014 from Standard to Glacier Deep Archive . S3 integrates deeply with AWS services like Lambda , CloudFront , and Athena . Security is layered: IAM policies , bucket policies , encryption , and Block Public Access . Use Storage Lens , CloudTrail , and Cost Explorer for visibility and cost control. Follow best practices : enable versioning, apply lifecycle policies, and protect your buckets from public exposure.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec3/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 3\ufe0f\u20e3 Section 3: Amazon Elastic Block Store (Amazon EBS) and Instance Store \ud83d\udfe0 Introduction Applications running on Amazon EC2 instances often require low-latency, high-performance, and persistent storage. AWS provides two main block storage options for EC2 instances: Amazon Elastic Block Store (EBS) \u2013 Persistent, durable block storage that remains even after an instance is stopped or terminated. Instance Store \u2013 Temporary, physically attached storage that is deleted when the instance stops or terminates. \ud83d\udcbd Amazon Elastic Block Store (EBS) Amazon EBS provides persistent block-level storage volumes for EC2 instances. Each volume is automatically replicated within its Availability Zone to protect against hardware failure. EBS volumes behave like raw, unformatted block devices that you can format and mount as file systems or use for databases and applications. \u2699\ufe0f EBS Volume Features Feature Description Durability Data is automatically replicated within an Availability Zone. Persistence EBS volumes persist independently from EC2 instances. Performance Supports different volume types for various IOPS and throughput needs. Scalability Volumes can be dynamically resized or reconfigured. Backup Snapshots can be created and stored in Amazon S3. Encryption Supports encryption at rest using AWS KMS, and encryption in transit. \ud83e\uddee EBS Volume Types AWS offers several EBS volume types optimized for performance and cost : Type Category Use Case Performance gp3 General Purpose SSD Default for most workloads; balance of price and performance. Baseline: 3,000 IOPS (independent of volume size). gp2 General Purpose SSD (legacy) Boot volumes, small databases, dev/test environments. Performance scales with volume size (3 IOPS/GB). io2 / io2 Block Express Provisioned IOPS SSD Critical databases or workloads requiring sustained IOPS. Up to 256,000 IOPS and single-digit millisecond latency. st1 Throughput Optimized HDD Big data, data warehouses, and log processing. High throughput, lower cost; not for random I/O. sc1 Cold HDD Infrequently accessed data with lowest cost. Lowest performance; sequential I/O workloads only. \ud83e\udde0 Tip: For most general workloads, gp3 is the recommended default volume type. \ud83d\udce6 EBS Snapshots Snapshots provide point-in-time backups of EBS volumes, stored in Amazon S3 . Incremental: only changed blocks are saved, reducing time and cost. Can be used to: Create new volumes. Restore data after failure. Copy to another Region for disaster recovery. Support Fast Snapshot Restore (FSR) for faster initialization. \ud83e\udde0 Example: Use snapshots for backup automation or as golden images for deployment pipelines. \ud83d\udd04 Elastic Volumes EBS allows you to modify volume characteristics without downtime : - Increase volume size. - Change type (e.g., gp2 \u2192 gp3). - Adjust performance (IOPS, throughput). This enables real-time optimization of storage performance and cost. \ud83d\udd10 EBS Encryption EBS integrates with AWS Key Management Service (KMS) to provide encryption capabilities. Encryption benefits: - Protects data at rest, in transit, and in snapshots. - Automatically encrypts data moving between volume and instance. - Snapshots of encrypted volumes are automatically encrypted. - Copying encrypted snapshots retains encryption. You can also use customer-managed keys (CMKs) for tighter security control. \u26a1 Performance and Monitoring EBS performance depends on: - Volume type and size - Instance type and network bandwidth - Queue depth (number of I/O operations in progress) Use Amazon CloudWatch metrics to monitor: - Volume read/write IOPS - Throughput - Latency - Burst balance metrics \ud83e\udde0 Tip: Use EBS-optimized instances to ensure dedicated bandwidth for storage traffic. \ud83e\udde9 Instance Store (Ephemeral Storage) Instance Store provides temporary block-level storage physically attached to the EC2 host machine. Characteristics: - Very high I/O performance (because it\u2019s local). - Data is lost when the instance stops, hibernates, or terminates. - Cannot be detached or backed up. - No redundancy (hardware failure means data loss). - Available only for certain instance types (e.g., i3, d2, h1, etc.). Use cases: - Temporary caches or buffers. - Scratch data or intermediate processing. - Replicated, stateless architectures where data loss is acceptable. \ud83e\udde0 Best Practice: Never store critical data on Instance Store without replication or backup. \ud83e\udde0 Key Takeaways Amazon EBS provides persistent , durable, and flexible block storage for EC2 instances. Choose the right volume type based on performance (IOPS, throughput) and cost requirements. Snapshots and encryption (via KMS) ensure data protection and compliance. Elastic Volumes allow dynamic scaling without downtime. Instance Store offers temporary , high-performance storage \u2014 ideal for caches or transient workloads. Monitor performance using CloudWatch and use EBS-optimized instances for consistent throughput.","title":"\u25fd\ufe0f Section 3 - Amazon Elastic Block Store (Amazon EBS) and Instance Store"},{"location":"cloud-practitioner/module-7/m7_sec3/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec3/#3-section-3-amazon-elastic-block-store-amazon-ebs-and-instance-store","text":"","title":"3\ufe0f\u20e3 Section 3: Amazon Elastic Block Store (Amazon EBS) and Instance Store"},{"location":"cloud-practitioner/module-7/m7_sec3/#introduction","text":"Applications running on Amazon EC2 instances often require low-latency, high-performance, and persistent storage. AWS provides two main block storage options for EC2 instances: Amazon Elastic Block Store (EBS) \u2013 Persistent, durable block storage that remains even after an instance is stopped or terminated. Instance Store \u2013 Temporary, physically attached storage that is deleted when the instance stops or terminates.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec3/#amazon-elastic-block-store-ebs","text":"Amazon EBS provides persistent block-level storage volumes for EC2 instances. Each volume is automatically replicated within its Availability Zone to protect against hardware failure. EBS volumes behave like raw, unformatted block devices that you can format and mount as file systems or use for databases and applications.","title":"\ud83d\udcbd Amazon Elastic Block Store (EBS)"},{"location":"cloud-practitioner/module-7/m7_sec3/#ebs-volume-features","text":"Feature Description Durability Data is automatically replicated within an Availability Zone. Persistence EBS volumes persist independently from EC2 instances. Performance Supports different volume types for various IOPS and throughput needs. Scalability Volumes can be dynamically resized or reconfigured. Backup Snapshots can be created and stored in Amazon S3. Encryption Supports encryption at rest using AWS KMS, and encryption in transit.","title":"\u2699\ufe0f EBS Volume Features"},{"location":"cloud-practitioner/module-7/m7_sec3/#ebs-volume-types","text":"AWS offers several EBS volume types optimized for performance and cost : Type Category Use Case Performance gp3 General Purpose SSD Default for most workloads; balance of price and performance. Baseline: 3,000 IOPS (independent of volume size). gp2 General Purpose SSD (legacy) Boot volumes, small databases, dev/test environments. Performance scales with volume size (3 IOPS/GB). io2 / io2 Block Express Provisioned IOPS SSD Critical databases or workloads requiring sustained IOPS. Up to 256,000 IOPS and single-digit millisecond latency. st1 Throughput Optimized HDD Big data, data warehouses, and log processing. High throughput, lower cost; not for random I/O. sc1 Cold HDD Infrequently accessed data with lowest cost. Lowest performance; sequential I/O workloads only. \ud83e\udde0 Tip: For most general workloads, gp3 is the recommended default volume type.","title":"\ud83e\uddee EBS Volume Types"},{"location":"cloud-practitioner/module-7/m7_sec3/#ebs-snapshots","text":"Snapshots provide point-in-time backups of EBS volumes, stored in Amazon S3 . Incremental: only changed blocks are saved, reducing time and cost. Can be used to: Create new volumes. Restore data after failure. Copy to another Region for disaster recovery. Support Fast Snapshot Restore (FSR) for faster initialization. \ud83e\udde0 Example: Use snapshots for backup automation or as golden images for deployment pipelines.","title":"\ud83d\udce6 EBS Snapshots"},{"location":"cloud-practitioner/module-7/m7_sec3/#elastic-volumes","text":"EBS allows you to modify volume characteristics without downtime : - Increase volume size. - Change type (e.g., gp2 \u2192 gp3). - Adjust performance (IOPS, throughput). This enables real-time optimization of storage performance and cost.","title":"\ud83d\udd04 Elastic Volumes"},{"location":"cloud-practitioner/module-7/m7_sec3/#ebs-encryption","text":"EBS integrates with AWS Key Management Service (KMS) to provide encryption capabilities. Encryption benefits: - Protects data at rest, in transit, and in snapshots. - Automatically encrypts data moving between volume and instance. - Snapshots of encrypted volumes are automatically encrypted. - Copying encrypted snapshots retains encryption. You can also use customer-managed keys (CMKs) for tighter security control.","title":"\ud83d\udd10 EBS Encryption"},{"location":"cloud-practitioner/module-7/m7_sec3/#performance-and-monitoring","text":"EBS performance depends on: - Volume type and size - Instance type and network bandwidth - Queue depth (number of I/O operations in progress) Use Amazon CloudWatch metrics to monitor: - Volume read/write IOPS - Throughput - Latency - Burst balance metrics \ud83e\udde0 Tip: Use EBS-optimized instances to ensure dedicated bandwidth for storage traffic.","title":"\u26a1 Performance and Monitoring"},{"location":"cloud-practitioner/module-7/m7_sec3/#instance-store-ephemeral-storage","text":"Instance Store provides temporary block-level storage physically attached to the EC2 host machine. Characteristics: - Very high I/O performance (because it\u2019s local). - Data is lost when the instance stops, hibernates, or terminates. - Cannot be detached or backed up. - No redundancy (hardware failure means data loss). - Available only for certain instance types (e.g., i3, d2, h1, etc.). Use cases: - Temporary caches or buffers. - Scratch data or intermediate processing. - Replicated, stateless architectures where data loss is acceptable. \ud83e\udde0 Best Practice: Never store critical data on Instance Store without replication or backup.","title":"\ud83e\udde9 Instance Store (Ephemeral Storage)"},{"location":"cloud-practitioner/module-7/m7_sec3/#key-takeaways","text":"Amazon EBS provides persistent , durable, and flexible block storage for EC2 instances. Choose the right volume type based on performance (IOPS, throughput) and cost requirements. Snapshots and encryption (via KMS) ensure data protection and compliance. Elastic Volumes allow dynamic scaling without downtime. Instance Store offers temporary , high-performance storage \u2014 ideal for caches or transient workloads. Monitor performance using CloudWatch and use EBS-optimized instances for consistent throughput.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec4/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 4\ufe0f\u20e3 Section 4: File Storage \u2013 Amazon EFS and Amazon FSx \ud83d\udfe0 Introduction While object and block storage are excellent for many workloads, some applications require shared access to files using standard file system protocols. AWS provides fully managed file storage services that deliver scalability, availability, and performance for both Linux and Windows workloads. The two primary services are: - Amazon Elastic File System (Amazon EFS) \u2013 NFS-based, serverless file storage for Linux workloads. - Amazon FSx \u2013 Managed file systems built on popular enterprise technologies like Windows File Server, Lustre, and NetApp ONTAP. \ud83d\udcc1 Amazon Elastic File System (EFS) Amazon EFS provides scalable, elastic, NFS-based file storage that can be shared across multiple EC2 instances and Availability Zones. \u2699\ufe0f Core Characteristics Fully managed \u2014 no provisioning or capacity planning. Elastic \u2014 automatically grows and shrinks as you add or remove files. Accessible across multiple AZs in a Region. POSIX-compliant , ideal for Linux-based applications. Provides low-latency file access with high availability . \ud83e\udde9 Architecture Overview EFS stores data redundantly across multiple Availability Zones, providing high durability. Each instance mounts the same file system using a standard NFS (Network File System) protocol. \u2699\ufe0f EFS Performance and Storage Classes EFS offers performance and storage options to balance cost and speed. Mode / Class Description Use Case Performance Modes General Purpose Default mode for most workloads. Web servers, CMS, development environments. Max I/O Optimized for highly parallel workloads. Big data analytics, HPC, media processing. Throughput Modes Bursting Automatically scales throughput based on file size. General-purpose workloads. Provisioned Set fixed throughput independent of storage size. Workloads needing consistent throughput. Elastic Automatically adjusts throughput for unpredictable workloads. Dynamic applications. Storage Classes EFS Standard Multi-AZ, high-performance storage. Frequently accessed data. EFS Infrequent Access (IA) Lower-cost tier for less frequently used files. Backups, archived data. \ud83e\udde0 Tip: You can use EFS Lifecycle Management to automatically move files to IA storage after a set period of inactivity. \ud83d\udd10 Security in EFS IAM policies and resource-based permissions control access. VPC security groups and network ACLs restrict traffic. Encryption at rest using AWS KMS. Encryption in transit using TLS. Integration with AWS Backup for automated backups. \ud83e\udde0 Best Practice: Combine IAM + NFS permissions for layered security. \ud83d\udcb0 EFS Cost Optimization Pay only for the storage used (no minimums). Save up to 90% with EFS Infrequent Access (IA) . Enable Lifecycle Policies to transition inactive files automatically. Use Access Points to simplify multi-application management. \ud83e\ude9f Amazon FSx Family AWS FSx provides fully managed file systems built on popular enterprise and HPC technologies . Each FSx service is optimized for a specific workload or platform. Service Description Ideal For Amazon FSx for Windows File Server Native Windows file system using SMB protocol and integrated with Microsoft Active Directory . Supports user quotas, shadow copies, and DFS namespaces. Windows applications, home directories, lift-and-shift migrations. Amazon FSx for Lustre High-performance, POSIX-compliant file system for compute-intensive workloads. Can link directly to Amazon S3 buckets for fast data access. Machine learning, financial modeling, big data, media processing. Amazon FSx for NetApp ONTAP Enterprise-grade file system supporting multi-protocol (NFS, SMB, iSCSI) , cloning, snapshots, and tiering to S3. Enterprise workloads needing advanced storage management. Amazon FSx for OpenZFS Open-source file system offering low-latency performance and snapshot capabilities. Low-latency, Linux workloads, and open-source environments. \ud83d\udd10 Security and Integration in FSx Amazon FSx integrates with several AWS services for security and management: Active Directory (AD) integration for access control. IAM and AWS Key Management Service (KMS) for encryption and access policies. VPC integration for secure network isolation. AWS Backup support for centralized backups. Monitoring with CloudWatch for file system metrics. \ud83e\udde0 Tip: Choose FSx based on your existing environment \u2014 Windows, Linux, HPC, or enterprise data management. \ud83e\udde0 Comparing EFS and FSx Feature Amazon EFS Amazon FSx Protocol NFS SMB, NFS, Lustre, iSCSI (depends on FSx type) OS Compatibility Linux Windows and Linux (depending on variant) Scalability Automatically scales Fixed or provisioned based on service Use Cases Shared Linux workloads, container storage, web apps Windows apps, HPC, analytics, enterprise workloads Cost Optimization Lifecycle management, IA tiering Tiering to S3 (FSx ONTAP, FSx Lustre) Availability Multi-AZ Varies (Multi-AZ or single-AZ options) \ud83e\udde0 Key Takeaways Amazon EFS provides elastic, NFS-based file storage for Linux workloads \u2014 automatically scales, multi-AZ, and pay-for-what-you-use. Amazon FSx offers managed file systems built on Windows File Server, Lustre, NetApp ONTAP, and OpenZFS . Use EFS for Linux web apps, analytics, and content sharing. Use FSx for Windows, HPC, or enterprise file workloads. Both integrate with IAM , KMS , VPC , and AWS Backup for security and data protection. Apply lifecycle policies or tiering to S3 to reduce storage costs.","title":"\u25fd\ufe0f Section 4 - File Storage \u2013 Amazon EFS and Amazon FSx"},{"location":"cloud-practitioner/module-7/m7_sec4/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec4/#4-section-4-file-storage-amazon-efs-and-amazon-fsx","text":"","title":"4\ufe0f\u20e3 Section 4: File Storage \u2013 Amazon EFS and Amazon FSx"},{"location":"cloud-practitioner/module-7/m7_sec4/#introduction","text":"While object and block storage are excellent for many workloads, some applications require shared access to files using standard file system protocols. AWS provides fully managed file storage services that deliver scalability, availability, and performance for both Linux and Windows workloads. The two primary services are: - Amazon Elastic File System (Amazon EFS) \u2013 NFS-based, serverless file storage for Linux workloads. - Amazon FSx \u2013 Managed file systems built on popular enterprise technologies like Windows File Server, Lustre, and NetApp ONTAP.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec4/#amazon-elastic-file-system-efs","text":"Amazon EFS provides scalable, elastic, NFS-based file storage that can be shared across multiple EC2 instances and Availability Zones.","title":"\ud83d\udcc1 Amazon Elastic File System (EFS)"},{"location":"cloud-practitioner/module-7/m7_sec4/#core-characteristics","text":"Fully managed \u2014 no provisioning or capacity planning. Elastic \u2014 automatically grows and shrinks as you add or remove files. Accessible across multiple AZs in a Region. POSIX-compliant , ideal for Linux-based applications. Provides low-latency file access with high availability .","title":"\u2699\ufe0f Core Characteristics"},{"location":"cloud-practitioner/module-7/m7_sec4/#architecture-overview","text":"EFS stores data redundantly across multiple Availability Zones, providing high durability. Each instance mounts the same file system using a standard NFS (Network File System) protocol.","title":"\ud83e\udde9 Architecture Overview"},{"location":"cloud-practitioner/module-7/m7_sec4/#efs-performance-and-storage-classes","text":"EFS offers performance and storage options to balance cost and speed. Mode / Class Description Use Case Performance Modes General Purpose Default mode for most workloads. Web servers, CMS, development environments. Max I/O Optimized for highly parallel workloads. Big data analytics, HPC, media processing. Throughput Modes Bursting Automatically scales throughput based on file size. General-purpose workloads. Provisioned Set fixed throughput independent of storage size. Workloads needing consistent throughput. Elastic Automatically adjusts throughput for unpredictable workloads. Dynamic applications. Storage Classes EFS Standard Multi-AZ, high-performance storage. Frequently accessed data. EFS Infrequent Access (IA) Lower-cost tier for less frequently used files. Backups, archived data. \ud83e\udde0 Tip: You can use EFS Lifecycle Management to automatically move files to IA storage after a set period of inactivity.","title":"\u2699\ufe0f EFS Performance and Storage Classes"},{"location":"cloud-practitioner/module-7/m7_sec4/#security-in-efs","text":"IAM policies and resource-based permissions control access. VPC security groups and network ACLs restrict traffic. Encryption at rest using AWS KMS. Encryption in transit using TLS. Integration with AWS Backup for automated backups. \ud83e\udde0 Best Practice: Combine IAM + NFS permissions for layered security.","title":"\ud83d\udd10 Security in EFS"},{"location":"cloud-practitioner/module-7/m7_sec4/#efs-cost-optimization","text":"Pay only for the storage used (no minimums). Save up to 90% with EFS Infrequent Access (IA) . Enable Lifecycle Policies to transition inactive files automatically. Use Access Points to simplify multi-application management.","title":"\ud83d\udcb0 EFS Cost Optimization"},{"location":"cloud-practitioner/module-7/m7_sec4/#amazon-fsx-family","text":"AWS FSx provides fully managed file systems built on popular enterprise and HPC technologies . Each FSx service is optimized for a specific workload or platform. Service Description Ideal For Amazon FSx for Windows File Server Native Windows file system using SMB protocol and integrated with Microsoft Active Directory . Supports user quotas, shadow copies, and DFS namespaces. Windows applications, home directories, lift-and-shift migrations. Amazon FSx for Lustre High-performance, POSIX-compliant file system for compute-intensive workloads. Can link directly to Amazon S3 buckets for fast data access. Machine learning, financial modeling, big data, media processing. Amazon FSx for NetApp ONTAP Enterprise-grade file system supporting multi-protocol (NFS, SMB, iSCSI) , cloning, snapshots, and tiering to S3. Enterprise workloads needing advanced storage management. Amazon FSx for OpenZFS Open-source file system offering low-latency performance and snapshot capabilities. Low-latency, Linux workloads, and open-source environments.","title":"\ud83e\ude9f Amazon FSx Family"},{"location":"cloud-practitioner/module-7/m7_sec4/#security-and-integration-in-fsx","text":"Amazon FSx integrates with several AWS services for security and management: Active Directory (AD) integration for access control. IAM and AWS Key Management Service (KMS) for encryption and access policies. VPC integration for secure network isolation. AWS Backup support for centralized backups. Monitoring with CloudWatch for file system metrics. \ud83e\udde0 Tip: Choose FSx based on your existing environment \u2014 Windows, Linux, HPC, or enterprise data management.","title":"\ud83d\udd10 Security and Integration in FSx"},{"location":"cloud-practitioner/module-7/m7_sec4/#comparing-efs-and-fsx","text":"Feature Amazon EFS Amazon FSx Protocol NFS SMB, NFS, Lustre, iSCSI (depends on FSx type) OS Compatibility Linux Windows and Linux (depending on variant) Scalability Automatically scales Fixed or provisioned based on service Use Cases Shared Linux workloads, container storage, web apps Windows apps, HPC, analytics, enterprise workloads Cost Optimization Lifecycle management, IA tiering Tiering to S3 (FSx ONTAP, FSx Lustre) Availability Multi-AZ Varies (Multi-AZ or single-AZ options)","title":"\ud83e\udde0 Comparing EFS and FSx"},{"location":"cloud-practitioner/module-7/m7_sec4/#key-takeaways","text":"Amazon EFS provides elastic, NFS-based file storage for Linux workloads \u2014 automatically scales, multi-AZ, and pay-for-what-you-use. Amazon FSx offers managed file systems built on Windows File Server, Lustre, NetApp ONTAP, and OpenZFS . Use EFS for Linux web apps, analytics, and content sharing. Use FSx for Windows, HPC, or enterprise file workloads. Both integrate with IAM , KMS , VPC , and AWS Backup for security and data protection. Apply lifecycle policies or tiering to S3 to reduce storage costs.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec5/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 5\ufe0f\u20e3 Section 5: Hybrid and Data Transfer Services \ud83d\udfe0 Introduction Not all workloads begin in the cloud. Many organizations still store large amounts of data on-premises or in edge locations . AWS provides multiple services to move, extend, or integrate on-premises storage with the AWS Cloud \u2014 ensuring flexibility, speed, and security. This section focuses on: - Hybrid storage (integrating on-prem environments with AWS). - Data migration and transfer services for online and offline use cases. \ud83c\udfe0 AWS Storage Gateway AWS Storage Gateway is a hybrid cloud storage service that connects on-premises environments with AWS cloud storage. It enables seamless use of AWS storage for backup, archiving, and disaster recovery, while maintaining local performance. \ud83d\udd27 Types of Gateways Type Protocol Backed by Use Case File Gateway NFS / SMB Amazon S3 Store and retrieve files as S3 objects using local cache for fast access. Volume Gateway iSCSI Amazon EBS snapshots Present block storage volumes to on-prem servers; asynchronously back up to AWS. Tape Gateway Virtual Tape Library (VTL) Amazon S3 / Glacier Replace physical tape infrastructure for cost-effective, durable cloud backups. \u2699\ufe0f Key Features Local caching for low-latency access. Secure, encrypted transfer to AWS. Integration with AWS Backup for centralized management. Compression and deduplication to optimize bandwidth. \ud83e\udde0 Tip: Use Storage Gateway for hybrid workloads , tape replacement , and data replication without changing existing applications. \u2744\ufe0f AWS Snow Family The AWS Snow Family provides physical devices to move or process data in environments with limited or no Internet connectivity. These devices are shipped to customers, filled with data, and returned to AWS for ingestion into the cloud. \ud83d\udce6 Snow Family Devices Device Capacity Use Case AWS Snowcone Up to 8 TB (small, portable) Edge computing, IoT, remote data collection. AWS Snowball Edge (Storage / Compute Optimized) 80 TB\u2013210 TB Large-scale data transfer or local compute in disconnected environments. AWS Snowmobile Up to 100 PB (semi-truck size) Massive data migrations (e.g., entire data centers). \u2699\ufe0f Key Features Offline data transfer for petabyte-scale migrations. Edge compute capability (Snowcone, Snowball Edge) using AWS IoT Greengrass or EC2-compatible instances. Ruggedized for harsh or remote environments. Encryption using AWS Key Management Service (KMS). \ud83e\udde0 Example: A research vessel uses Snowcone to collect and process ocean data before syncing to S3 once back online. \u26a1 AWS DataSync AWS DataSync is an online data transfer service that simplifies, automates, and accelerates moving large amounts of data between on-premises systems and AWS storage. \ud83d\udd27 Key Capabilities Transfers data 10x faster than traditional tools (e.g., rsync). Supports data transfer between: On-premises storage \u2192 Amazon S3 , EFS , or FSx . AWS services \u2192 between Regions or Accounts. Handles encryption, scheduling, verification , and monitoring automatically. \ud83e\uddf0 Use Cases Cloud migration and hybrid data synchronization. Data replication for analytics or backup. Automated movement of data between environments. \ud83e\udde0 Tip: Use DataSync when you need continuous, secure, and fast online data transfer at scale. \ud83d\udd01 AWS Transfer Family AWS Transfer Family provides fully managed file transfer protocols to move files into and out of AWS storage services. \u2699\ufe0f Supported Protocols SFTP (Secure File Transfer Protocol) FTPS (File Transfer Protocol Secure) FTP (File Transfer Protocol) \ud83d\udcbe Key Features Fully managed \u2014 no infrastructure to deploy or manage. Integrates with Amazon S3 or Amazon EFS as storage backends. Supports IAM , CloudWatch , and AWS Secrets Manager for security and monitoring. Ideal for business-to-business (B2B) or legacy file transfer integrations. \ud83e\udde0 Example: Replace on-prem SFTP servers with AWS Transfer Family to send data directly to S3. \ud83e\udded Choosing the Right Data Transfer Option Service Transfer Type Best For Connectivity Storage Gateway Hybrid (online) Continuous integration with on-prem systems Online DataSync Online Fast, automated migration and sync jobs Online Transfer Family Online Secure file transfer via SFTP/FTP Online Snow Family Offline Large-scale data migrations or edge processing Offline \ud83e\udde0 Decision tip: If you have continuous, high-speed connectivity , use DataSync or Storage Gateway . If you operate in disconnected or high-latency environments , use Snow Family devices. \ud83d\udd12 Security and Monitoring All hybrid and transfer services integrate with AWS\u2019s security and management ecosystem: - Encryption in transit and at rest (TLS, KMS). - IAM roles and policies for fine-grained access control. - AWS CloudTrail for API-level logging. - Amazon CloudWatch for real-time metrics and alerts. - AWS Backup for centralized management of hybrid backup workflows. \ud83e\udde0 Key Takeaways Hybrid storage services bridge on-prem and cloud environments seamlessly. AWS Storage Gateway connects existing systems to AWS using file, block, or tape interfaces. AWS Snow Family enables offline , petabyte-scale transfers and edge computing . AWS DataSync automates online, high-speed data transfers between environments. AWS Transfer Family provides SFTP/FTPS/FTP endpoints for managed file transfer directly to S3/EFS . Choose the service based on connectivity , data volume , and migration frequency . All services integrate with KMS, IAM, CloudWatch, and CloudTrail for security and governance.","title":"\u25fd\ufe0f Section 5 - Hybrid and Data Transfer Services"},{"location":"cloud-practitioner/module-7/m7_sec5/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec5/#5-section-5-hybrid-and-data-transfer-services","text":"","title":"5\ufe0f\u20e3 Section 5: Hybrid and Data Transfer Services"},{"location":"cloud-practitioner/module-7/m7_sec5/#introduction","text":"Not all workloads begin in the cloud. Many organizations still store large amounts of data on-premises or in edge locations . AWS provides multiple services to move, extend, or integrate on-premises storage with the AWS Cloud \u2014 ensuring flexibility, speed, and security. This section focuses on: - Hybrid storage (integrating on-prem environments with AWS). - Data migration and transfer services for online and offline use cases.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec5/#aws-storage-gateway","text":"AWS Storage Gateway is a hybrid cloud storage service that connects on-premises environments with AWS cloud storage. It enables seamless use of AWS storage for backup, archiving, and disaster recovery, while maintaining local performance.","title":"\ud83c\udfe0 AWS Storage Gateway"},{"location":"cloud-practitioner/module-7/m7_sec5/#types-of-gateways","text":"Type Protocol Backed by Use Case File Gateway NFS / SMB Amazon S3 Store and retrieve files as S3 objects using local cache for fast access. Volume Gateway iSCSI Amazon EBS snapshots Present block storage volumes to on-prem servers; asynchronously back up to AWS. Tape Gateway Virtual Tape Library (VTL) Amazon S3 / Glacier Replace physical tape infrastructure for cost-effective, durable cloud backups.","title":"\ud83d\udd27 Types of Gateways"},{"location":"cloud-practitioner/module-7/m7_sec5/#key-features","text":"Local caching for low-latency access. Secure, encrypted transfer to AWS. Integration with AWS Backup for centralized management. Compression and deduplication to optimize bandwidth. \ud83e\udde0 Tip: Use Storage Gateway for hybrid workloads , tape replacement , and data replication without changing existing applications.","title":"\u2699\ufe0f Key Features"},{"location":"cloud-practitioner/module-7/m7_sec5/#aws-snow-family","text":"The AWS Snow Family provides physical devices to move or process data in environments with limited or no Internet connectivity. These devices are shipped to customers, filled with data, and returned to AWS for ingestion into the cloud.","title":"\u2744\ufe0f AWS Snow Family"},{"location":"cloud-practitioner/module-7/m7_sec5/#snow-family-devices","text":"Device Capacity Use Case AWS Snowcone Up to 8 TB (small, portable) Edge computing, IoT, remote data collection. AWS Snowball Edge (Storage / Compute Optimized) 80 TB\u2013210 TB Large-scale data transfer or local compute in disconnected environments. AWS Snowmobile Up to 100 PB (semi-truck size) Massive data migrations (e.g., entire data centers).","title":"\ud83d\udce6 Snow Family Devices"},{"location":"cloud-practitioner/module-7/m7_sec5/#key-features_1","text":"Offline data transfer for petabyte-scale migrations. Edge compute capability (Snowcone, Snowball Edge) using AWS IoT Greengrass or EC2-compatible instances. Ruggedized for harsh or remote environments. Encryption using AWS Key Management Service (KMS). \ud83e\udde0 Example: A research vessel uses Snowcone to collect and process ocean data before syncing to S3 once back online.","title":"\u2699\ufe0f Key Features"},{"location":"cloud-practitioner/module-7/m7_sec5/#aws-datasync","text":"AWS DataSync is an online data transfer service that simplifies, automates, and accelerates moving large amounts of data between on-premises systems and AWS storage.","title":"\u26a1 AWS DataSync"},{"location":"cloud-practitioner/module-7/m7_sec5/#key-capabilities","text":"Transfers data 10x faster than traditional tools (e.g., rsync). Supports data transfer between: On-premises storage \u2192 Amazon S3 , EFS , or FSx . AWS services \u2192 between Regions or Accounts. Handles encryption, scheduling, verification , and monitoring automatically.","title":"\ud83d\udd27 Key Capabilities"},{"location":"cloud-practitioner/module-7/m7_sec5/#use-cases","text":"Cloud migration and hybrid data synchronization. Data replication for analytics or backup. Automated movement of data between environments. \ud83e\udde0 Tip: Use DataSync when you need continuous, secure, and fast online data transfer at scale.","title":"\ud83e\uddf0 Use Cases"},{"location":"cloud-practitioner/module-7/m7_sec5/#aws-transfer-family","text":"AWS Transfer Family provides fully managed file transfer protocols to move files into and out of AWS storage services.","title":"\ud83d\udd01 AWS Transfer Family"},{"location":"cloud-practitioner/module-7/m7_sec5/#supported-protocols","text":"SFTP (Secure File Transfer Protocol) FTPS (File Transfer Protocol Secure) FTP (File Transfer Protocol)","title":"\u2699\ufe0f Supported Protocols"},{"location":"cloud-practitioner/module-7/m7_sec5/#key-features_2","text":"Fully managed \u2014 no infrastructure to deploy or manage. Integrates with Amazon S3 or Amazon EFS as storage backends. Supports IAM , CloudWatch , and AWS Secrets Manager for security and monitoring. Ideal for business-to-business (B2B) or legacy file transfer integrations. \ud83e\udde0 Example: Replace on-prem SFTP servers with AWS Transfer Family to send data directly to S3.","title":"\ud83d\udcbe Key Features"},{"location":"cloud-practitioner/module-7/m7_sec5/#choosing-the-right-data-transfer-option","text":"Service Transfer Type Best For Connectivity Storage Gateway Hybrid (online) Continuous integration with on-prem systems Online DataSync Online Fast, automated migration and sync jobs Online Transfer Family Online Secure file transfer via SFTP/FTP Online Snow Family Offline Large-scale data migrations or edge processing Offline \ud83e\udde0 Decision tip: If you have continuous, high-speed connectivity , use DataSync or Storage Gateway . If you operate in disconnected or high-latency environments , use Snow Family devices.","title":"\ud83e\udded Choosing the Right Data Transfer Option"},{"location":"cloud-practitioner/module-7/m7_sec5/#security-and-monitoring","text":"All hybrid and transfer services integrate with AWS\u2019s security and management ecosystem: - Encryption in transit and at rest (TLS, KMS). - IAM roles and policies for fine-grained access control. - AWS CloudTrail for API-level logging. - Amazon CloudWatch for real-time metrics and alerts. - AWS Backup for centralized management of hybrid backup workflows.","title":"\ud83d\udd12 Security and Monitoring"},{"location":"cloud-practitioner/module-7/m7_sec5/#key-takeaways","text":"Hybrid storage services bridge on-prem and cloud environments seamlessly. AWS Storage Gateway connects existing systems to AWS using file, block, or tape interfaces. AWS Snow Family enables offline , petabyte-scale transfers and edge computing . AWS DataSync automates online, high-speed data transfers between environments. AWS Transfer Family provides SFTP/FTPS/FTP endpoints for managed file transfer directly to S3/EFS . Choose the service based on connectivity , data volume , and migration frequency . All services integrate with KMS, IAM, CloudWatch, and CloudTrail for security and governance.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec6/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 6\ufe0f\u20e3 Section 6: Backup, Archive, and Data Protection \ud83d\udfe0 Introduction Data protection is critical to maintaining business continuity, compliance, and security. AWS offers several services to help customers back up , archive , and protect their data automatically \u2014 across Regions and storage classes. This section covers: - AWS Backup - Amazon S3 Object Lock - Data archiving options (S3 Glacier classes) - Disaster recovery and replication strategies \ud83d\udcbe AWS Backup AWS Backup is a fully managed, centralized backup service that automates and manages data protection across AWS services and on-premises environments. \u2699\ufe0f Key Capabilities Automated backups of supported AWS services: EBS, EFS, FSx, RDS, DynamoDB, EC2, Aurora, and Storage Gateway. Centralized backup policies for compliance and governance. Cross-Region and cross-account backup copies for disaster recovery. Lifecycle policies to move older backups to cold storage tiers automatically. Integration with AWS Organizations for multi-account management. Point-in-time restore (PITR) for supported services. \ud83e\uddf0 How It Works Define a backup plan (frequency, retention, lifecycle). Assign resources (EC2, EFS, RDS, DynamoDB, etc.). AWS Backup executes backups and stores them in Backup Vaults . Optionally, enable Vault Lock for compliance enforcement. \ud83e\udde0 Example: Back up all EBS and RDS volumes nightly, with 30-day retention and cross-Region replication. \ud83d\udd12 AWS Backup Vaults and Vault Lock Backup Vaults are logical containers where AWS Backup stores recovery points. Each vault: - Is encrypted with AWS KMS . - Supports resource tagging for cost and organization. - Can enforce access policies using IAM. Vault Lock enables WORM (Write Once, Read Many) protection for immutable backups. Once set, Vault Lock prevents deletion or modification of backups before their retention period expires \u2014 critical for regulatory compliance (e.g., financial, healthcare data). \ud83e\uddca Archiving with Amazon S3 Glacier AWS provides multiple S3 Glacier storage classes designed for long-term archival and compliance storage. Storage Class Retrieval Time Cost Use Case S3 Glacier Instant Retrieval Milliseconds Low Archival data that must be accessed quickly. S3 Glacier Flexible Retrieval Minutes\u2013hours Lower Data rarely accessed but occasionally needed. S3 Glacier Deep Archive 12\u201348 hours Lowest Long-term retention, compliance, or historical archives. \ud83d\udca1 Key Benefits 11 9s durability across multiple AZs. Lifecycle integration \u2014 automatically move aging data from S3 Standard or IA to Glacier. Encryption at rest and in transit. Ideal for regulatory , scientific , and media archive workloads. \ud83e\uddf1 S3 Object Lock Amazon S3 Object Lock provides immutability at the object level. It prevents objects from being deleted or overwritten for a fixed retention period or indefinitely. \ud83d\udd27 Modes Mode Description Governance Mode Users can\u2019t overwrite or delete objects unless they have special permissions. Compliance Mode No one (including the root user) can delete or modify the object until retention expires. \ud83e\uddf0 Use Cases Legal holds and audit compliance. Protection against ransomware or accidental deletions. Meeting regulatory requirements (e.g., SEC Rule 17a-4, HIPAA). \ud83e\udde0 Tip: Combine Object Lock with S3 Versioning for complete data protection and rollback capability. \ud83c\udf0d Disaster Recovery and Replication AWS provides several built-in features and strategies for disaster recovery (DR) : Strategy Description Recovery Time Objective (RTO) Example Service Backup and Restore Store backups in another Region and restore when needed. Hours\u2013Days AWS Backup with cross-Region copy. Pilot Light Keep minimal core infrastructure always running. Minutes\u2013Hours Replicate databases with RDS or DynamoDB global tables. Warm Standby Keep scaled-down full environment active. Minutes Auto Scaling to scale up when needed. Multi-Site (Active/Active) Fully redundant environment across Regions. Seconds Route 53 with Global Accelerator or cross-Region load balancing. \ud83d\udca1 Replication Tools S3 Cross-Region Replication (CRR) EBS Snapshot Copy RDS Read Replicas / Cross-Region Replicas DynamoDB Global Tables \ud83e\udde0 Tip: Use multiple strategies depending on workload criticality \u2014 e.g., CRR for S3 data and Pilot Light for EC2 infrastructure. \ud83d\udd10 Data Encryption and Compliance AWS ensures protection of stored and backed-up data using encryption , access control , and auditing : Encryption at rest using AWS KMS , SSE-S3 , or SSE-KMS . Encryption in transit using TLS/SSL . IAM for fine-grained access control. CloudTrail to audit backup operations and API calls. AWS Config to monitor compliance with internal data protection policies. \ud83e\udde0 Key Takeaways AWS Backup provides a centralized, automated backup solution for AWS and hybrid workloads. Backup Vaults and Vault Lock enforce immutability and compliance retention. Use S3 Glacier classes for long-term, low-cost archival storage. S3 Object Lock ensures WORM protection for compliance and ransomware defense. Implement DR strategies (Backup & Restore, Pilot Light, Warm Standby, Multi-Site) based on recovery time goals. Use encryption, IAM, and CloudTrail to secure and audit backup operations.","title":"\u25fd\ufe0f Section 6 - Backup, Archive, and Data Protection"},{"location":"cloud-practitioner/module-7/m7_sec6/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec6/#6-section-6-backup-archive-and-data-protection","text":"","title":"6\ufe0f\u20e3 Section 6: Backup, Archive, and Data Protection"},{"location":"cloud-practitioner/module-7/m7_sec6/#introduction","text":"Data protection is critical to maintaining business continuity, compliance, and security. AWS offers several services to help customers back up , archive , and protect their data automatically \u2014 across Regions and storage classes. This section covers: - AWS Backup - Amazon S3 Object Lock - Data archiving options (S3 Glacier classes) - Disaster recovery and replication strategies","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec6/#aws-backup","text":"AWS Backup is a fully managed, centralized backup service that automates and manages data protection across AWS services and on-premises environments.","title":"\ud83d\udcbe AWS Backup"},{"location":"cloud-practitioner/module-7/m7_sec6/#key-capabilities","text":"Automated backups of supported AWS services: EBS, EFS, FSx, RDS, DynamoDB, EC2, Aurora, and Storage Gateway. Centralized backup policies for compliance and governance. Cross-Region and cross-account backup copies for disaster recovery. Lifecycle policies to move older backups to cold storage tiers automatically. Integration with AWS Organizations for multi-account management. Point-in-time restore (PITR) for supported services.","title":"\u2699\ufe0f Key Capabilities"},{"location":"cloud-practitioner/module-7/m7_sec6/#how-it-works","text":"Define a backup plan (frequency, retention, lifecycle). Assign resources (EC2, EFS, RDS, DynamoDB, etc.). AWS Backup executes backups and stores them in Backup Vaults . Optionally, enable Vault Lock for compliance enforcement. \ud83e\udde0 Example: Back up all EBS and RDS volumes nightly, with 30-day retention and cross-Region replication.","title":"\ud83e\uddf0 How It Works"},{"location":"cloud-practitioner/module-7/m7_sec6/#aws-backup-vaults-and-vault-lock","text":"Backup Vaults are logical containers where AWS Backup stores recovery points. Each vault: - Is encrypted with AWS KMS . - Supports resource tagging for cost and organization. - Can enforce access policies using IAM. Vault Lock enables WORM (Write Once, Read Many) protection for immutable backups. Once set, Vault Lock prevents deletion or modification of backups before their retention period expires \u2014 critical for regulatory compliance (e.g., financial, healthcare data).","title":"\ud83d\udd12 AWS Backup Vaults and Vault Lock"},{"location":"cloud-practitioner/module-7/m7_sec6/#archiving-with-amazon-s3-glacier","text":"AWS provides multiple S3 Glacier storage classes designed for long-term archival and compliance storage. Storage Class Retrieval Time Cost Use Case S3 Glacier Instant Retrieval Milliseconds Low Archival data that must be accessed quickly. S3 Glacier Flexible Retrieval Minutes\u2013hours Lower Data rarely accessed but occasionally needed. S3 Glacier Deep Archive 12\u201348 hours Lowest Long-term retention, compliance, or historical archives.","title":"\ud83e\uddca Archiving with Amazon S3 Glacier"},{"location":"cloud-practitioner/module-7/m7_sec6/#key-benefits","text":"11 9s durability across multiple AZs. Lifecycle integration \u2014 automatically move aging data from S3 Standard or IA to Glacier. Encryption at rest and in transit. Ideal for regulatory , scientific , and media archive workloads.","title":"\ud83d\udca1 Key Benefits"},{"location":"cloud-practitioner/module-7/m7_sec6/#s3-object-lock","text":"Amazon S3 Object Lock provides immutability at the object level. It prevents objects from being deleted or overwritten for a fixed retention period or indefinitely.","title":"\ud83e\uddf1 S3 Object Lock"},{"location":"cloud-practitioner/module-7/m7_sec6/#modes","text":"Mode Description Governance Mode Users can\u2019t overwrite or delete objects unless they have special permissions. Compliance Mode No one (including the root user) can delete or modify the object until retention expires.","title":"\ud83d\udd27 Modes"},{"location":"cloud-practitioner/module-7/m7_sec6/#use-cases","text":"Legal holds and audit compliance. Protection against ransomware or accidental deletions. Meeting regulatory requirements (e.g., SEC Rule 17a-4, HIPAA). \ud83e\udde0 Tip: Combine Object Lock with S3 Versioning for complete data protection and rollback capability.","title":"\ud83e\uddf0 Use Cases"},{"location":"cloud-practitioner/module-7/m7_sec6/#disaster-recovery-and-replication","text":"AWS provides several built-in features and strategies for disaster recovery (DR) : Strategy Description Recovery Time Objective (RTO) Example Service Backup and Restore Store backups in another Region and restore when needed. Hours\u2013Days AWS Backup with cross-Region copy. Pilot Light Keep minimal core infrastructure always running. Minutes\u2013Hours Replicate databases with RDS or DynamoDB global tables. Warm Standby Keep scaled-down full environment active. Minutes Auto Scaling to scale up when needed. Multi-Site (Active/Active) Fully redundant environment across Regions. Seconds Route 53 with Global Accelerator or cross-Region load balancing.","title":"\ud83c\udf0d Disaster Recovery and Replication"},{"location":"cloud-practitioner/module-7/m7_sec6/#replication-tools","text":"S3 Cross-Region Replication (CRR) EBS Snapshot Copy RDS Read Replicas / Cross-Region Replicas DynamoDB Global Tables \ud83e\udde0 Tip: Use multiple strategies depending on workload criticality \u2014 e.g., CRR for S3 data and Pilot Light for EC2 infrastructure.","title":"\ud83d\udca1 Replication Tools"},{"location":"cloud-practitioner/module-7/m7_sec6/#data-encryption-and-compliance","text":"AWS ensures protection of stored and backed-up data using encryption , access control , and auditing : Encryption at rest using AWS KMS , SSE-S3 , or SSE-KMS . Encryption in transit using TLS/SSL . IAM for fine-grained access control. CloudTrail to audit backup operations and API calls. AWS Config to monitor compliance with internal data protection policies.","title":"\ud83d\udd10 Data Encryption and Compliance"},{"location":"cloud-practitioner/module-7/m7_sec6/#key-takeaways","text":"AWS Backup provides a centralized, automated backup solution for AWS and hybrid workloads. Backup Vaults and Vault Lock enforce immutability and compliance retention. Use S3 Glacier classes for long-term, low-cost archival storage. S3 Object Lock ensures WORM protection for compliance and ransomware defense. Implement DR strategies (Backup & Restore, Pilot Light, Warm Standby, Multi-Site) based on recovery time goals. Use encryption, IAM, and CloudTrail to secure and audit backup operations.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-7/m7_sec7/","text":"\ud83d\uddc4\ufe0f Module 7 - Storage 7\ufe0f\u20e3 Section 7: Security, Compliance, and Cost Optimization in Storage \ud83d\udfe0 Introduction Security and cost optimization are essential when managing data in the cloud. AWS provides multiple tools and services to help you secure , audit , and optimize storage resources while ensuring compliance with regulations and internal policies. This section covers: - Storage security and encryption. - Compliance and governance. - Cost optimization strategies and tools. \ud83d\udd10 Security in AWS Storage AWS storage services are designed with security as a shared responsibility : AWS Responsibility Customer Responsibility Protect the infrastructure (hardware, software, networking, and facilities). Configure data access, encryption, and user permissions. \ud83e\uddf1 Security Controls Across Storage Services Security Layer Description Example Identity and Access Management Use IAM policies, roles, and permissions to control access. Grant an IAM role s3:GetObject for a specific bucket. Resource Policies Define access at the resource level (S3 bucket, EFS, FSx). Bucket policy denying all public access. Network Security Use VPC endpoints and security groups for private communication. Access S3 via Gateway Endpoint within a VPC. Encryption Protect data in transit (TLS) and at rest (SSE, KMS). Enable SSE-KMS on an S3 bucket. Monitoring and Auditing Track usage and configuration changes. CloudTrail, Config, and CloudWatch integration. \ud83e\udde0 Best Practice: Combine IAM policies , encryption , and network isolation for a layered security approach. \ud83e\udde9 Encryption Options by Service Service Encryption Method Notes Amazon S3 SSE-S3 (managed keys), SSE-KMS (KMS-managed), SSE-C (customer-supplied), or client-side. SSE-KMS supports granular access and audit logs. Amazon EBS AWS KMS integration for volume and snapshot encryption. Encrypted data stays encrypted through snapshots and restores. Amazon EFS Encryption at rest (KMS) and in transit (TLS). Configured at file system creation. Amazon FSx Encryption with KMS; supports SMB signing and encryption. Integrates with Active Directory. AWS Backup Vault-level KMS encryption; Vault Lock for immutability. Ensures secure and compliant backups. \ud83e\uddee Monitoring and Governance Tools AWS offers several tools to help ensure compliance and continuous monitoring: Tool Purpose AWS CloudTrail Records all API calls and user actions for auditing. AWS Config Tracks configuration changes and evaluates them against compliance rules. AWS CloudWatch Monitors metrics (usage, errors, performance). AWS Trusted Advisor Provides cost optimization, security, and performance recommendations. AWS Artifact Access on-demand compliance reports and certifications (ISO, SOC, PCI, HIPAA). AWS Organizations Apply policies (SCPs) and manage compliance across accounts. \ud83e\udde0 Tip: Use AWS Config + CloudTrail to enforce compliance and detect unauthorized access or misconfiguration. \u2699\ufe0f Compliance Programs AWS complies with hundreds of international and industry standards. These certifications help customers meet their regulatory requirements while storing data in AWS. Examples of major AWS compliance programs: - ISO 27001 / 27017 / 27018 - SOC 1, SOC 2, SOC 3 - HIPAA (Health Insurance Portability and Accountability Act) - PCI DSS (Payment Card Industry Data Security Standard) - FedRAMP - GDPR (EU General Data Protection Regulation) \ud83e\udde0 Customer role: You\u2019re responsible for data classification , access control , and meeting specific compliance objectives within your AWS environment. \ud83d\udcb0 Cost Optimization in AWS Storage Effective cost management ensures you only pay for what you truly need while maintaining required performance and availability. \ud83e\uddfe Key Cost Drivers Storage amount (GB/TB). Storage class or volume type (e.g., S3 Standard vs. Glacier Deep Archive). Data retrieval frequency. Cross-Region replication and data transfer. Requests and lifecycle operations. \u2699\ufe0f Cost Optimization Strategies Strategy Description Example / Tools Choose the right storage class Match access frequency to the appropriate tier. Move infrequent S3 data to IA or Glacier. Automate with lifecycle policies Transition or delete old data automatically. S3 Lifecycle, EFS IA transition. Delete unused resources Remove unattached EBS volumes, orphaned snapshots, or test buckets. AWS Trusted Advisor or manual review. Use Intelligent-Tiering Automatically move S3 data between hot/cold tiers. S3 Intelligent-Tiering. Compress and deduplicate data Reduce storage footprint before upload. DataSync or Storage Gateway deduplication. Leverage cost tools Analyze usage and optimize spend. Cost Explorer, Budgets, Compute Optimizer. \ud83e\udde0 Tip: Always tag resources by project , environment , or team to track usage and assign budgets accurately. \ud83c\udf0d Data Residency and Governance AWS Regions enable customers to choose where data is physically stored . Use S3 Replication , AWS Backup cross-Region copies , or multi-Region architectures to meet local data sovereignty requirements. For restricted jurisdictions, ensure data stays in-region by disabling cross-border replication. \ud83e\udde0 Key Takeaways AWS follows a shared responsibility model for storage security. Protect data using IAM , encryption (KMS) , and network isolation . Monitor and maintain compliance with CloudTrail , Config , Artifact , and Trusted Advisor . Use AWS Backup , Vault Lock , and S3 Object Lock for data protection and retention compliance. Optimize storage costs with Intelligent-Tiering , lifecyc","title":"\u25fd\ufe0f Section 7 - Security, Compliance, and Cost Optimization in Storage"},{"location":"cloud-practitioner/module-7/m7_sec7/#module-7-storage","text":"","title":"\ud83d\uddc4\ufe0f Module 7 - Storage"},{"location":"cloud-practitioner/module-7/m7_sec7/#7-section-7-security-compliance-and-cost-optimization-in-storage","text":"","title":"7\ufe0f\u20e3 Section 7: Security, Compliance, and Cost Optimization in Storage"},{"location":"cloud-practitioner/module-7/m7_sec7/#introduction","text":"Security and cost optimization are essential when managing data in the cloud. AWS provides multiple tools and services to help you secure , audit , and optimize storage resources while ensuring compliance with regulations and internal policies. This section covers: - Storage security and encryption. - Compliance and governance. - Cost optimization strategies and tools.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-7/m7_sec7/#security-in-aws-storage","text":"AWS storage services are designed with security as a shared responsibility : AWS Responsibility Customer Responsibility Protect the infrastructure (hardware, software, networking, and facilities). Configure data access, encryption, and user permissions.","title":"\ud83d\udd10 Security in AWS Storage"},{"location":"cloud-practitioner/module-7/m7_sec7/#security-controls-across-storage-services","text":"Security Layer Description Example Identity and Access Management Use IAM policies, roles, and permissions to control access. Grant an IAM role s3:GetObject for a specific bucket. Resource Policies Define access at the resource level (S3 bucket, EFS, FSx). Bucket policy denying all public access. Network Security Use VPC endpoints and security groups for private communication. Access S3 via Gateway Endpoint within a VPC. Encryption Protect data in transit (TLS) and at rest (SSE, KMS). Enable SSE-KMS on an S3 bucket. Monitoring and Auditing Track usage and configuration changes. CloudTrail, Config, and CloudWatch integration. \ud83e\udde0 Best Practice: Combine IAM policies , encryption , and network isolation for a layered security approach.","title":"\ud83e\uddf1 Security Controls Across Storage Services"},{"location":"cloud-practitioner/module-7/m7_sec7/#encryption-options-by-service","text":"Service Encryption Method Notes Amazon S3 SSE-S3 (managed keys), SSE-KMS (KMS-managed), SSE-C (customer-supplied), or client-side. SSE-KMS supports granular access and audit logs. Amazon EBS AWS KMS integration for volume and snapshot encryption. Encrypted data stays encrypted through snapshots and restores. Amazon EFS Encryption at rest (KMS) and in transit (TLS). Configured at file system creation. Amazon FSx Encryption with KMS; supports SMB signing and encryption. Integrates with Active Directory. AWS Backup Vault-level KMS encryption; Vault Lock for immutability. Ensures secure and compliant backups.","title":"\ud83e\udde9 Encryption Options by Service"},{"location":"cloud-practitioner/module-7/m7_sec7/#monitoring-and-governance-tools","text":"AWS offers several tools to help ensure compliance and continuous monitoring: Tool Purpose AWS CloudTrail Records all API calls and user actions for auditing. AWS Config Tracks configuration changes and evaluates them against compliance rules. AWS CloudWatch Monitors metrics (usage, errors, performance). AWS Trusted Advisor Provides cost optimization, security, and performance recommendations. AWS Artifact Access on-demand compliance reports and certifications (ISO, SOC, PCI, HIPAA). AWS Organizations Apply policies (SCPs) and manage compliance across accounts. \ud83e\udde0 Tip: Use AWS Config + CloudTrail to enforce compliance and detect unauthorized access or misconfiguration.","title":"\ud83e\uddee Monitoring and Governance Tools"},{"location":"cloud-practitioner/module-7/m7_sec7/#compliance-programs","text":"AWS complies with hundreds of international and industry standards. These certifications help customers meet their regulatory requirements while storing data in AWS. Examples of major AWS compliance programs: - ISO 27001 / 27017 / 27018 - SOC 1, SOC 2, SOC 3 - HIPAA (Health Insurance Portability and Accountability Act) - PCI DSS (Payment Card Industry Data Security Standard) - FedRAMP - GDPR (EU General Data Protection Regulation) \ud83e\udde0 Customer role: You\u2019re responsible for data classification , access control , and meeting specific compliance objectives within your AWS environment.","title":"\u2699\ufe0f Compliance Programs"},{"location":"cloud-practitioner/module-7/m7_sec7/#cost-optimization-in-aws-storage","text":"Effective cost management ensures you only pay for what you truly need while maintaining required performance and availability.","title":"\ud83d\udcb0 Cost Optimization in AWS Storage"},{"location":"cloud-practitioner/module-7/m7_sec7/#key-cost-drivers","text":"Storage amount (GB/TB). Storage class or volume type (e.g., S3 Standard vs. Glacier Deep Archive). Data retrieval frequency. Cross-Region replication and data transfer. Requests and lifecycle operations.","title":"\ud83e\uddfe Key Cost Drivers"},{"location":"cloud-practitioner/module-7/m7_sec7/#cost-optimization-strategies","text":"Strategy Description Example / Tools Choose the right storage class Match access frequency to the appropriate tier. Move infrequent S3 data to IA or Glacier. Automate with lifecycle policies Transition or delete old data automatically. S3 Lifecycle, EFS IA transition. Delete unused resources Remove unattached EBS volumes, orphaned snapshots, or test buckets. AWS Trusted Advisor or manual review. Use Intelligent-Tiering Automatically move S3 data between hot/cold tiers. S3 Intelligent-Tiering. Compress and deduplicate data Reduce storage footprint before upload. DataSync or Storage Gateway deduplication. Leverage cost tools Analyze usage and optimize spend. Cost Explorer, Budgets, Compute Optimizer. \ud83e\udde0 Tip: Always tag resources by project , environment , or team to track usage and assign budgets accurately.","title":"\u2699\ufe0f Cost Optimization Strategies"},{"location":"cloud-practitioner/module-7/m7_sec7/#data-residency-and-governance","text":"AWS Regions enable customers to choose where data is physically stored . Use S3 Replication , AWS Backup cross-Region copies , or multi-Region architectures to meet local data sovereignty requirements. For restricted jurisdictions, ensure data stays in-region by disabling cross-border replication.","title":"\ud83c\udf0d Data Residency and Governance"},{"location":"cloud-practitioner/module-7/m7_sec7/#key-takeaways","text":"AWS follows a shared responsibility model for storage security. Protect data using IAM , encryption (KMS) , and network isolation . Monitor and maintain compliance with CloudTrail , Config , Artifact , and Trusted Advisor . Use AWS Backup , Vault Lock , and S3 Object Lock for data protection and retention compliance. Optimize storage costs with Intelligent-Tiering , lifecyc","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-8/m8_sec1/","text":"\ud83d\uddc3\ufe0f Module 8 - Databases 1\ufe0f\u20e3 Section 1: Introduction to Databases on AWS \ud83d\udfe0 Introduction Modern applications rely on databases to store, manage, and retrieve information efficiently. AWS provides a wide variety of managed database services that help you handle any type of workload \u2014 from simple key-value stores to large-scale analytical data warehouses. This section introduces the different types of databases , their common use cases , and how AWS database services simplify operations compared to traditional on-premises systems. \ud83e\udde9 What Is a Database? A database is an organized collection of data that can be easily accessed, managed, and updated. It stores data in structured or unstructured formats and enables efficient querying and reporting. Common characteristics: - Organizes data logically (tables, documents, or key-value pairs). - Provides methods for querying, inserting, updating, and deleting data. - Ensures data consistency , availability , and security . - Supports multiple users and applications simultaneously. \ud83c\udfd7\ufe0f Traditional Database Management In an on-premises environment, managing databases involves: - Provisioning hardware (servers, storage, networking). - Installing and patching software (DBMS, OS, drivers). - Configuring high availability and backups manually. - Scaling by purchasing and installing new hardware. This approach is time-consuming and limits flexibility. \u2601\ufe0f Cloud Databases with AWS AWS database services simplify operations by automating tasks such as: - Provisioning and scaling infrastructure. - Backing up and restoring data. - Patching and upgrading software. - Providing built-in high availability and disaster recovery. You can focus on data and applications instead of infrastructure management. \ud83d\udd39 Benefits of Using AWS Databases Benefit Description Fully Managed AWS automates provisioning, patching, backups, and scaling. Scalable and Elastic Automatically adjust compute and storage capacity. Secure Integrated with IAM, encryption (KMS), and VPC isolation. Highly Available Multi-AZ replication and automatic failover for resilience. Integrated Analytics Many AWS databases connect seamlessly with analytics and ML tools. Cost-Effective Pay only for what you use, with options for on-demand or reserved capacity. \ud83e\uddee Database Categories AWS offers multiple types of databases, each optimized for specific data models and use cases. Database Type Description AWS Service Examples Use Cases \ud83e\udde0 Relational Stores data in tables with predefined schemas and relationships. Amazon RDS, Amazon Aurora ERP, CRM, e-commerce, financial applications. \u26a1 Key-Value Simple lookup service for high-speed data access. Amazon DynamoDB Gaming, IoT, caching, real-time personalization. \ud83d\udcc4 Document Stores semi-structured data (JSON, XML). Amazon DocumentDB (with MongoDB compatibility) Content management, catalogs, mobile apps. \ud83e\udde9 In-Memory Keeps data in memory for microsecond latency. Amazon ElastiCache (Redis, Memcached) Session stores, caching, gaming leaderboards. \ud83d\udd78\ufe0f Graph Stores and queries highly connected data (nodes and edges). Amazon Neptune Social networks, fraud detection, recommendation engines. \ud83e\uddf1 Time Series Optimized for time-stamped or chronological data. Amazon Timestream IoT metrics, application monitoring, sensor data. \ud83e\uddee Ledger Immutable, cryptographically verifiable transaction logs. Amazon QLDB Financial transactions, audit trails, supply chain. \ud83d\udcca Data Warehouse Centralized analytical store for structured and semi-structured data. Amazon Redshift Business intelligence, analytics, reporting. \ud83d\udd01 Database Selection Factors When choosing a database, consider: Factor Questions to Ask Data Model Is the data structured, semi-structured, or unstructured? Consistency Requirements Does the application require strong or eventual consistency? Latency & Performance How fast must data be read or written? Scalability How large will the data set and query volume grow? Availability Is high availability or disaster recovery required? Analytics Needs Does it need to integrate with BI or ML services? Cost What are the expected access patterns and storage needs? \ud83e\udde0 Tip: AWS offers purpose-built databases \u2014 choose the right one for each use case instead of a one-size-fits-all model. \ud83e\udde0 Key Takeaways AWS provides fully managed, scalable, and secure database services for every workload type. Traditional database management requires manual setup, whereas AWS automates provisioning, patching, and scaling. There are multiple database categories on AWS: Relational, Key-Value, Document, In-Memory, Graph, Time Series, Ledger, and Data Warehouse . Choose a database based on data type , consistency , scalability , and performance needs. Use purpose-built databases instead of trying to make one database fit all use cases.","title":"\u25fd\ufe0f Section 1 - Introduction to Databases on AWS"},{"location":"cloud-practitioner/module-8/m8_sec1/#module-8-databases","text":"","title":"\ud83d\uddc3\ufe0f Module 8 - Databases"},{"location":"cloud-practitioner/module-8/m8_sec1/#1-section-1-introduction-to-databases-on-aws","text":"","title":"1\ufe0f\u20e3 Section 1: Introduction to Databases on AWS"},{"location":"cloud-practitioner/module-8/m8_sec1/#introduction","text":"Modern applications rely on databases to store, manage, and retrieve information efficiently. AWS provides a wide variety of managed database services that help you handle any type of workload \u2014 from simple key-value stores to large-scale analytical data warehouses. This section introduces the different types of databases , their common use cases , and how AWS database services simplify operations compared to traditional on-premises systems.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-8/m8_sec1/#what-is-a-database","text":"A database is an organized collection of data that can be easily accessed, managed, and updated. It stores data in structured or unstructured formats and enables efficient querying and reporting. Common characteristics: - Organizes data logically (tables, documents, or key-value pairs). - Provides methods for querying, inserting, updating, and deleting data. - Ensures data consistency , availability , and security . - Supports multiple users and applications simultaneously.","title":"\ud83e\udde9 What Is a Database?"},{"location":"cloud-practitioner/module-8/m8_sec1/#traditional-database-management","text":"In an on-premises environment, managing databases involves: - Provisioning hardware (servers, storage, networking). - Installing and patching software (DBMS, OS, drivers). - Configuring high availability and backups manually. - Scaling by purchasing and installing new hardware. This approach is time-consuming and limits flexibility.","title":"\ud83c\udfd7\ufe0f Traditional Database Management"},{"location":"cloud-practitioner/module-8/m8_sec1/#cloud-databases-with-aws","text":"AWS database services simplify operations by automating tasks such as: - Provisioning and scaling infrastructure. - Backing up and restoring data. - Patching and upgrading software. - Providing built-in high availability and disaster recovery. You can focus on data and applications instead of infrastructure management.","title":"\u2601\ufe0f Cloud Databases with AWS"},{"location":"cloud-practitioner/module-8/m8_sec1/#benefits-of-using-aws-databases","text":"Benefit Description Fully Managed AWS automates provisioning, patching, backups, and scaling. Scalable and Elastic Automatically adjust compute and storage capacity. Secure Integrated with IAM, encryption (KMS), and VPC isolation. Highly Available Multi-AZ replication and automatic failover for resilience. Integrated Analytics Many AWS databases connect seamlessly with analytics and ML tools. Cost-Effective Pay only for what you use, with options for on-demand or reserved capacity.","title":"\ud83d\udd39 Benefits of Using AWS Databases"},{"location":"cloud-practitioner/module-8/m8_sec1/#database-categories","text":"AWS offers multiple types of databases, each optimized for specific data models and use cases. Database Type Description AWS Service Examples Use Cases \ud83e\udde0 Relational Stores data in tables with predefined schemas and relationships. Amazon RDS, Amazon Aurora ERP, CRM, e-commerce, financial applications. \u26a1 Key-Value Simple lookup service for high-speed data access. Amazon DynamoDB Gaming, IoT, caching, real-time personalization. \ud83d\udcc4 Document Stores semi-structured data (JSON, XML). Amazon DocumentDB (with MongoDB compatibility) Content management, catalogs, mobile apps. \ud83e\udde9 In-Memory Keeps data in memory for microsecond latency. Amazon ElastiCache (Redis, Memcached) Session stores, caching, gaming leaderboards. \ud83d\udd78\ufe0f Graph Stores and queries highly connected data (nodes and edges). Amazon Neptune Social networks, fraud detection, recommendation engines. \ud83e\uddf1 Time Series Optimized for time-stamped or chronological data. Amazon Timestream IoT metrics, application monitoring, sensor data. \ud83e\uddee Ledger Immutable, cryptographically verifiable transaction logs. Amazon QLDB Financial transactions, audit trails, supply chain. \ud83d\udcca Data Warehouse Centralized analytical store for structured and semi-structured data. Amazon Redshift Business intelligence, analytics, reporting.","title":"\ud83e\uddee Database Categories"},{"location":"cloud-practitioner/module-8/m8_sec1/#database-selection-factors","text":"When choosing a database, consider: Factor Questions to Ask Data Model Is the data structured, semi-structured, or unstructured? Consistency Requirements Does the application require strong or eventual consistency? Latency & Performance How fast must data be read or written? Scalability How large will the data set and query volume grow? Availability Is high availability or disaster recovery required? Analytics Needs Does it need to integrate with BI or ML services? Cost What are the expected access patterns and storage needs? \ud83e\udde0 Tip: AWS offers purpose-built databases \u2014 choose the right one for each use case instead of a one-size-fits-all model.","title":"\ud83d\udd01 Database Selection Factors"},{"location":"cloud-practitioner/module-8/m8_sec1/#key-takeaways","text":"AWS provides fully managed, scalable, and secure database services for every workload type. Traditional database management requires manual setup, whereas AWS automates provisioning, patching, and scaling. There are multiple database categories on AWS: Relational, Key-Value, Document, In-Memory, Graph, Time Series, Ledger, and Data Warehouse . Choose a database based on data type , consistency , scalability , and performance needs. Use purpose-built databases instead of trying to make one database fit all use cases.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-8/m8_sec2/","text":"\ud83d\uddc3\ufe0f Module 8 - Databases 2\ufe0f\u20e3 Section 2: Relational Databases on AWS (Amazon RDS and Amazon Aurora) \ud83d\udfe0 Introduction Relational databases store data in structured tables that are related through primary and foreign keys. They use SQL (Structured Query Language) for defining, querying, and managing data. AWS provides fully managed relational database services that automate setup, operation, and scaling \u2014 eliminating the need to manually maintain database servers. The two primary relational database services on AWS are: - Amazon Relational Database Service (Amazon RDS) - Amazon Aurora (a high-performance, cloud-native relational database engine) \ud83e\udde9 Relational Database Concepts Concept Description Table A collection of rows and columns (similar to a spreadsheet). Primary Key A unique identifier for each row in a table. Foreign Key A reference that links one table to another. SQL The standard language for interacting with relational databases. \ud83e\udde0 Example: In an e-commerce app, a \u201cCustomers\u201d table and an \u201cOrders\u201d table are related via a customer ID key. \ud83d\udca1 Amazon Relational Database Service (RDS) Amazon RDS is a fully managed service for setting up, operating, and scaling relational databases in the cloud. RDS supports multiple popular database engines: - Amazon Aurora - PostgreSQL - MySQL - MariaDB - Oracle - Microsoft SQL Server \u2699\ufe0f RDS Key Features Feature Description Automated Provisioning AWS handles instance creation, OS installation, and database configuration. Automated Backups Daily backups, transaction logs, and user-defined retention periods. High Availability Multi-AZ deployments provide automatic failover between Availability Zones. Scalability Storage and compute can be scaled up or down with minimal downtime. Security Integrated with IAM, VPC, and KMS for authentication and encryption. Monitoring CloudWatch metrics, enhanced monitoring, and performance insights. Maintenance Automated software patching and updates. \ud83e\udde0 Tip: RDS frees developers from database administration tasks so they can focus on application logic. \ud83e\uddf1 RDS Deployment Options Deployment Description Use Case Single-AZ Database instance hosted in one Availability Zone. Development and testing environments. Multi-AZ Primary instance with a synchronous standby replica in another AZ for failover. Production workloads requiring high availability. Read Replicas Asynchronous replicas for scaling read-heavy workloads. Reporting and analytics workloads. \ud83d\udd10 RDS Security Databases run inside your Amazon VPC , isolated from other networks. Encryption at rest using AWS KMS and encryption in transit using SSL/TLS. Control access using: IAM authentication (temporary tokens instead of passwords). Security groups (define inbound/outbound rules). Database-level credentials and roles. \ud83e\udde0 Best Practice: Use IAM authentication and enforce SSL connections for secure access. \u26a1 Amazon Aurora Amazon Aurora is a relational database engine built for the cloud, fully compatible with MySQL and PostgreSQL . It offers the performance and availability of high-end commercial databases at a fraction of the cost. \ud83c\udf1f Aurora Highlights Up to 5x faster than MySQL and 3x faster than PostgreSQL on the same hardware. Fully managed by RDS (so you get automation, backups, and monitoring). Designed for high availability with automatic replication across three Availability Zones . Self-healing storage that automatically detects and repairs corruption. Automatically scales storage (up to 128 TB per database ). Serverless option for on-demand scaling based on workload. \ud83e\uddee Aurora Architecture Aurora separates compute and storage layers : - Compute layer: database instances (read/write). - Storage layer: distributed, fault-tolerant storage replicated six times across three AZs. This separation allows for: - Faster recovery and scaling. - Continuous backups to Amazon S3. - Low-latency reads using Aurora Replicas (up to 15 replicas). \ud83e\udde0 Example: Aurora automatically detects failures and promotes a read replica to primary within seconds. \ud83e\uddf0 Aurora Deployment Options Option Description Aurora Provisioned Fixed instance capacity with manual scaling. Aurora Serverless v2 Automatically adjusts compute capacity in fine-grained increments for variable workloads. Global Database Replicates data across multiple Regions with sub-second latency for global applications. \ud83d\udcb0 Pricing and Cost Efficiency Pay for instance hours, storage, and I/O requests. Aurora\u2019s auto-scaling and serverless options optimize cost for unpredictable workloads. Use Reserved Instances or Savings Plans for predictable long-term workloads. \ud83e\udde0 Key Takeaways Amazon RDS automates management of relational databases, supporting multiple engines like MySQL, PostgreSQL, and Oracle. Amazon Aurora delivers enterprise-grade performance and availability , built for the cloud. Use Multi-AZ deployments for fault tolerance and read replicas for scaling read-heavy workloads. RDS and Aurora integrate with IAM, KMS, and VPC for strong security. Aurora Serverless is ideal for variable workloads \u2014 it scales automatically to meet demand. Both services reduce operational burden and simplify high availability, scaling, and backups.","title":"\u25fd\ufe0f Section 2 - Relational Databases on AWS (Amazon RDS and Amazon Aurora)"},{"location":"cloud-practitioner/module-8/m8_sec2/#module-8-databases","text":"","title":"\ud83d\uddc3\ufe0f Module 8 - Databases"},{"location":"cloud-practitioner/module-8/m8_sec2/#2-section-2-relational-databases-on-aws-amazon-rds-and-amazon-aurora","text":"","title":"2\ufe0f\u20e3 Section 2: Relational Databases on AWS (Amazon RDS and Amazon Aurora)"},{"location":"cloud-practitioner/module-8/m8_sec2/#introduction","text":"Relational databases store data in structured tables that are related through primary and foreign keys. They use SQL (Structured Query Language) for defining, querying, and managing data. AWS provides fully managed relational database services that automate setup, operation, and scaling \u2014 eliminating the need to manually maintain database servers. The two primary relational database services on AWS are: - Amazon Relational Database Service (Amazon RDS) - Amazon Aurora (a high-performance, cloud-native relational database engine)","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-8/m8_sec2/#relational-database-concepts","text":"Concept Description Table A collection of rows and columns (similar to a spreadsheet). Primary Key A unique identifier for each row in a table. Foreign Key A reference that links one table to another. SQL The standard language for interacting with relational databases. \ud83e\udde0 Example: In an e-commerce app, a \u201cCustomers\u201d table and an \u201cOrders\u201d table are related via a customer ID key.","title":"\ud83e\udde9 Relational Database Concepts"},{"location":"cloud-practitioner/module-8/m8_sec2/#amazon-relational-database-service-rds","text":"Amazon RDS is a fully managed service for setting up, operating, and scaling relational databases in the cloud. RDS supports multiple popular database engines: - Amazon Aurora - PostgreSQL - MySQL - MariaDB - Oracle - Microsoft SQL Server","title":"\ud83d\udca1 Amazon Relational Database Service (RDS)"},{"location":"cloud-practitioner/module-8/m8_sec2/#rds-key-features","text":"Feature Description Automated Provisioning AWS handles instance creation, OS installation, and database configuration. Automated Backups Daily backups, transaction logs, and user-defined retention periods. High Availability Multi-AZ deployments provide automatic failover between Availability Zones. Scalability Storage and compute can be scaled up or down with minimal downtime. Security Integrated with IAM, VPC, and KMS for authentication and encryption. Monitoring CloudWatch metrics, enhanced monitoring, and performance insights. Maintenance Automated software patching and updates. \ud83e\udde0 Tip: RDS frees developers from database administration tasks so they can focus on application logic.","title":"\u2699\ufe0f RDS Key Features"},{"location":"cloud-practitioner/module-8/m8_sec2/#rds-deployment-options","text":"Deployment Description Use Case Single-AZ Database instance hosted in one Availability Zone. Development and testing environments. Multi-AZ Primary instance with a synchronous standby replica in another AZ for failover. Production workloads requiring high availability. Read Replicas Asynchronous replicas for scaling read-heavy workloads. Reporting and analytics workloads.","title":"\ud83e\uddf1 RDS Deployment Options"},{"location":"cloud-practitioner/module-8/m8_sec2/#rds-security","text":"Databases run inside your Amazon VPC , isolated from other networks. Encryption at rest using AWS KMS and encryption in transit using SSL/TLS. Control access using: IAM authentication (temporary tokens instead of passwords). Security groups (define inbound/outbound rules). Database-level credentials and roles. \ud83e\udde0 Best Practice: Use IAM authentication and enforce SSL connections for secure access.","title":"\ud83d\udd10 RDS Security"},{"location":"cloud-practitioner/module-8/m8_sec2/#amazon-aurora","text":"Amazon Aurora is a relational database engine built for the cloud, fully compatible with MySQL and PostgreSQL . It offers the performance and availability of high-end commercial databases at a fraction of the cost.","title":"\u26a1 Amazon Aurora"},{"location":"cloud-practitioner/module-8/m8_sec2/#aurora-highlights","text":"Up to 5x faster than MySQL and 3x faster than PostgreSQL on the same hardware. Fully managed by RDS (so you get automation, backups, and monitoring). Designed for high availability with automatic replication across three Availability Zones . Self-healing storage that automatically detects and repairs corruption. Automatically scales storage (up to 128 TB per database ). Serverless option for on-demand scaling based on workload.","title":"\ud83c\udf1f Aurora Highlights"},{"location":"cloud-practitioner/module-8/m8_sec2/#aurora-architecture","text":"Aurora separates compute and storage layers : - Compute layer: database instances (read/write). - Storage layer: distributed, fault-tolerant storage replicated six times across three AZs. This separation allows for: - Faster recovery and scaling. - Continuous backups to Amazon S3. - Low-latency reads using Aurora Replicas (up to 15 replicas). \ud83e\udde0 Example: Aurora automatically detects failures and promotes a read replica to primary within seconds.","title":"\ud83e\uddee Aurora Architecture"},{"location":"cloud-practitioner/module-8/m8_sec2/#aurora-deployment-options","text":"Option Description Aurora Provisioned Fixed instance capacity with manual scaling. Aurora Serverless v2 Automatically adjusts compute capacity in fine-grained increments for variable workloads. Global Database Replicates data across multiple Regions with sub-second latency for global applications.","title":"\ud83e\uddf0 Aurora Deployment Options"},{"location":"cloud-practitioner/module-8/m8_sec2/#pricing-and-cost-efficiency","text":"Pay for instance hours, storage, and I/O requests. Aurora\u2019s auto-scaling and serverless options optimize cost for unpredictable workloads. Use Reserved Instances or Savings Plans for predictable long-term workloads.","title":"\ud83d\udcb0 Pricing and Cost Efficiency"},{"location":"cloud-practitioner/module-8/m8_sec2/#key-takeaways","text":"Amazon RDS automates management of relational databases, supporting multiple engines like MySQL, PostgreSQL, and Oracle. Amazon Aurora delivers enterprise-grade performance and availability , built for the cloud. Use Multi-AZ deployments for fault tolerance and read replicas for scaling read-heavy workloads. RDS and Aurora integrate with IAM, KMS, and VPC for strong security. Aurora Serverless is ideal for variable workloads \u2014 it scales automatically to meet demand. Both services reduce operational burden and simplify high availability, scaling, and backups.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-8/m8_sec3/","text":"\ud83d\uddc3\ufe0f Module 8 - Databases 3\ufe0f\u20e3 Section 3: Nonrelational Databases on AWS \ud83d\udfe0 Introduction Not all data fits neatly into tables with rows and columns. Modern applications often require more flexibility, speed, and scalability than traditional relational databases can provide. Nonrelational databases (NoSQL) handle unstructured and semi-structured data, making them ideal for high-performance, distributed applications like mobile, gaming, IoT, and real-time analytics. AWS offers several fully managed nonrelational database services , each designed for a specific data model and use case. \ud83d\udca1 Key Characteristics of Nonrelational Databases Flexible schema \u2014 data structure can evolve over time. Horizontal scalability \u2014 scale out easily across multiple nodes. High performance \u2014 optimized for millisecond or microsecond latency. Designed for modern workloads \u2014 such as social apps, IoT telemetry, or personalized recommendations. \u26a1 Amazon DynamoDB (Key-Value and Document Database) Amazon DynamoDB is a serverless , key-value and document database designed for high availability, performance, and scalability. \ud83e\udde9 Core Features Fully managed and serverless \u2014 no provisioning or maintenance. Single-digit millisecond latency at any scale. Automatic scaling \u2014 adjusts read/write capacity based on demand. Multi-Region replication for global applications. Built-in encryption , backup , and point-in-time recovery (PITR) . Integrates with AWS Lambda and API Gateway for serverless architectures. \u2699\ufe0f Performance Options Mode Description On-Demand Capacity Automatically scales up/down; pay per request. Provisioned Capacity Predefine read/write throughput; ideal for predictable workloads. DAX (DynamoDB Accelerator) In-memory cache delivering microsecond response times. \ud83e\udde0 Example: Gaming leaderboards, IoT device data, and e-commerce shopping carts use DynamoDB for rapid, scalable access. \ud83d\udcc4 Amazon DocumentDB (with MongoDB Compatibility) Amazon DocumentDB is a managed document database service compatible with MongoDB APIs . It stores data in flexible JSON-like documents , allowing for nested structures and varied attributes. \u2699\ufe0f Key Features Schema flexibility \u2014 no predefined table structure. Compatible with existing MongoDB drivers and tools. Scales storage automatically up to 64 TB. Multi-AZ replication for high availability. Continuous backups to Amazon S3. Integrated encryption and VPC isolation . \ud83e\udde0 Use Cases: Content management, mobile user profiles, catalogs, and configuration data. \u2699\ufe0f Amazon ElastiCache (In-Memory Data Store) Amazon ElastiCache accelerates application performance by storing frequently accessed data in memory , reducing database load and latency. \ud83e\udde0 Key Features Sub-millisecond response times. Compatible with Redis and Memcached engines. Fully managed with automated failover, patching, and backups. Scales horizontally using clustering. Commonly used as a caching layer in front of databases like RDS or DynamoDB. \ud83e\udde0 Example: Caching API responses, session storage, gaming leaderboards, and analytics dashboards. \ud83d\udd78\ufe0f Amazon Neptune (Graph Database) Amazon Neptune is a fully managed graph database optimized for storing and querying relationships between data points. \ud83e\udde9 Core Characteristics Supports both Property Graph and RDF (Resource Description Framework) models. Query languages: Gremlin and SPARQL . Highly available with Multi-AZ replication and continuous backup to S3. Fast queries for complex relationship data \u2014 billions of connections in milliseconds. Fully managed with encryption, monitoring, and scaling. \ud83d\udca1 Common Use Cases Social networks (connections, followers). Fraud detection (pattern analysis). Recommendation engines. Knowledge graphs. \ud83e\udde0 Example: Detecting related accounts or suspicious connections in financial transactions. \ud83e\uddee Amazon Timestream (Time Series Database) Amazon Timestream is a purpose-built time series database optimized for time-stamped data. \u2699\ufe0f Key Features Automatically stores and organizes data by time intervals. Handles trillions of events per day. Built-in analytics functions (averages, rates, interpolations). Data lifecycle management \u2014 moves data automatically from memory to lower-cost storage. Serverless and auto-scaling. \ud83d\udca1 Use Cases IoT sensor data. Application performance monitoring. Industrial telemetry and metrics dashboards. \ud83e\udde0 Example: Monitoring CPU utilization metrics across thousands of EC2 instances. \ud83d\udd10 Amazon QLDB (Quantum Ledger Database) Amazon QLDB is a ledger database that provides a transparent, immutable, and cryptographically verifiable transaction log. \ud83e\udde0 Key Features Records every change in an append-only journal. Provides cryptographic verification of data integrity. Fully managed and serverless. Integrated with IAM , KMS , and CloudWatch . ACID-compliant (Atomicity, Consistency, Isolation, Durability). \ud83d\udca1 Use Cases Financial transactions and audit trails. Supply chain tracking. Insurance claims management. Regulatory compliance systems. \ud83e\udde0 Example: QLDB ensures every transaction is permanent and verifiable, ideal for compliance-critical environments. \ud83d\udcca Amazon Redshift (Data Warehousing) Although technically not a NoSQL database, Amazon Redshift is often used in conjunction with nonrelational systems for analytics. \u2699\ufe0f Key Features Petabyte-scale data warehouse for analytical queries . Uses columnar storage and massively parallel processing (MPP) for speed. Integrates with S3 (Redshift Spectrum) to query data directly from S3 without loading. Integrates with BI tools like QuickSight, Tableau, and Looker. Elastic Resize and Concurrency Scaling for performance optimization. \ud83e\udde0 Use Cases: Business intelligence, analytics, and reporting across large datasets. \ud83e\udde0 Key Takeaways Nonrelational databases handle unstructured or semi-structured data with flexible schemas and scalable performance. DynamoDB \u2192 Key-value & document workloads; serverless and high performance. DocumentDB \u2192 JSON document model; compatible with MongoDB. ElastiCache \u2192 In-memory caching; microsecond latency for speed-critical workloads. Neptune \u2192 Graph database for connected data (social, fraud, recommendations). Timestream \u2192 Time series workloads; IoT and telemetry. QLDB \u2192 Immutable ledger for auditing and traceability. Redshift \u2192 Analytical workloads and large-scale data warehousing. AWS databases are purpose-built \u2014 use the right one for the right job.","title":"\u25fd\ufe0f Section 3 - Nonrelational Databases on AWS"},{"location":"cloud-practitioner/module-8/m8_sec3/#module-8-databases","text":"","title":"\ud83d\uddc3\ufe0f Module 8 - Databases"},{"location":"cloud-practitioner/module-8/m8_sec3/#3-section-3-nonrelational-databases-on-aws","text":"","title":"3\ufe0f\u20e3 Section 3: Nonrelational Databases on AWS"},{"location":"cloud-practitioner/module-8/m8_sec3/#introduction","text":"Not all data fits neatly into tables with rows and columns. Modern applications often require more flexibility, speed, and scalability than traditional relational databases can provide. Nonrelational databases (NoSQL) handle unstructured and semi-structured data, making them ideal for high-performance, distributed applications like mobile, gaming, IoT, and real-time analytics. AWS offers several fully managed nonrelational database services , each designed for a specific data model and use case.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-characteristics-of-nonrelational-databases","text":"Flexible schema \u2014 data structure can evolve over time. Horizontal scalability \u2014 scale out easily across multiple nodes. High performance \u2014 optimized for millisecond or microsecond latency. Designed for modern workloads \u2014 such as social apps, IoT telemetry, or personalized recommendations.","title":"\ud83d\udca1 Key Characteristics of Nonrelational Databases"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-dynamodb-key-value-and-document-database","text":"Amazon DynamoDB is a serverless , key-value and document database designed for high availability, performance, and scalability.","title":"\u26a1 Amazon DynamoDB (Key-Value and Document Database)"},{"location":"cloud-practitioner/module-8/m8_sec3/#core-features","text":"Fully managed and serverless \u2014 no provisioning or maintenance. Single-digit millisecond latency at any scale. Automatic scaling \u2014 adjusts read/write capacity based on demand. Multi-Region replication for global applications. Built-in encryption , backup , and point-in-time recovery (PITR) . Integrates with AWS Lambda and API Gateway for serverless architectures.","title":"\ud83e\udde9 Core Features"},{"location":"cloud-practitioner/module-8/m8_sec3/#performance-options","text":"Mode Description On-Demand Capacity Automatically scales up/down; pay per request. Provisioned Capacity Predefine read/write throughput; ideal for predictable workloads. DAX (DynamoDB Accelerator) In-memory cache delivering microsecond response times. \ud83e\udde0 Example: Gaming leaderboards, IoT device data, and e-commerce shopping carts use DynamoDB for rapid, scalable access.","title":"\u2699\ufe0f Performance Options"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-documentdb-with-mongodb-compatibility","text":"Amazon DocumentDB is a managed document database service compatible with MongoDB APIs . It stores data in flexible JSON-like documents , allowing for nested structures and varied attributes.","title":"\ud83d\udcc4 Amazon DocumentDB (with MongoDB Compatibility)"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-features","text":"Schema flexibility \u2014 no predefined table structure. Compatible with existing MongoDB drivers and tools. Scales storage automatically up to 64 TB. Multi-AZ replication for high availability. Continuous backups to Amazon S3. Integrated encryption and VPC isolation . \ud83e\udde0 Use Cases: Content management, mobile user profiles, catalogs, and configuration data.","title":"\u2699\ufe0f Key Features"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-elasticache-in-memory-data-store","text":"Amazon ElastiCache accelerates application performance by storing frequently accessed data in memory , reducing database load and latency.","title":"\u2699\ufe0f Amazon ElastiCache (In-Memory Data Store)"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-features_1","text":"Sub-millisecond response times. Compatible with Redis and Memcached engines. Fully managed with automated failover, patching, and backups. Scales horizontally using clustering. Commonly used as a caching layer in front of databases like RDS or DynamoDB. \ud83e\udde0 Example: Caching API responses, session storage, gaming leaderboards, and analytics dashboards.","title":"\ud83e\udde0 Key Features"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-neptune-graph-database","text":"Amazon Neptune is a fully managed graph database optimized for storing and querying relationships between data points.","title":"\ud83d\udd78\ufe0f Amazon Neptune (Graph Database)"},{"location":"cloud-practitioner/module-8/m8_sec3/#core-characteristics","text":"Supports both Property Graph and RDF (Resource Description Framework) models. Query languages: Gremlin and SPARQL . Highly available with Multi-AZ replication and continuous backup to S3. Fast queries for complex relationship data \u2014 billions of connections in milliseconds. Fully managed with encryption, monitoring, and scaling.","title":"\ud83e\udde9 Core Characteristics"},{"location":"cloud-practitioner/module-8/m8_sec3/#common-use-cases","text":"Social networks (connections, followers). Fraud detection (pattern analysis). Recommendation engines. Knowledge graphs. \ud83e\udde0 Example: Detecting related accounts or suspicious connections in financial transactions.","title":"\ud83d\udca1 Common Use Cases"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-timestream-time-series-database","text":"Amazon Timestream is a purpose-built time series database optimized for time-stamped data.","title":"\ud83e\uddee Amazon Timestream (Time Series Database)"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-features_2","text":"Automatically stores and organizes data by time intervals. Handles trillions of events per day. Built-in analytics functions (averages, rates, interpolations). Data lifecycle management \u2014 moves data automatically from memory to lower-cost storage. Serverless and auto-scaling.","title":"\u2699\ufe0f Key Features"},{"location":"cloud-practitioner/module-8/m8_sec3/#use-cases","text":"IoT sensor data. Application performance monitoring. Industrial telemetry and metrics dashboards. \ud83e\udde0 Example: Monitoring CPU utilization metrics across thousands of EC2 instances.","title":"\ud83d\udca1 Use Cases"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-qldb-quantum-ledger-database","text":"Amazon QLDB is a ledger database that provides a transparent, immutable, and cryptographically verifiable transaction log.","title":"\ud83d\udd10 Amazon QLDB (Quantum Ledger Database)"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-features_3","text":"Records every change in an append-only journal. Provides cryptographic verification of data integrity. Fully managed and serverless. Integrated with IAM , KMS , and CloudWatch . ACID-compliant (Atomicity, Consistency, Isolation, Durability).","title":"\ud83e\udde0 Key Features"},{"location":"cloud-practitioner/module-8/m8_sec3/#use-cases_1","text":"Financial transactions and audit trails. Supply chain tracking. Insurance claims management. Regulatory compliance systems. \ud83e\udde0 Example: QLDB ensures every transaction is permanent and verifiable, ideal for compliance-critical environments.","title":"\ud83d\udca1 Use Cases"},{"location":"cloud-practitioner/module-8/m8_sec3/#amazon-redshift-data-warehousing","text":"Although technically not a NoSQL database, Amazon Redshift is often used in conjunction with nonrelational systems for analytics.","title":"\ud83d\udcca Amazon Redshift (Data Warehousing)"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-features_4","text":"Petabyte-scale data warehouse for analytical queries . Uses columnar storage and massively parallel processing (MPP) for speed. Integrates with S3 (Redshift Spectrum) to query data directly from S3 without loading. Integrates with BI tools like QuickSight, Tableau, and Looker. Elastic Resize and Concurrency Scaling for performance optimization. \ud83e\udde0 Use Cases: Business intelligence, analytics, and reporting across large datasets.","title":"\u2699\ufe0f Key Features"},{"location":"cloud-practitioner/module-8/m8_sec3/#key-takeaways","text":"Nonrelational databases handle unstructured or semi-structured data with flexible schemas and scalable performance. DynamoDB \u2192 Key-value & document workloads; serverless and high performance. DocumentDB \u2192 JSON document model; compatible with MongoDB. ElastiCache \u2192 In-memory caching; microsecond latency for speed-critical workloads. Neptune \u2192 Graph database for connected data (social, fraud, recommendations). Timestream \u2192 Time series workloads; IoT and telemetry. QLDB \u2192 Immutable ledger for auditing and traceability. Redshift \u2192 Analytical workloads and large-scale data warehousing. AWS databases are purpose-built \u2014 use the right one for the right job.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-8/m8_sec4/","text":"\ud83d\uddc3\ufe0f Module 8 - Databases 4\ufe0f\u20e3 Section 4: Database Migration and Integration on AWS \ud83d\udfe0 Introduction Many organizations begin their cloud journey by migrating existing on-premises databases to AWS. AWS provides powerful, automated tools to simplify and accelerate this process \u2014 minimizing downtime, data loss, and manual effort. This section explores the main AWS services for database migration, integration, and modernization . \ud83d\udd01 Why Migrate Databases to AWS Benefit Description Cost Savings Eliminate hardware costs and reduce maintenance overhead. Scalability Scale up or down easily to meet changing demands. High Availability Built-in Multi-AZ replication and automatic failover. Security Encryption, IAM, VPC, and compliance support. Automation AWS handles backups, patching, and monitoring. Innovation Integrate with analytics, AI/ML, and serverless architectures. \ud83e\udde0 Tip: Database migration is often the first step toward full cloud modernization. \u2699\ufe0f AWS Database Migration Service (AWS DMS) AWS Database Migration Service (DMS) helps you migrate databases quickly and securely to AWS with minimal downtime. It supports both homogeneous and heterogeneous migrations. \ud83d\udd27 How It Works Create a source endpoint (on-premises or cloud database). Create a target endpoint (e.g., Amazon RDS, Aurora, DynamoDB, or Redshift). Configure a replication instance to manage data movement. Run the migration task \u2014 either one-time or continuous replication. \ud83e\udde9 Supported Database Engines Homogeneous migrations (same engine): Example: Oracle \u2192 Oracle, MySQL \u2192 MySQL. Heterogeneous migrations (different engines): Example: Oracle \u2192 Aurora, SQL Server \u2192 PostgreSQL. \u26a1 Key Features Minimal downtime \u2014 supports live replication while source remains online. Continuous data replication for hybrid or multi-region setups. Supports all major commercial and open-source databases. Monitored via Amazon CloudWatch. \ud83e\udde0 Example: Use DMS to continuously replicate data from an on-prem Oracle database to Amazon Aurora PostgreSQL until the final cutover. \ud83e\uddf0 AWS Schema Conversion Tool (AWS SCT) AWS Schema Conversion Tool (SCT) complements DMS by converting database schema and code automatically between engines. \ud83e\udde9 Capabilities Converts database schemas , functions , stored procedures , and views . Identifies incompatible objects and provides detailed conversion reports. Supports migrations between major commercial and open-source engines. Integrates with DMS for seamless end-to-end migration. \ud83e\udde0 Example: Convert an Oracle schema to PostgreSQL before using DMS to replicate live data. \ud83c\udf10 Database Modernization with AWS Migrating to AWS also allows you to modernize \u2014 not just move \u2014 your databases. Legacy System Modern AWS Alternative Benefit Oracle / SQL Server Amazon Aurora (MySQL/PostgreSQL compatible) Lower cost, managed scaling. On-prem MongoDB Amazon DocumentDB Managed, compatible, elastic. Cassandra / Keyspaces Amazon DynamoDB Serverless, highly available. On-prem caching servers Amazon ElastiCache Fully managed, microsecond latency. On-prem analytics DB Amazon Redshift Scalable, petabyte-scale analytics. \ud83e\udde0 Tip: Modernization unlocks serverless, analytics, and global scalability capabilities. \ud83d\udd17 Integrating Databases with AWS Services Once migrated, databases can integrate seamlessly with other AWS services to build full-stack, intelligent applications. Service Integration Example Purpose AWS Lambda Trigger functions on database changes. Event-driven automation. Amazon Kinesis Stream database updates in real time. Real-time analytics and dashboards. Amazon S3 Offload snapshots, exports, and logs. Archival and cost optimization. Amazon Glue / Athena Query and transform stored data. Serverless analytics and ETL. Amazon QuickSight Visualize and share insights. Business intelligence. \ud83e\udde0 Example: Stream changes from DynamoDB to Kinesis and analyze them in real time with QuickSight. \ud83e\udded Migration Strategy Overview AWS recommends following a phased approach to database migration: Assess \u2013 Evaluate current workloads, dependencies, and goals. Mobilize \u2013 Prepare migration plans, select target services, and define testing strategy. Migrate and Modernize \u2013 Move data using DMS and SCT; modernize where possible. Optimize \u2013 Review performance, cost, and scaling post-migration. \ud83e\udde0 Tip: Start small with a pilot migration, then scale up once patterns are established. \ud83d\udd12 Security and Compliance in Migration Encryption: All data encrypted in transit (TLS) and at rest (KMS). IAM Roles: Control who can create, manage, or access migration tasks. VPC Integration: Migration traffic stays within private AWS networks. CloudTrail Auditing: Logs all DMS activity and schema conversions. Compliance: Supports HIPAA, SOC, PCI, GDPR, and more. \ud83e\udde0 Best Practice: Always encrypt replication endpoints and test failover procedures post-migration. \ud83e\udde0 Key Takeaways AWS DMS enables fast, secure, minimal-downtime migrations for both homogeneous and heterogeneous databases. AWS SCT automates schema and code conversions between engines. Modernization enables better scalability, performance, and cost efficiency. Integrate databases with services like Lambda, Kinesis, Glue, and QuickSight for intelligent workflows. Follow AWS\u2019s Assess \u2192 Mobilize \u2192 Migrate \u2192 Optimize strategy for successful cloud adoption. Always enforce encryption, IAM policies, and monitoring for secure migrations. a","title":"\u25fd\ufe0f Section 4 - Database Migration and Integration on AWS"},{"location":"cloud-practitioner/module-8/m8_sec4/#module-8-databases","text":"","title":"\ud83d\uddc3\ufe0f Module 8 - Databases"},{"location":"cloud-practitioner/module-8/m8_sec4/#4-section-4-database-migration-and-integration-on-aws","text":"","title":"4\ufe0f\u20e3 Section 4: Database Migration and Integration on AWS"},{"location":"cloud-practitioner/module-8/m8_sec4/#introduction","text":"Many organizations begin their cloud journey by migrating existing on-premises databases to AWS. AWS provides powerful, automated tools to simplify and accelerate this process \u2014 minimizing downtime, data loss, and manual effort. This section explores the main AWS services for database migration, integration, and modernization .","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-8/m8_sec4/#why-migrate-databases-to-aws","text":"Benefit Description Cost Savings Eliminate hardware costs and reduce maintenance overhead. Scalability Scale up or down easily to meet changing demands. High Availability Built-in Multi-AZ replication and automatic failover. Security Encryption, IAM, VPC, and compliance support. Automation AWS handles backups, patching, and monitoring. Innovation Integrate with analytics, AI/ML, and serverless architectures. \ud83e\udde0 Tip: Database migration is often the first step toward full cloud modernization.","title":"\ud83d\udd01 Why Migrate Databases to AWS"},{"location":"cloud-practitioner/module-8/m8_sec4/#aws-database-migration-service-aws-dms","text":"AWS Database Migration Service (DMS) helps you migrate databases quickly and securely to AWS with minimal downtime. It supports both homogeneous and heterogeneous migrations.","title":"\u2699\ufe0f AWS Database Migration Service (AWS DMS)"},{"location":"cloud-practitioner/module-8/m8_sec4/#how-it-works","text":"Create a source endpoint (on-premises or cloud database). Create a target endpoint (e.g., Amazon RDS, Aurora, DynamoDB, or Redshift). Configure a replication instance to manage data movement. Run the migration task \u2014 either one-time or continuous replication.","title":"\ud83d\udd27 How It Works"},{"location":"cloud-practitioner/module-8/m8_sec4/#supported-database-engines","text":"Homogeneous migrations (same engine): Example: Oracle \u2192 Oracle, MySQL \u2192 MySQL. Heterogeneous migrations (different engines): Example: Oracle \u2192 Aurora, SQL Server \u2192 PostgreSQL.","title":"\ud83e\udde9 Supported Database Engines"},{"location":"cloud-practitioner/module-8/m8_sec4/#key-features","text":"Minimal downtime \u2014 supports live replication while source remains online. Continuous data replication for hybrid or multi-region setups. Supports all major commercial and open-source databases. Monitored via Amazon CloudWatch. \ud83e\udde0 Example: Use DMS to continuously replicate data from an on-prem Oracle database to Amazon Aurora PostgreSQL until the final cutover.","title":"\u26a1 Key Features"},{"location":"cloud-practitioner/module-8/m8_sec4/#aws-schema-conversion-tool-aws-sct","text":"AWS Schema Conversion Tool (SCT) complements DMS by converting database schema and code automatically between engines.","title":"\ud83e\uddf0 AWS Schema Conversion Tool (AWS SCT)"},{"location":"cloud-practitioner/module-8/m8_sec4/#capabilities","text":"Converts database schemas , functions , stored procedures , and views . Identifies incompatible objects and provides detailed conversion reports. Supports migrations between major commercial and open-source engines. Integrates with DMS for seamless end-to-end migration. \ud83e\udde0 Example: Convert an Oracle schema to PostgreSQL before using DMS to replicate live data.","title":"\ud83e\udde9 Capabilities"},{"location":"cloud-practitioner/module-8/m8_sec4/#database-modernization-with-aws","text":"Migrating to AWS also allows you to modernize \u2014 not just move \u2014 your databases. Legacy System Modern AWS Alternative Benefit Oracle / SQL Server Amazon Aurora (MySQL/PostgreSQL compatible) Lower cost, managed scaling. On-prem MongoDB Amazon DocumentDB Managed, compatible, elastic. Cassandra / Keyspaces Amazon DynamoDB Serverless, highly available. On-prem caching servers Amazon ElastiCache Fully managed, microsecond latency. On-prem analytics DB Amazon Redshift Scalable, petabyte-scale analytics. \ud83e\udde0 Tip: Modernization unlocks serverless, analytics, and global scalability capabilities.","title":"\ud83c\udf10 Database Modernization with AWS"},{"location":"cloud-practitioner/module-8/m8_sec4/#integrating-databases-with-aws-services","text":"Once migrated, databases can integrate seamlessly with other AWS services to build full-stack, intelligent applications. Service Integration Example Purpose AWS Lambda Trigger functions on database changes. Event-driven automation. Amazon Kinesis Stream database updates in real time. Real-time analytics and dashboards. Amazon S3 Offload snapshots, exports, and logs. Archival and cost optimization. Amazon Glue / Athena Query and transform stored data. Serverless analytics and ETL. Amazon QuickSight Visualize and share insights. Business intelligence. \ud83e\udde0 Example: Stream changes from DynamoDB to Kinesis and analyze them in real time with QuickSight.","title":"\ud83d\udd17 Integrating Databases with AWS Services"},{"location":"cloud-practitioner/module-8/m8_sec4/#migration-strategy-overview","text":"AWS recommends following a phased approach to database migration: Assess \u2013 Evaluate current workloads, dependencies, and goals. Mobilize \u2013 Prepare migration plans, select target services, and define testing strategy. Migrate and Modernize \u2013 Move data using DMS and SCT; modernize where possible. Optimize \u2013 Review performance, cost, and scaling post-migration. \ud83e\udde0 Tip: Start small with a pilot migration, then scale up once patterns are established.","title":"\ud83e\udded Migration Strategy Overview"},{"location":"cloud-practitioner/module-8/m8_sec4/#security-and-compliance-in-migration","text":"Encryption: All data encrypted in transit (TLS) and at rest (KMS). IAM Roles: Control who can create, manage, or access migration tasks. VPC Integration: Migration traffic stays within private AWS networks. CloudTrail Auditing: Logs all DMS activity and schema conversions. Compliance: Supports HIPAA, SOC, PCI, GDPR, and more. \ud83e\udde0 Best Practice: Always encrypt replication endpoints and test failover procedures post-migration.","title":"\ud83d\udd12 Security and Compliance in Migration"},{"location":"cloud-practitioner/module-8/m8_sec4/#key-takeaways","text":"AWS DMS enables fast, secure, minimal-downtime migrations for both homogeneous and heterogeneous databases. AWS SCT automates schema and code conversions between engines. Modernization enables better scalability, performance, and cost efficiency. Integrate databases with services like Lambda, Kinesis, Glue, and QuickSight for intelligent workflows. Follow AWS\u2019s Assess \u2192 Mobilize \u2192 Migrate \u2192 Optimize strategy for successful cloud adoption. Always enforce encryption, IAM policies, and monitoring for secure migrations. a","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-9/m9_sec1/","text":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture 1\ufe0f\u20e3 Section 1: Introduction to Cloud Architecture Design Principles \ud83d\udfe0 Introduction Designing applications in the cloud is fundamentally different from traditional on-premises architectures. The AWS Cloud offers flexibility, elasticity, scalability, and reliability \u2014 but to take full advantage of these, solutions must be architected for the cloud . AWS provides design principles and a framework that guide architects in building secure, high-performing, resilient, and efficient infrastructure. \u2601\ufe0f What Is Cloud Architecture? Cloud architecture defines how technologies and services within the cloud are structured and interact to meet business and technical requirements. It involves: - Designing distributed systems. - Defining how components communicate. - Planning for scalability, security, and cost-efficiency. - Using AWS managed services effectively. \ud83e\udde0 Goal: Build systems that are resilient , scalable , secure , and cost-optimized . \ud83e\udde9 Traditional vs. Cloud Architectures Aspect Traditional (On-Premises) Cloud (AWS) Scalability Manual hardware provisioning. Automatic, elastic scaling (Auto Scaling, ECS, Lambda). Resilience Dependent on physical redundancy. Multi-AZ and Multi-Region redundancy. Cost Model Upfront CapEx. Pay-as-you-go OpEx. Management Manual updates and maintenance. Fully managed services and automation. Innovation Speed Slow, limited by hardware cycles. Rapid prototyping and deployment. \ud83e\udde0 Tip: Cloud-native systems are designed to adapt dynamically and fail gracefully . \u2699\ufe0f AWS Cloud Design Principles AWS defines several key design principles for building well-architected cloud solutions: Principle Description 1. Design for Failure Assume components will fail. Architect for redundancy and graceful recovery (e.g., Multi-AZ, Multi-Region). 2. Implement Elasticity Scale resources automatically to match demand using Auto Scaling or Lambda . 3. Leverage Managed Services Offload operational tasks (e.g., use RDS instead of self-managed databases). 4. Automate Everything Use AWS CloudFormation , CDK , or OpsWorks to deploy infrastructure as code. 5. Decouple Components Build loosely coupled systems using SQS , SNS , or EventBridge to improve fault tolerance. 6. Enable Security at Every Layer Apply defense in depth \u2014 IAM, security groups, encryption, WAF, and Shield. 7. Optimize for Cost Right-size resources, use Savings Plans , and monitor usage with Cost Explorer . 8. Design for Performance Use caching (CloudFront, ElastiCache), load balancing, and edge computing to reduce latency. \ud83d\udd04 The AWS Well-Architected Framework AWS created the Well-Architected Framework to help customers evaluate and improve their cloud architectures. It consists of six pillars , each focusing on a critical area of system design. Pillar Focus Area Goal 1\ufe0f\u20e3 Operational Excellence Operations and continuous improvement. Enable agile operations and rapid recovery. 2\ufe0f\u20e3 Security Data protection and risk management. Safeguard systems and data. 3\ufe0f\u20e3 Reliability System availability and fault tolerance. Ensure workloads recover quickly from failures. 4\ufe0f\u20e3 Performance Efficiency Resource optimization and innovation. Use resources efficiently and adapt to change. 5\ufe0f\u20e3 Cost Optimization Value alignment and financial management. Deliver business value at minimal cost. 6\ufe0f\u20e3 Sustainability Environmental responsibility. Minimize environmental impact of workloads. \ud83e\udde0 Tip: Use the AWS Well-Architected Tool to review and continuously improve your workload designs. \ud83e\uddf1 Well-Architected Framework in Practice \ud83d\udd39 Operational Excellence Automate operations and infrastructure deployments. Use CloudFormation , CloudWatch , and Config to detect and respond to events. Continuously refine operations based on metrics and feedback. \ud83d\udd39 Security Apply least privilege with IAM. Encrypt data at rest and in transit. Monitor threats using GuardDuty , Security Hub , and Cloud","title":"\u25fd\ufe0f Section 1 - Introduction to Cloud Architecture Design Principles"},{"location":"cloud-practitioner/module-9/m9_sec1/#module-9-cloud-architecture","text":"","title":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture"},{"location":"cloud-practitioner/module-9/m9_sec1/#1-section-1-introduction-to-cloud-architecture-design-principles","text":"","title":"1\ufe0f\u20e3 Section 1: Introduction to Cloud Architecture Design Principles"},{"location":"cloud-practitioner/module-9/m9_sec1/#introduction","text":"Designing applications in the cloud is fundamentally different from traditional on-premises architectures. The AWS Cloud offers flexibility, elasticity, scalability, and reliability \u2014 but to take full advantage of these, solutions must be architected for the cloud . AWS provides design principles and a framework that guide architects in building secure, high-performing, resilient, and efficient infrastructure.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-9/m9_sec1/#what-is-cloud-architecture","text":"Cloud architecture defines how technologies and services within the cloud are structured and interact to meet business and technical requirements. It involves: - Designing distributed systems. - Defining how components communicate. - Planning for scalability, security, and cost-efficiency. - Using AWS managed services effectively. \ud83e\udde0 Goal: Build systems that are resilient , scalable , secure , and cost-optimized .","title":"\u2601\ufe0f What Is Cloud Architecture?"},{"location":"cloud-practitioner/module-9/m9_sec1/#traditional-vs-cloud-architectures","text":"Aspect Traditional (On-Premises) Cloud (AWS) Scalability Manual hardware provisioning. Automatic, elastic scaling (Auto Scaling, ECS, Lambda). Resilience Dependent on physical redundancy. Multi-AZ and Multi-Region redundancy. Cost Model Upfront CapEx. Pay-as-you-go OpEx. Management Manual updates and maintenance. Fully managed services and automation. Innovation Speed Slow, limited by hardware cycles. Rapid prototyping and deployment. \ud83e\udde0 Tip: Cloud-native systems are designed to adapt dynamically and fail gracefully .","title":"\ud83e\udde9 Traditional vs. Cloud Architectures"},{"location":"cloud-practitioner/module-9/m9_sec1/#aws-cloud-design-principles","text":"AWS defines several key design principles for building well-architected cloud solutions: Principle Description 1. Design for Failure Assume components will fail. Architect for redundancy and graceful recovery (e.g., Multi-AZ, Multi-Region). 2. Implement Elasticity Scale resources automatically to match demand using Auto Scaling or Lambda . 3. Leverage Managed Services Offload operational tasks (e.g., use RDS instead of self-managed databases). 4. Automate Everything Use AWS CloudFormation , CDK , or OpsWorks to deploy infrastructure as code. 5. Decouple Components Build loosely coupled systems using SQS , SNS , or EventBridge to improve fault tolerance. 6. Enable Security at Every Layer Apply defense in depth \u2014 IAM, security groups, encryption, WAF, and Shield. 7. Optimize for Cost Right-size resources, use Savings Plans , and monitor usage with Cost Explorer . 8. Design for Performance Use caching (CloudFront, ElastiCache), load balancing, and edge computing to reduce latency.","title":"\u2699\ufe0f AWS Cloud Design Principles"},{"location":"cloud-practitioner/module-9/m9_sec1/#the-aws-well-architected-framework","text":"AWS created the Well-Architected Framework to help customers evaluate and improve their cloud architectures. It consists of six pillars , each focusing on a critical area of system design. Pillar Focus Area Goal 1\ufe0f\u20e3 Operational Excellence Operations and continuous improvement. Enable agile operations and rapid recovery. 2\ufe0f\u20e3 Security Data protection and risk management. Safeguard systems and data. 3\ufe0f\u20e3 Reliability System availability and fault tolerance. Ensure workloads recover quickly from failures. 4\ufe0f\u20e3 Performance Efficiency Resource optimization and innovation. Use resources efficiently and adapt to change. 5\ufe0f\u20e3 Cost Optimization Value alignment and financial management. Deliver business value at minimal cost. 6\ufe0f\u20e3 Sustainability Environmental responsibility. Minimize environmental impact of workloads. \ud83e\udde0 Tip: Use the AWS Well-Architected Tool to review and continuously improve your workload designs.","title":"\ud83d\udd04 The AWS Well-Architected Framework"},{"location":"cloud-practitioner/module-9/m9_sec1/#well-architected-framework-in-practice","text":"","title":"\ud83e\uddf1 Well-Architected Framework in Practice"},{"location":"cloud-practitioner/module-9/m9_sec1/#operational-excellence","text":"Automate operations and infrastructure deployments. Use CloudFormation , CloudWatch , and Config to detect and respond to events. Continuously refine operations based on metrics and feedback.","title":"\ud83d\udd39 Operational Excellence"},{"location":"cloud-practitioner/module-9/m9_sec1/#security","text":"Apply least privilege with IAM. Encrypt data at rest and in transit. Monitor threats using GuardDuty , Security Hub , and Cloud","title":"\ud83d\udd39 Security"},{"location":"cloud-practitioner/module-9/m9_sec2/","text":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture 2\ufe0f\u20e3 Section 2: High Availability and Fault Tolerance \ud83d\udfe0 Introduction Modern applications must remain available and resilient even when components fail. In the AWS Cloud, you can design systems that withstand failures and recover automatically , achieving near-continuous uptime. Two key design concepts for this are: - High Availability (HA) - Fault Tolerance (FT) \u26a1 High Availability (HA) High Availability refers to systems designed to minimize downtime and recover quickly from failures. Goal: Keep your application accessible \u2014 even when components or AZs experience issues. \ud83e\uddf1 Core Principles Deploy across multiple Availability Zones (AZs) . Use load balancing to distribute traffic. Enable automatic failover and replication . Monitor and recover with CloudWatch , Health Checks , and Auto Scaling . Component High Availability Approach Compute Use Auto Scaling Groups across multiple AZs. Storage Use Multi-AZ services like S3, EFS, or Aurora. Networking Use Elastic Load Balancing and Route 53 failover routing. Database Deploy Multi-AZ RDS or Aurora replicas. Monitoring Set CloudWatch alarms and enable automated recovery actions. \ud83e\udde0 Example: A web app running on EC2 instances behind an Application Load Balancer (ALB) , distributed across two AZs with Auto Scaling . \ud83e\udde9 Fault Tolerance (FT) Fault Tolerance takes availability further \u2014 systems continue to operate without interruption even when one or more components fail. Goal: Eliminate single points of failure. \u2699\ufe0f Core Characteristics Redundant components (multiple instances, databases, and networks). Continuous operation through hardware or software failures. Often uses active-active configurations (multiple live systems). Component Fault-Tolerant Strategy Compute Use multiple EC2 instances across AZs or Regions. Storage S3 automatically replicates data across AZs. Database Aurora automatically replicates six copies across three AZs. DNS / Networking Route 53 provides health checks and automatic DNS failover. Global Applications Use Multi-Region architectures with replication and failover. \ud83e\udde0 Example: A Multi-Region Aurora Global Database continues to serve traffic even if one Region becomes unavailable. \ud83d\udd04 Comparing HA vs Fault Tolerance Aspect High Availability (HA) Fault Tolerance (FT) Goal Minimize downtime. Maintain continuous operation. Failure Response Detect and recover from failure. Continue operating seamlessly during failure. Implementation Multi-AZ deployments, load balancing. Multi-Region or redundant active-active systems. Cost Moderate. Higher (due to full redundancy). Use Case Web apps, databases with short recovery tolerance. Mission-critical systems (banking, healthcare). \ud83e\udde0 Tip: Choose fault tolerance only for the most critical workloads \u2014 it\u2019s more complex and expensive than standard HA. \ud83c\udf0d Multi-AZ and Multi-Region Architectures \ud83d\udd39 Multi-AZ Deploy resources in multiple Availability Zones within a Region. Protects against data center-level outages. Examples: RDS Multi-AZ ECS/EKS services deployed across AZs Load Balancers distributing across AZs \ud83d\udd39 Multi-Region Deploy workloads across multiple AWS Regions . Protects against Regional outages . Provides global performance with latency-based routing (Route 53). Enables disaster recovery through replication. \ud83e\udde0 Example: A global e-commerce app hosted in us-east-1 and eu-west-1 , with Route 53 routing traffic to the nearest healthy Region. \u2699\ufe0f AWS Services for High Availability and Fault Tolerance Service Function Elastic Load Balancing (ELB) Distributes traffic across multiple targets and AZs. Amazon Route 53 Provides DNS failover and latency-based routing. Amazon S3 Automatically stores data redundantly across multiple AZs. Amazon RDS / Aurora Multi-AZ deployments for database failover. AWS Auto Scaling Adjusts capacity automatically to maintain availability. Amazon CloudFront Edge caching to deliver content closer to users. Amazon CloudWatch Monitors performance and triggers recovery actions. AWS Backup Centralized backup management across Regions. \ud83e\uddf1 Design Example: Highly Available Web Application Architecture Overview: 1. Route 53 directs users to the closest healthy Region. 2. CloudFront CDN caches static content globally. 3. Elastic Load Balancer (ALB) routes traffic to EC2 instances across two AZs. 4. Auto Scaling Group adds/removes instances based on demand. 5. RDS Multi-AZ database ensures continuous availability. 6. S3 and EFS store static and shared data across AZs. 7. CloudWatch monitors health and triggers alerts or scaling actions. \ud83e\udde0 Result: The system remains operational even if an instance, AZ, or component fails. \ud83e\udde0 Key Takeaways High Availability (HA) ensures minimal downtime through redundancy and failover. Fault Tolerance (FT) enables continuous operation during failures via full redundancy. Use Multi-AZ for availability within a Region and Multi-Region for global resilience. Combine ELB, Auto Scaling, RDS Multi-AZ, Route 53 , and CloudWatch for end-to-end HA. Design applications to fail gracefully , self-heal , and recover automatically . Fault-tolerant designs cost more but are essential for mission-critical workloads .","title":"\u25fd\ufe0f Section 2 - High Availability and Fault Tolerance"},{"location":"cloud-practitioner/module-9/m9_sec2/#module-9-cloud-architecture","text":"","title":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture"},{"location":"cloud-practitioner/module-9/m9_sec2/#2-section-2-high-availability-and-fault-tolerance","text":"","title":"2\ufe0f\u20e3 Section 2: High Availability and Fault Tolerance"},{"location":"cloud-practitioner/module-9/m9_sec2/#introduction","text":"Modern applications must remain available and resilient even when components fail. In the AWS Cloud, you can design systems that withstand failures and recover automatically , achieving near-continuous uptime. Two key design concepts for this are: - High Availability (HA) - Fault Tolerance (FT)","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-9/m9_sec2/#high-availability-ha","text":"High Availability refers to systems designed to minimize downtime and recover quickly from failures. Goal: Keep your application accessible \u2014 even when components or AZs experience issues.","title":"\u26a1 High Availability (HA)"},{"location":"cloud-practitioner/module-9/m9_sec2/#core-principles","text":"Deploy across multiple Availability Zones (AZs) . Use load balancing to distribute traffic. Enable automatic failover and replication . Monitor and recover with CloudWatch , Health Checks , and Auto Scaling . Component High Availability Approach Compute Use Auto Scaling Groups across multiple AZs. Storage Use Multi-AZ services like S3, EFS, or Aurora. Networking Use Elastic Load Balancing and Route 53 failover routing. Database Deploy Multi-AZ RDS or Aurora replicas. Monitoring Set CloudWatch alarms and enable automated recovery actions. \ud83e\udde0 Example: A web app running on EC2 instances behind an Application Load Balancer (ALB) , distributed across two AZs with Auto Scaling .","title":"\ud83e\uddf1 Core Principles"},{"location":"cloud-practitioner/module-9/m9_sec2/#fault-tolerance-ft","text":"Fault Tolerance takes availability further \u2014 systems continue to operate without interruption even when one or more components fail. Goal: Eliminate single points of failure.","title":"\ud83e\udde9 Fault Tolerance (FT)"},{"location":"cloud-practitioner/module-9/m9_sec2/#core-characteristics","text":"Redundant components (multiple instances, databases, and networks). Continuous operation through hardware or software failures. Often uses active-active configurations (multiple live systems). Component Fault-Tolerant Strategy Compute Use multiple EC2 instances across AZs or Regions. Storage S3 automatically replicates data across AZs. Database Aurora automatically replicates six copies across three AZs. DNS / Networking Route 53 provides health checks and automatic DNS failover. Global Applications Use Multi-Region architectures with replication and failover. \ud83e\udde0 Example: A Multi-Region Aurora Global Database continues to serve traffic even if one Region becomes unavailable.","title":"\u2699\ufe0f Core Characteristics"},{"location":"cloud-practitioner/module-9/m9_sec2/#comparing-ha-vs-fault-tolerance","text":"Aspect High Availability (HA) Fault Tolerance (FT) Goal Minimize downtime. Maintain continuous operation. Failure Response Detect and recover from failure. Continue operating seamlessly during failure. Implementation Multi-AZ deployments, load balancing. Multi-Region or redundant active-active systems. Cost Moderate. Higher (due to full redundancy). Use Case Web apps, databases with short recovery tolerance. Mission-critical systems (banking, healthcare). \ud83e\udde0 Tip: Choose fault tolerance only for the most critical workloads \u2014 it\u2019s more complex and expensive than standard HA.","title":"\ud83d\udd04 Comparing HA vs Fault Tolerance"},{"location":"cloud-practitioner/module-9/m9_sec2/#multi-az-and-multi-region-architectures","text":"","title":"\ud83c\udf0d Multi-AZ and Multi-Region Architectures"},{"location":"cloud-practitioner/module-9/m9_sec2/#multi-az","text":"Deploy resources in multiple Availability Zones within a Region. Protects against data center-level outages. Examples: RDS Multi-AZ ECS/EKS services deployed across AZs Load Balancers distributing across AZs","title":"\ud83d\udd39 Multi-AZ"},{"location":"cloud-practitioner/module-9/m9_sec2/#multi-region","text":"Deploy workloads across multiple AWS Regions . Protects against Regional outages . Provides global performance with latency-based routing (Route 53). Enables disaster recovery through replication. \ud83e\udde0 Example: A global e-commerce app hosted in us-east-1 and eu-west-1 , with Route 53 routing traffic to the nearest healthy Region.","title":"\ud83d\udd39 Multi-Region"},{"location":"cloud-practitioner/module-9/m9_sec2/#aws-services-for-high-availability-and-fault-tolerance","text":"Service Function Elastic Load Balancing (ELB) Distributes traffic across multiple targets and AZs. Amazon Route 53 Provides DNS failover and latency-based routing. Amazon S3 Automatically stores data redundantly across multiple AZs. Amazon RDS / Aurora Multi-AZ deployments for database failover. AWS Auto Scaling Adjusts capacity automatically to maintain availability. Amazon CloudFront Edge caching to deliver content closer to users. Amazon CloudWatch Monitors performance and triggers recovery actions. AWS Backup Centralized backup management across Regions.","title":"\u2699\ufe0f AWS Services for High Availability and Fault Tolerance"},{"location":"cloud-practitioner/module-9/m9_sec2/#design-example-highly-available-web-application","text":"Architecture Overview: 1. Route 53 directs users to the closest healthy Region. 2. CloudFront CDN caches static content globally. 3. Elastic Load Balancer (ALB) routes traffic to EC2 instances across two AZs. 4. Auto Scaling Group adds/removes instances based on demand. 5. RDS Multi-AZ database ensures continuous availability. 6. S3 and EFS store static and shared data across AZs. 7. CloudWatch monitors health and triggers alerts or scaling actions. \ud83e\udde0 Result: The system remains operational even if an instance, AZ, or component fails.","title":"\ud83e\uddf1 Design Example: Highly Available Web Application"},{"location":"cloud-practitioner/module-9/m9_sec2/#key-takeaways","text":"High Availability (HA) ensures minimal downtime through redundancy and failover. Fault Tolerance (FT) enables continuous operation during failures via full redundancy. Use Multi-AZ for availability within a Region and Multi-Region for global resilience. Combine ELB, Auto Scaling, RDS Multi-AZ, Route 53 , and CloudWatch for end-to-end HA. Design applications to fail gracefully , self-heal , and recover automatically . Fault-tolerant designs cost more but are essential for mission-critical workloads .","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-9/m9_sec3/","text":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture 3\ufe0f\u20e3 Section 3: Elasticity and Scalability in the Cloud \ud83d\udfe0 Introduction One of the greatest advantages of cloud computing is the ability to scale resources dynamically . Instead of buying and maintaining fixed hardware, AWS enables you to scale up, scale down, or scale out automatically based on demand. Two key principles make this possible: - Elasticity \u2013 the ability to adjust capacity automatically. - Scalability \u2013 the ability to handle growth efficiently. \u26a1 What Is Elasticity? Elasticity is the ability of a system to automatically add or remove resources to match the current demand. Characteristic Description Automatic scaling Resources grow or shrink dynamically based on metrics (CPU, memory, traffic). Cost efficiency You pay only for what you use. Fast response Scaling occurs within minutes or seconds. Self-healing Resources automatically recover or replace failed components. \ud83e\udde0 Example: An e-commerce website automatically scales out additional EC2 instances when user traffic spikes during Black Friday, then scales in when traffic decreases. \ud83e\udde9 What Is Scalability? Scalability is the ability of a system to handle increasing workloads without sacrificing performance. There are two main types: Type Description Example Vertical Scaling (Scale Up/Down) Add more power (CPU, RAM, storage) to an existing instance. Resize an EC2 instance from t3.medium \u2192 t3.2xlarge. Horizontal Scaling (Scale Out/In) Add or remove multiple instances to distribute load. Add more EC2 instances in an Auto Scaling Group. \ud83e\udde0 Tip: Horizontal scaling improves availability and fault tolerance , while vertical scaling improves capacity per node . \u2699\ufe0f AWS Auto Scaling AWS Auto Scaling automatically adjusts compute resources to maintain performance and control costs. \ud83d\udd27 How It Works Define a scaling group (e.g., EC2 instances). Set policies and metrics (e.g., CPU > 70%). Auto Scaling launches or terminates instances to meet desired capacity. \ud83e\uddf0 Key Features Dynamic scaling: reacts to real-time metrics. Predictive scaling: forecasts future demand. Scheduled scaling: scales at specific times (e.g., business hours). Instance health checks: automatically replaces unhealthy instances. \ud83e\udde0 Example: A web app running behind an Application Load Balancer automatically scales between 2 and 20 EC2 instances. \u2699\ufe0f Elastic Load Balancing (ELB) Elastic Load Balancing distributes incoming application traffic across multiple targets (EC2, containers, IPs, or Lambda functions). \ud83d\udca1 Types of Load Balancers Type Best For Use Case Application Load Balancer (ALB) HTTP/HTTPS traffic Web apps and microservices. Network Load Balancer (NLB) TCP/UDP traffic Low-latency, high-throughput workloads. Gateway Load Balancer (GWLB) Third-party virtual appliances Firewalls and deep packet inspection. Classic Load Balancer (CLB) Legacy applications Simple load balancing across EC2 instances. \ud83e\udde0 Tip: Always deploy load balancers across multiple Availability Zones for high availability. \u2601\ufe0f Elasticity in Other AWS Services Elasticity isn\u2019t limited to compute \u2014 it\u2019s built into many AWS services: Service Elastic Behavior Amazon S3 Automatically scales to store unlimited data. Amazon RDS / Aurora Storage automatically scales up to 128 TB. Amazon DynamoDB On-demand capacity scales automatically. AWS Lambda Automatically runs code in parallel for each event trigger. Amazon CloudFront Scales edge caching globally for content delivery. \ud83e\udde0 Example: DynamoDB automatically increases throughput capacity when read/write requests spike. \ud83e\uddee Monitoring and Automation Elasticity and scalability depend on visibility and automation . AWS provides tools to monitor workloads and trigger scaling actions. Tool Purpose Amazon CloudWatch Collects and tracks metrics (CPU, latency, errors). AWS CloudTrail Logs API activity for governance and security. AWS Trusted Advisor Recommends optimizations for cost, performance, and reliability. AWS Auto Scaling Dashboard Centralized view of scaling policies and resource health. \ud83e\udde0 Tip: Combine CloudWatch alarms with Auto Scaling policies for a fully automated, responsive architecture. \ud83d\udd01 Design Example: Elastic and Scalable Architecture Route 53 routes users to the nearest healthy Region. CloudFront caches static content at edge locations. Application Load Balancer distributes traffic to EC2 instances across multiple AZs. Auto Scaling Group adjusts instance count automatically. RDS Multi-AZ scales read replicas for database performance. CloudWatch monitors utilization and triggers scaling events. \ud83e\udde0 Result: The system automatically scales to handle millions of requests during peak hours \u2014 then scales down to save cost. \ud83e\udde0 Key Takeaways Elasticity = automatically adjusting capacity in real time. Scalability = ability to handle growing workloads efficiently. Use Auto Scaling and Load Balancing to manage demand changes automatically. Apply elasticity to all layers \u2014 compute, storage, databases, and networking. Use CloudWatch , Trusted Advisor , and CloudTrail for monitoring and optimization. Design for both horizontal and vertical scaling depending on workload type. Elastic, scalable architectures improve performance, availability, and cost-efficiency.","title":"\u25fd\ufe0f Section 3 - Elasticity and Scalability in the Cloud"},{"location":"cloud-practitioner/module-9/m9_sec3/#module-9-cloud-architecture","text":"","title":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture"},{"location":"cloud-practitioner/module-9/m9_sec3/#3-section-3-elasticity-and-scalability-in-the-cloud","text":"","title":"3\ufe0f\u20e3 Section 3: Elasticity and Scalability in the Cloud"},{"location":"cloud-practitioner/module-9/m9_sec3/#introduction","text":"One of the greatest advantages of cloud computing is the ability to scale resources dynamically . Instead of buying and maintaining fixed hardware, AWS enables you to scale up, scale down, or scale out automatically based on demand. Two key principles make this possible: - Elasticity \u2013 the ability to adjust capacity automatically. - Scalability \u2013 the ability to handle growth efficiently.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-9/m9_sec3/#what-is-elasticity","text":"Elasticity is the ability of a system to automatically add or remove resources to match the current demand. Characteristic Description Automatic scaling Resources grow or shrink dynamically based on metrics (CPU, memory, traffic). Cost efficiency You pay only for what you use. Fast response Scaling occurs within minutes or seconds. Self-healing Resources automatically recover or replace failed components. \ud83e\udde0 Example: An e-commerce website automatically scales out additional EC2 instances when user traffic spikes during Black Friday, then scales in when traffic decreases.","title":"\u26a1 What Is Elasticity?"},{"location":"cloud-practitioner/module-9/m9_sec3/#what-is-scalability","text":"Scalability is the ability of a system to handle increasing workloads without sacrificing performance. There are two main types: Type Description Example Vertical Scaling (Scale Up/Down) Add more power (CPU, RAM, storage) to an existing instance. Resize an EC2 instance from t3.medium \u2192 t3.2xlarge. Horizontal Scaling (Scale Out/In) Add or remove multiple instances to distribute load. Add more EC2 instances in an Auto Scaling Group. \ud83e\udde0 Tip: Horizontal scaling improves availability and fault tolerance , while vertical scaling improves capacity per node .","title":"\ud83e\udde9 What Is Scalability?"},{"location":"cloud-practitioner/module-9/m9_sec3/#aws-auto-scaling","text":"AWS Auto Scaling automatically adjusts compute resources to maintain performance and control costs.","title":"\u2699\ufe0f AWS Auto Scaling"},{"location":"cloud-practitioner/module-9/m9_sec3/#how-it-works","text":"Define a scaling group (e.g., EC2 instances). Set policies and metrics (e.g., CPU > 70%). Auto Scaling launches or terminates instances to meet desired capacity.","title":"\ud83d\udd27 How It Works"},{"location":"cloud-practitioner/module-9/m9_sec3/#key-features","text":"Dynamic scaling: reacts to real-time metrics. Predictive scaling: forecasts future demand. Scheduled scaling: scales at specific times (e.g., business hours). Instance health checks: automatically replaces unhealthy instances. \ud83e\udde0 Example: A web app running behind an Application Load Balancer automatically scales between 2 and 20 EC2 instances.","title":"\ud83e\uddf0 Key Features"},{"location":"cloud-practitioner/module-9/m9_sec3/#elastic-load-balancing-elb","text":"Elastic Load Balancing distributes incoming application traffic across multiple targets (EC2, containers, IPs, or Lambda functions).","title":"\u2699\ufe0f Elastic Load Balancing (ELB)"},{"location":"cloud-practitioner/module-9/m9_sec3/#types-of-load-balancers","text":"Type Best For Use Case Application Load Balancer (ALB) HTTP/HTTPS traffic Web apps and microservices. Network Load Balancer (NLB) TCP/UDP traffic Low-latency, high-throughput workloads. Gateway Load Balancer (GWLB) Third-party virtual appliances Firewalls and deep packet inspection. Classic Load Balancer (CLB) Legacy applications Simple load balancing across EC2 instances. \ud83e\udde0 Tip: Always deploy load balancers across multiple Availability Zones for high availability.","title":"\ud83d\udca1 Types of Load Balancers"},{"location":"cloud-practitioner/module-9/m9_sec3/#elasticity-in-other-aws-services","text":"Elasticity isn\u2019t limited to compute \u2014 it\u2019s built into many AWS services: Service Elastic Behavior Amazon S3 Automatically scales to store unlimited data. Amazon RDS / Aurora Storage automatically scales up to 128 TB. Amazon DynamoDB On-demand capacity scales automatically. AWS Lambda Automatically runs code in parallel for each event trigger. Amazon CloudFront Scales edge caching globally for content delivery. \ud83e\udde0 Example: DynamoDB automatically increases throughput capacity when read/write requests spike.","title":"\u2601\ufe0f Elasticity in Other AWS Services"},{"location":"cloud-practitioner/module-9/m9_sec3/#monitoring-and-automation","text":"Elasticity and scalability depend on visibility and automation . AWS provides tools to monitor workloads and trigger scaling actions. Tool Purpose Amazon CloudWatch Collects and tracks metrics (CPU, latency, errors). AWS CloudTrail Logs API activity for governance and security. AWS Trusted Advisor Recommends optimizations for cost, performance, and reliability. AWS Auto Scaling Dashboard Centralized view of scaling policies and resource health. \ud83e\udde0 Tip: Combine CloudWatch alarms with Auto Scaling policies for a fully automated, responsive architecture.","title":"\ud83e\uddee Monitoring and Automation"},{"location":"cloud-practitioner/module-9/m9_sec3/#design-example-elastic-and-scalable-architecture","text":"Route 53 routes users to the nearest healthy Region. CloudFront caches static content at edge locations. Application Load Balancer distributes traffic to EC2 instances across multiple AZs. Auto Scaling Group adjusts instance count automatically. RDS Multi-AZ scales read replicas for database performance. CloudWatch monitors utilization and triggers scaling events. \ud83e\udde0 Result: The system automatically scales to handle millions of requests during peak hours \u2014 then scales down to save cost.","title":"\ud83d\udd01 Design Example: Elastic and Scalable Architecture"},{"location":"cloud-practitioner/module-9/m9_sec3/#key-takeaways","text":"Elasticity = automatically adjusting capacity in real time. Scalability = ability to handle growing workloads efficiently. Use Auto Scaling and Load Balancing to manage demand changes automatically. Apply elasticity to all layers \u2014 compute, storage, databases, and networking. Use CloudWatch , Trusted Advisor , and CloudTrail for monitoring and optimization. Design for both horizontal and vertical scaling depending on workload type. Elastic, scalable architectures improve performance, availability, and cost-efficiency.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-9/m9_sec4/","text":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture 4\ufe0f\u20e3 Section 4: Loose Coupling and Microservices Architecture \ud83d\udfe0 Introduction Traditional monolithic applications are often tightly coupled \u2014 meaning each component depends on others to function. If one part fails, the entire system can be affected. In contrast, loosely coupled architectures allow components to operate independently , improving scalability , resilience , and agility . This principle is the foundation of microservices architecture \u2014 a key design pattern in cloud-native development. \ud83e\udde9 What Is Loose Coupling? Loose coupling means designing systems where components interact through well-defined interfaces rather than direct dependencies. Each service or component can change, scale, or fail without impacting others. Characteristic Description Independence Components can evolve or scale independently. Flexibility Easier to modify or replace services. Resilience One component\u2019s failure doesn\u2019t crash the whole system. Scalability Each service can scale based on its workload. \ud83e\udde0 Example: A payment processing system can remain operational even if the user notification service is temporarily down. \u2699\ufe0f Decoupling Mechanisms in AWS AWS provides several services to help decouple system components effectively. Service Purpose Use Case Amazon Simple Queue Service (SQS) Message queue between components. Buffer orders between front-end and processing service. Amazon Simple Notification Service (SNS) Publish/subscribe messaging for fan-out communication. Notify multiple systems when an event occurs. Amazon EventBridge Event bus for event-driven architectures. Route events between microservices automatically. Amazon Kinesis Real-time data streaming service. Stream logs, metrics, or IoT data for analytics. \ud83e\udde0 Tip: Decouple communication between services to improve performance, reliability, and scalability. \ud83d\udd78\ufe0f Microservices Architecture Microservices architecture breaks down applications into small, independent services that communicate over APIs. Each microservice: - Handles a specific business function (e.g., authentication, billing, catalog). - Has its own data store and deployment lifecycle. - Can be developed, deployed, and scaled independently. - Communicates using HTTP APIs , events , or messages . \ud83e\udde0 Example: Amazon.com\u2019s architecture is made up of hundreds of microservices \u2014 each managing a specific function like search, checkout, or recommendations. \ud83e\uddf1 Microservices vs Monolithic Architectures Aspect Monolithic Architecture Microservices Architecture Structure Single codebase and database. Multiple independent services. Deployment All components deployed together. Each service deployed independently. Scalability Scales as a whole (inefficient). Scales per service based on demand. Resilience One failure can bring down the app. Failures isolated to one service. Development Tight coupling between teams. Independent, agile teams per service. Technology Stack Typically one tech stack. Services can use different languages and tools. \ud83e\udde0 Tip: Microservices enhance agility but require strong observability, automation, and communication strategies. \u2601\ufe0f AWS Services for Microservices Architectures Category Service Purpose Compute AWS Lambda, ECS, EKS Run microservices with containers or serverless functions. Messaging SQS, SNS, EventBridge Enable asynchronous communication between services. API Management Amazon API Gateway Expose, secure, and manage REST or WebSocket APIs. Service Discovery AWS Cloud Map Track and discover microservice endpoints dynamically. Monitoring Amazon CloudWatch, X-Ray Trace performance and monitor microservice interactions. Security IAM, Cognito, WAF, Shield Control access and protect APIs and data. \ud83e\udde0 Example: A serverless e-commerce app: - API Gateway handles user requests. - Lambda functions process logic for checkout, payments, and shipping. - SQS queues messages for asynchronous order fulfillment. - SNS notifies customers when an order ships. \ud83e\uddee Benefits of Loose Coupling and Microservices Benefit Description Resilience Failures isolated to one component; system continues running. Scalability Each service scales independently. Agility Faster development and deployment cycles. Flexibility Use the best technology for each service. Cost Efficiency Scale only the services that need more capacity. \ud83e\udde0 Tip: Pair microservices with CI/CD pipelines and Infrastructure as Code (IaC) for continuous innovation and stability. \u26a0\ufe0f Challenges and Best Practices Challenges Increased complexity (more services = more monitoring). Requires distributed tracing for debugging. More overhead for security and communication . Best Practices Implement observability (CloudWatch, X-Ray, OpenTelemetry). Use centralized logging for visibility. Secure each API/service with IAM roles and least privilege . Automate deployments with AWS CodePipeline and CloudFormation . Use service mesh patterns (e.g., App Mesh) for consistent service-to-service communication. \ud83e\udde0 Key Takeaways Loose coupling improves resilience, scalability, and agility . Microservices break large systems into independent, deployable services. Use SQS, SNS, and EventBridge to decouple communication. API Gateway centralizes and secures external interactions. Combine with Lambda, ECS, or EKS for scalable compute options. Monitor and trace interactions with CloudWatch and X-Ray . Follow best practices for security, automation, and observability to manage complexity effectively.","title":"\u25fd\ufe0f Section 4 - Loose Coupling and Microservices Architecture"},{"location":"cloud-practitioner/module-9/m9_sec4/#module-9-cloud-architecture","text":"","title":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture"},{"location":"cloud-practitioner/module-9/m9_sec4/#4-section-4-loose-coupling-and-microservices-architecture","text":"","title":"4\ufe0f\u20e3 Section 4: Loose Coupling and Microservices Architecture"},{"location":"cloud-practitioner/module-9/m9_sec4/#introduction","text":"Traditional monolithic applications are often tightly coupled \u2014 meaning each component depends on others to function. If one part fails, the entire system can be affected. In contrast, loosely coupled architectures allow components to operate independently , improving scalability , resilience , and agility . This principle is the foundation of microservices architecture \u2014 a key design pattern in cloud-native development.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-9/m9_sec4/#what-is-loose-coupling","text":"Loose coupling means designing systems where components interact through well-defined interfaces rather than direct dependencies. Each service or component can change, scale, or fail without impacting others. Characteristic Description Independence Components can evolve or scale independently. Flexibility Easier to modify or replace services. Resilience One component\u2019s failure doesn\u2019t crash the whole system. Scalability Each service can scale based on its workload. \ud83e\udde0 Example: A payment processing system can remain operational even if the user notification service is temporarily down.","title":"\ud83e\udde9 What Is Loose Coupling?"},{"location":"cloud-practitioner/module-9/m9_sec4/#decoupling-mechanisms-in-aws","text":"AWS provides several services to help decouple system components effectively. Service Purpose Use Case Amazon Simple Queue Service (SQS) Message queue between components. Buffer orders between front-end and processing service. Amazon Simple Notification Service (SNS) Publish/subscribe messaging for fan-out communication. Notify multiple systems when an event occurs. Amazon EventBridge Event bus for event-driven architectures. Route events between microservices automatically. Amazon Kinesis Real-time data streaming service. Stream logs, metrics, or IoT data for analytics. \ud83e\udde0 Tip: Decouple communication between services to improve performance, reliability, and scalability.","title":"\u2699\ufe0f Decoupling Mechanisms in AWS"},{"location":"cloud-practitioner/module-9/m9_sec4/#microservices-architecture","text":"Microservices architecture breaks down applications into small, independent services that communicate over APIs. Each microservice: - Handles a specific business function (e.g., authentication, billing, catalog). - Has its own data store and deployment lifecycle. - Can be developed, deployed, and scaled independently. - Communicates using HTTP APIs , events , or messages . \ud83e\udde0 Example: Amazon.com\u2019s architecture is made up of hundreds of microservices \u2014 each managing a specific function like search, checkout, or recommendations.","title":"\ud83d\udd78\ufe0f Microservices Architecture"},{"location":"cloud-practitioner/module-9/m9_sec4/#microservices-vs-monolithic-architectures","text":"Aspect Monolithic Architecture Microservices Architecture Structure Single codebase and database. Multiple independent services. Deployment All components deployed together. Each service deployed independently. Scalability Scales as a whole (inefficient). Scales per service based on demand. Resilience One failure can bring down the app. Failures isolated to one service. Development Tight coupling between teams. Independent, agile teams per service. Technology Stack Typically one tech stack. Services can use different languages and tools. \ud83e\udde0 Tip: Microservices enhance agility but require strong observability, automation, and communication strategies.","title":"\ud83e\uddf1 Microservices vs Monolithic Architectures"},{"location":"cloud-practitioner/module-9/m9_sec4/#aws-services-for-microservices-architectures","text":"Category Service Purpose Compute AWS Lambda, ECS, EKS Run microservices with containers or serverless functions. Messaging SQS, SNS, EventBridge Enable asynchronous communication between services. API Management Amazon API Gateway Expose, secure, and manage REST or WebSocket APIs. Service Discovery AWS Cloud Map Track and discover microservice endpoints dynamically. Monitoring Amazon CloudWatch, X-Ray Trace performance and monitor microservice interactions. Security IAM, Cognito, WAF, Shield Control access and protect APIs and data. \ud83e\udde0 Example: A serverless e-commerce app: - API Gateway handles user requests. - Lambda functions process logic for checkout, payments, and shipping. - SQS queues messages for asynchronous order fulfillment. - SNS notifies customers when an order ships.","title":"\u2601\ufe0f AWS Services for Microservices Architectures"},{"location":"cloud-practitioner/module-9/m9_sec4/#benefits-of-loose-coupling-and-microservices","text":"Benefit Description Resilience Failures isolated to one component; system continues running. Scalability Each service scales independently. Agility Faster development and deployment cycles. Flexibility Use the best technology for each service. Cost Efficiency Scale only the services that need more capacity. \ud83e\udde0 Tip: Pair microservices with CI/CD pipelines and Infrastructure as Code (IaC) for continuous innovation and stability.","title":"\ud83e\uddee Benefits of Loose Coupling and Microservices"},{"location":"cloud-practitioner/module-9/m9_sec4/#challenges-and-best-practices","text":"","title":"\u26a0\ufe0f Challenges and Best Practices"},{"location":"cloud-practitioner/module-9/m9_sec4/#challenges","text":"Increased complexity (more services = more monitoring). Requires distributed tracing for debugging. More overhead for security and communication .","title":"Challenges"},{"location":"cloud-practitioner/module-9/m9_sec4/#best-practices","text":"Implement observability (CloudWatch, X-Ray, OpenTelemetry). Use centralized logging for visibility. Secure each API/service with IAM roles and least privilege . Automate deployments with AWS CodePipeline and CloudFormation . Use service mesh patterns (e.g., App Mesh) for consistent service-to-service communication.","title":"Best Practices"},{"location":"cloud-practitioner/module-9/m9_sec4/#key-takeaways","text":"Loose coupling improves resilience, scalability, and agility . Microservices break large systems into independent, deployable services. Use SQS, SNS, and EventBridge to decouple communication. API Gateway centralizes and secures external interactions. Combine with Lambda, ECS, or EKS for scalable compute options. Monitor and trace interactions with CloudWatch and X-Ray . Follow best practices for security, automation, and observability to manage complexity effectively.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-9/m9_sec5/","text":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture 5\ufe0f\u20e3 Section 5: AWS Global Infrastructure and Edge Services \ud83d\udfe0 Introduction AWS operates the world\u2019s largest and most reliable global cloud infrastructure , designed for high availability , low latency , and security . It allows you to deploy applications closer to users, meet data residency requirements, and build resilient global architectures . This section explains how the AWS Global Infrastructure works \u2014 including Regions , Availability Zones (AZs) , Edge Locations , and Edge Services like CloudFront , Global Accelerator , and Outposts . \ud83c\udf0e AWS Global Infrastructure Overview AWS infrastructure is made up of several layers that provide global reach, redundancy, and performance: Component Description Region A physical location in the world where AWS has multiple Availability Zones. Availability Zone (AZ) One or more data centers with independent power, networking, and connectivity within a Region. Edge Location Data center used by Amazon CloudFront to cache content closer to users. Local Zone Brings AWS compute, storage, and database services closer to large population centers for low latency. Wavelength Zone Integrates AWS services into 5G networks for ultra-low latency. \ud83e\udde0 Tip: AWS operates hundreds of data centers across 32+ Regions and 100+ AZs (and growing). \ud83d\uddfa\ufe0f AWS Regions A Region is a geographical area containing multiple, isolated Availability Zones . \ud83d\udd39 Key Characteristics Each Region is completely independent \u2014 for data sovereignty and fault isolation. Regions are connected through the AWS global network backbone . Customers choose Regions based on: Proximity to users (for low latency). Data residency and compliance requirements. Service availability and cost . \ud83e\udde0 Example: A European company may choose eu-west-1 (Ireland) to comply with EU data laws. \ud83c\udfe2 Availability Zones (AZs) Availability Zones are the building blocks of AWS Regions. Each Region contains two or more AZs that are physically separate but interconnected with high-speed, low-latency networks. \u2699\ufe0f Characteristics Each AZ has independent power, cooling, and networking . Connected through redundant, private fiber with <2 ms latency. Enable fault-tolerant and high-availability architectures by distributing workloads across AZs. \ud83e\udde0 Example: Deploying EC2 instances in multiple AZs within the same Region ensures your application stays online even if one data center fails. \ud83c\udf10 Edge Locations Edge Locations are data centers that cache copies of your application\u2019s content closer to end users. They form part of the Amazon CloudFront content delivery network (CDN). Feature Description Caching Stores copies of static and dynamic content closer to users. Performance Reduces latency and improves load times. Global Reach 400+ Edge Locations in 90+ cities worldwide. \ud83e\udde0 Tip: Users\u2019 requests automatically route to the nearest Edge Location , minimizing latency. \ud83e\uddf0 AWS Edge and Hybrid Services AWS provides edge computing services to extend the cloud closer to end users and on-premises environments. Service Description Use Case Amazon CloudFront Content Delivery Network (CDN) that caches and delivers web content via Edge Locations. Websites, APIs, video streaming. AWS Global Accelerator Uses AWS\u2019s global network to improve performance and availability for global applications. Low-latency access to multi-Region apps. AWS Outposts Brings AWS infrastructure and services on-premises for consistent hybrid operations. On-prem apps needing local data processing. AWS Local Zones Extend AWS services closer to major population centers. Gaming, media, real-time apps needing sub-10ms latency. AWS Wavelength Embeds AWS compute and storage within 5G networks for ultra-low latency. IoT, AR/VR, mobile edge computing. AWS Snow Family Portable edge devices for offline or disconnected environments. Remote data collection and migration. \ud83e\udde0 Example: A video streaming platform uses CloudFront to deliver content from global Edge Locations while Global Accelerator ensures fast connections to backend APIs. \u2699\ufe0f Amazon CloudFront (Content Delivery Network) CloudFront accelerates the delivery of content to users by caching it at Edge Locations. \ud83d\udca1 Key Features Delivers static (HTML, CSS) and dynamic (API responses) content. Integrates with S3 , EC2 , and Load Balancers as origins. Supports HTTPS , geo-restrictions , and signed URLs . Provides DDoS protection with AWS Shield and WAF integration. Monitored through CloudWatch for real-time metrics. \ud83e\udde0 Benefit: Improves global performance, reduces server load, and lowers data transfer costs. \ud83c\udf0d AWS Global Accelerator AWS Global Accelerator optimizes routing of user traffic to the closest AWS endpoint using the AWS global network instead of the public internet. \u2699\ufe0f Key Benefits Improves availability with automatic health checks and failover. Reduces latency by routing through AWS backbone network. Provides two static IP addresses for simplified global access. Integrates with EC2 , ALB/NLB , and Elastic IPs . \ud83e\udde0 Example: A global e-commerce website uses Global Accelerator to route customers to the nearest healthy Region for faster checkout. \ud83c\udfe0 AWS Outposts and Local Zones Service Description Best For AWS Outposts Extends AWS infrastructure, APIs, and tools into on-prem data centers. Hybrid workloads requiring local data processing. Local Zones AWS compute, storage, and database services deployed near large metro areas. Low-latency applications (gaming, rendering, streaming). \ud83e\udde0 Tip: Combine Outposts for on-prem compute and CloudFront for global edge distribution . \ud83d\udce1 AWS Wavelength AWS Wavelength brings AWS compute and storage services into 5G networks , enabling ultra-low-latency applications. \ud83d\udca1 Use Cases Augmented/Virtual Reality (AR/VR). Autonomous vehicles. IoT analytics at the network edge. Real-time video streaming. \ud83e\udde0 Example: A mobile gaming company runs its backend on Wavelength Zones to deliver millisecond response times to players. \ud83e\udde0 Key Takeaways The AWS Global Infrastructure provides the foundation for high availability, low latency, and fault tolerance worldwide. Regions = isolated geographical areas; AZs = redundant data centers within Regions. Edge Locations power CloudFront , caching content close to users for performance. Global Accelerator , Local Zones , Outposts , and Wavelength extend AWS services globally and locally. Choose Regions strategically based on latency , compliance , and cost . Use multi-Region architectures for global resilience and edge services for faster content delivery.","title":"\u25fd\ufe0f Section 5 - AWS Global Infrastructure and Edge Services"},{"location":"cloud-practitioner/module-9/m9_sec5/#module-9-cloud-architecture","text":"","title":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture"},{"location":"cloud-practitioner/module-9/m9_sec5/#5-section-5-aws-global-infrastructure-and-edge-services","text":"","title":"5\ufe0f\u20e3 Section 5: AWS Global Infrastructure and Edge Services"},{"location":"cloud-practitioner/module-9/m9_sec5/#introduction","text":"AWS operates the world\u2019s largest and most reliable global cloud infrastructure , designed for high availability , low latency , and security . It allows you to deploy applications closer to users, meet data residency requirements, and build resilient global architectures . This section explains how the AWS Global Infrastructure works \u2014 including Regions , Availability Zones (AZs) , Edge Locations , and Edge Services like CloudFront , Global Accelerator , and Outposts .","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-9/m9_sec5/#aws-global-infrastructure-overview","text":"AWS infrastructure is made up of several layers that provide global reach, redundancy, and performance: Component Description Region A physical location in the world where AWS has multiple Availability Zones. Availability Zone (AZ) One or more data centers with independent power, networking, and connectivity within a Region. Edge Location Data center used by Amazon CloudFront to cache content closer to users. Local Zone Brings AWS compute, storage, and database services closer to large population centers for low latency. Wavelength Zone Integrates AWS services into 5G networks for ultra-low latency. \ud83e\udde0 Tip: AWS operates hundreds of data centers across 32+ Regions and 100+ AZs (and growing).","title":"\ud83c\udf0e AWS Global Infrastructure Overview"},{"location":"cloud-practitioner/module-9/m9_sec5/#aws-regions","text":"A Region is a geographical area containing multiple, isolated Availability Zones .","title":"\ud83d\uddfa\ufe0f AWS Regions"},{"location":"cloud-practitioner/module-9/m9_sec5/#key-characteristics","text":"Each Region is completely independent \u2014 for data sovereignty and fault isolation. Regions are connected through the AWS global network backbone . Customers choose Regions based on: Proximity to users (for low latency). Data residency and compliance requirements. Service availability and cost . \ud83e\udde0 Example: A European company may choose eu-west-1 (Ireland) to comply with EU data laws.","title":"\ud83d\udd39 Key Characteristics"},{"location":"cloud-practitioner/module-9/m9_sec5/#availability-zones-azs","text":"Availability Zones are the building blocks of AWS Regions. Each Region contains two or more AZs that are physically separate but interconnected with high-speed, low-latency networks.","title":"\ud83c\udfe2 Availability Zones (AZs)"},{"location":"cloud-practitioner/module-9/m9_sec5/#characteristics","text":"Each AZ has independent power, cooling, and networking . Connected through redundant, private fiber with <2 ms latency. Enable fault-tolerant and high-availability architectures by distributing workloads across AZs. \ud83e\udde0 Example: Deploying EC2 instances in multiple AZs within the same Region ensures your application stays online even if one data center fails.","title":"\u2699\ufe0f Characteristics"},{"location":"cloud-practitioner/module-9/m9_sec5/#edge-locations","text":"Edge Locations are data centers that cache copies of your application\u2019s content closer to end users. They form part of the Amazon CloudFront content delivery network (CDN). Feature Description Caching Stores copies of static and dynamic content closer to users. Performance Reduces latency and improves load times. Global Reach 400+ Edge Locations in 90+ cities worldwide. \ud83e\udde0 Tip: Users\u2019 requests automatically route to the nearest Edge Location , minimizing latency.","title":"\ud83c\udf10 Edge Locations"},{"location":"cloud-practitioner/module-9/m9_sec5/#aws-edge-and-hybrid-services","text":"AWS provides edge computing services to extend the cloud closer to end users and on-premises environments. Service Description Use Case Amazon CloudFront Content Delivery Network (CDN) that caches and delivers web content via Edge Locations. Websites, APIs, video streaming. AWS Global Accelerator Uses AWS\u2019s global network to improve performance and availability for global applications. Low-latency access to multi-Region apps. AWS Outposts Brings AWS infrastructure and services on-premises for consistent hybrid operations. On-prem apps needing local data processing. AWS Local Zones Extend AWS services closer to major population centers. Gaming, media, real-time apps needing sub-10ms latency. AWS Wavelength Embeds AWS compute and storage within 5G networks for ultra-low latency. IoT, AR/VR, mobile edge computing. AWS Snow Family Portable edge devices for offline or disconnected environments. Remote data collection and migration. \ud83e\udde0 Example: A video streaming platform uses CloudFront to deliver content from global Edge Locations while Global Accelerator ensures fast connections to backend APIs.","title":"\ud83e\uddf0 AWS Edge and Hybrid Services"},{"location":"cloud-practitioner/module-9/m9_sec5/#amazon-cloudfront-content-delivery-network","text":"CloudFront accelerates the delivery of content to users by caching it at Edge Locations.","title":"\u2699\ufe0f Amazon CloudFront (Content Delivery Network)"},{"location":"cloud-practitioner/module-9/m9_sec5/#key-features","text":"Delivers static (HTML, CSS) and dynamic (API responses) content. Integrates with S3 , EC2 , and Load Balancers as origins. Supports HTTPS , geo-restrictions , and signed URLs . Provides DDoS protection with AWS Shield and WAF integration. Monitored through CloudWatch for real-time metrics. \ud83e\udde0 Benefit: Improves global performance, reduces server load, and lowers data transfer costs.","title":"\ud83d\udca1 Key Features"},{"location":"cloud-practitioner/module-9/m9_sec5/#aws-global-accelerator","text":"AWS Global Accelerator optimizes routing of user traffic to the closest AWS endpoint using the AWS global network instead of the public internet.","title":"\ud83c\udf0d AWS Global Accelerator"},{"location":"cloud-practitioner/module-9/m9_sec5/#key-benefits","text":"Improves availability with automatic health checks and failover. Reduces latency by routing through AWS backbone network. Provides two static IP addresses for simplified global access. Integrates with EC2 , ALB/NLB , and Elastic IPs . \ud83e\udde0 Example: A global e-commerce website uses Global Accelerator to route customers to the nearest healthy Region for faster checkout.","title":"\u2699\ufe0f Key Benefits"},{"location":"cloud-practitioner/module-9/m9_sec5/#aws-outposts-and-local-zones","text":"Service Description Best For AWS Outposts Extends AWS infrastructure, APIs, and tools into on-prem data centers. Hybrid workloads requiring local data processing. Local Zones AWS compute, storage, and database services deployed near large metro areas. Low-latency applications (gaming, rendering, streaming). \ud83e\udde0 Tip: Combine Outposts for on-prem compute and CloudFront for global edge distribution .","title":"\ud83c\udfe0 AWS Outposts and Local Zones"},{"location":"cloud-practitioner/module-9/m9_sec5/#aws-wavelength","text":"AWS Wavelength brings AWS compute and storage services into 5G networks , enabling ultra-low-latency applications.","title":"\ud83d\udce1 AWS Wavelength"},{"location":"cloud-practitioner/module-9/m9_sec5/#use-cases","text":"Augmented/Virtual Reality (AR/VR). Autonomous vehicles. IoT analytics at the network edge. Real-time video streaming. \ud83e\udde0 Example: A mobile gaming company runs its backend on Wavelength Zones to deliver millisecond response times to players.","title":"\ud83d\udca1 Use Cases"},{"location":"cloud-practitioner/module-9/m9_sec5/#key-takeaways","text":"The AWS Global Infrastructure provides the foundation for high availability, low latency, and fault tolerance worldwide. Regions = isolated geographical areas; AZs = redundant data centers within Regions. Edge Locations power CloudFront , caching content close to users for performance. Global Accelerator , Local Zones , Outposts , and Wavelength extend AWS services globally and locally. Choose Regions strategically based on latency , compliance , and cost . Use multi-Region architectures for global resilience and edge services for faster content delivery.","title":"\ud83e\udde0 Key Takeaways"},{"location":"cloud-practitioner/module-9/m9_sec6/","text":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture 6\ufe0f\u20e3 Section 6: Designing for Security and Compliance in the Cloud \ud83d\udfe0 Introduction Security is the top priority at AWS and a shared responsibility between AWS and the customer. When designing architectures in the cloud, you must implement defense in depth , encryption , and access control across every layer. AWS provides numerous services, tools, and best practices to help you design secure, compliant, and auditable cloud environments. \ud83e\udde9 The Shared Responsibility Model In the AWS Cloud, security and compliance responsibilities are shared between AWS and the customer. Responsibility AWS Customer Infrastructure Security Secures the physical facilities, hardware, and global network. Configures resources securely (IAM, networking, encryption). Compute and Storage Manages the host operating systems and virtualization layers. Manages guest OS, applications, and data access. Networking Protects global backbone and routing. Configures firewalls, VPC security groups, and NACLs. Data Provides encryption and storage isolation. Classifies and controls access to data. \ud83e\udde0 Tip: AWS secures the cloud , while customers secure what\u2019s in the cloud . \ud83d\udd10 Security by Design AWS encourages security to be built into every layer of your architecture. Key Security Design Principles Principle Description 1. Implement Least Privilege Give users and applications only the permissions they need. 2. Enable Traceability Use logging and monitoring (CloudTrail, Config) for visibility. 3. Apply Defense in Depth Layer security controls (network, IAM, encryption, application). 4. Automate Security Tasks Use infrastructure as code (IaC) and automated remediation. 5. Protect Data in Transit and at Rest Use TLS, SSE-KMS, or client-side encryption. 6. Prepare for Security Events Enable alerts, incident response plans, and recovery processes. \ud83e\udde0 Best Practice: Automate security using AWS Config Rules , GuardDuty , and Security Hub . \ud83d\udee1\ufe0f Identity and Access Management (IAM) AWS Identity and Access Management (IAM) allows you to control who can access your AWS resources and how. \ud83d\udd27 Core Features Users and Groups: Define individual or team access. Roles: Grant temporary permissions for AWS services or federated identities. Policies: JSON documents that define permissions (allow or deny actions). Access Keys and MFA: Enable secure authentication. IAM Identity Center (SSO): Centralized access for enterprise users. \ud83e\udde0 Tip: Always apply least privilege , use IAM roles instead of long-term keys, and enable MFA for all accounts. \ud83c\udf10 Network Security AWS networking services enable you to secure data traffic and isolate resources . Service / Feature Purpose Amazon VPC Create isolated virtual networks. Security Groups Instance-level virtual firewalls. Network ACLs (NACLs) Subnet-level traffic filtering. VPC Peering / PrivateLink Secure, private communication between VPCs or services. AWS Shield Managed DDoS protection. AWS WAF (Web Application Firewall) Protects against web exploits and attacks. \ud83e\udde0 Example: Combine VPC , Security Groups , and WAF to secure your public-facing web applications. \ud83e\uddf1 Data Protection and Encryption AWS provides encryption at rest and in transit for all major services. Service Encryption Options Managed By Amazon S3 SSE-S3, SSE-KMS, SSE-C, client-side. Customer / AWS. Amazon EBS / RDS / DynamoDB KMS-managed encryption. Customer. AWS KMS (Key Management Service) Centralized key management with audit logs. Customer. AWS Certificate Manager (ACM) Provision and manage SSL/TLS certificates. AWS. \ud83e\udde0 Tip: Use AWS KMS for unified key management and ACM for secure HTTPS endpoints. \ud83e\uddee Security Monitoring and Threat Detection Service Function AWS CloudTrail Logs all API calls and user actions. AWS Config Tracks configuration changes and compliance. Amazon CloudWatch Monitors performance metrics and sets alerts. Amazon GuardDuty Detects malicious activity and anomalies. AWS Security Hub Centralized security visibility and best practice checks. AWS Detective Investigates security findings with context. \ud83e\udde0 Best Practice: Enable GuardDuty , Config , and CloudTrail in all accounts by default. \ud83d\udcdc Compliance and Governance AWS adheres to numerous global compliance standards and frameworks, helping customers meet their own regulatory obligations. Framework / Standard Purpose ISO 27001 / 27017 / 27018 Information security management and cloud privacy. SOC 1, SOC 2, SOC 3 Internal control and security reporting. PCI DSS Secure handling of payment card data. HIPAA Protects healthcare information. FedRAMP Federal government compliance in the U.S. GDPR EU data privacy regulation. \ud83e\udde0 Tip: Use AWS Artifact to download compliance reports and certifications. \u2699\ufe0f Automation and Security at Scale Automation ensures consistent and repeatable security configurations across accounts and Regions. AWS Tools for Security Automation AWS CloudFormation \u2013 Deploy secure infrastructure as code. AWS Systems Manager (SSM) \u2013 Patch and configure systems automatically. AWS Organizations & SCPs \u2013 Enforce policies across multiple accounts. AWS Control Tower \u2013 Automate account setup and guardrails. \ud83e\udde0 Example: Automatically deploy a compliant landing zone using Control Tower with predefined security guardrails . \ud83e\udde0 Key Takeaways AWS and customers share security responsibilities \u2014 AWS secures the cloud , you secure your data and configurations . Implement defense in depth with IAM, encryption, and network isolation. Automate security controls and auditing using Config , GuardDuty , CloudTrail , and Security Hub . Use KMS and ACM for encryption and certificate management. Design architectures that meet compliance standards (ISO, SOC, PCI, HIPAA, GDPR). Build security into every stage of development \u2014 automate wherever possible. Always apply the principle of least privilege and enable multi-factor authentication (MFA) for all users.","title":"\u25fd\ufe0f Section 6 - Designing for Security and Compliance in the Cloud"},{"location":"cloud-practitioner/module-9/m9_sec6/#module-9-cloud-architecture","text":"","title":"\ud83c\udfd7\ufe0f Module 9 - Cloud Architecture"},{"location":"cloud-practitioner/module-9/m9_sec6/#6-section-6-designing-for-security-and-compliance-in-the-cloud","text":"","title":"6\ufe0f\u20e3 Section 6: Designing for Security and Compliance in the Cloud"},{"location":"cloud-practitioner/module-9/m9_sec6/#introduction","text":"Security is the top priority at AWS and a shared responsibility between AWS and the customer. When designing architectures in the cloud, you must implement defense in depth , encryption , and access control across every layer. AWS provides numerous services, tools, and best practices to help you design secure, compliant, and auditable cloud environments.","title":"\ud83d\udfe0 Introduction"},{"location":"cloud-practitioner/module-9/m9_sec6/#the-shared-responsibility-model","text":"In the AWS Cloud, security and compliance responsibilities are shared between AWS and the customer. Responsibility AWS Customer Infrastructure Security Secures the physical facilities, hardware, and global network. Configures resources securely (IAM, networking, encryption). Compute and Storage Manages the host operating systems and virtualization layers. Manages guest OS, applications, and data access. Networking Protects global backbone and routing. Configures firewalls, VPC security groups, and NACLs. Data Provides encryption and storage isolation. Classifies and controls access to data. \ud83e\udde0 Tip: AWS secures the cloud , while customers secure what\u2019s in the cloud .","title":"\ud83e\udde9 The Shared Responsibility Model"},{"location":"cloud-practitioner/module-9/m9_sec6/#security-by-design","text":"AWS encourages security to be built into every layer of your architecture.","title":"\ud83d\udd10 Security by Design"},{"location":"cloud-practitioner/module-9/m9_sec6/#key-security-design-principles","text":"Principle Description 1. Implement Least Privilege Give users and applications only the permissions they need. 2. Enable Traceability Use logging and monitoring (CloudTrail, Config) for visibility. 3. Apply Defense in Depth Layer security controls (network, IAM, encryption, application). 4. Automate Security Tasks Use infrastructure as code (IaC) and automated remediation. 5. Protect Data in Transit and at Rest Use TLS, SSE-KMS, or client-side encryption. 6. Prepare for Security Events Enable alerts, incident response plans, and recovery processes. \ud83e\udde0 Best Practice: Automate security using AWS Config Rules , GuardDuty , and Security Hub .","title":"Key Security Design Principles"},{"location":"cloud-practitioner/module-9/m9_sec6/#identity-and-access-management-iam","text":"AWS Identity and Access Management (IAM) allows you to control who can access your AWS resources and how.","title":"\ud83d\udee1\ufe0f Identity and Access Management (IAM)"},{"location":"cloud-practitioner/module-9/m9_sec6/#core-features","text":"Users and Groups: Define individual or team access. Roles: Grant temporary permissions for AWS services or federated identities. Policies: JSON documents that define permissions (allow or deny actions). Access Keys and MFA: Enable secure authentication. IAM Identity Center (SSO): Centralized access for enterprise users. \ud83e\udde0 Tip: Always apply least privilege , use IAM roles instead of long-term keys, and enable MFA for all accounts.","title":"\ud83d\udd27 Core Features"},{"location":"cloud-practitioner/module-9/m9_sec6/#network-security","text":"AWS networking services enable you to secure data traffic and isolate resources . Service / Feature Purpose Amazon VPC Create isolated virtual networks. Security Groups Instance-level virtual firewalls. Network ACLs (NACLs) Subnet-level traffic filtering. VPC Peering / PrivateLink Secure, private communication between VPCs or services. AWS Shield Managed DDoS protection. AWS WAF (Web Application Firewall) Protects against web exploits and attacks. \ud83e\udde0 Example: Combine VPC , Security Groups , and WAF to secure your public-facing web applications.","title":"\ud83c\udf10 Network Security"},{"location":"cloud-practitioner/module-9/m9_sec6/#data-protection-and-encryption","text":"AWS provides encryption at rest and in transit for all major services. Service Encryption Options Managed By Amazon S3 SSE-S3, SSE-KMS, SSE-C, client-side. Customer / AWS. Amazon EBS / RDS / DynamoDB KMS-managed encryption. Customer. AWS KMS (Key Management Service) Centralized key management with audit logs. Customer. AWS Certificate Manager (ACM) Provision and manage SSL/TLS certificates. AWS. \ud83e\udde0 Tip: Use AWS KMS for unified key management and ACM for secure HTTPS endpoints.","title":"\ud83e\uddf1 Data Protection and Encryption"},{"location":"cloud-practitioner/module-9/m9_sec6/#security-monitoring-and-threat-detection","text":"Service Function AWS CloudTrail Logs all API calls and user actions. AWS Config Tracks configuration changes and compliance. Amazon CloudWatch Monitors performance metrics and sets alerts. Amazon GuardDuty Detects malicious activity and anomalies. AWS Security Hub Centralized security visibility and best practice checks. AWS Detective Investigates security findings with context. \ud83e\udde0 Best Practice: Enable GuardDuty , Config , and CloudTrail in all accounts by default.","title":"\ud83e\uddee Security Monitoring and Threat Detection"},{"location":"cloud-practitioner/module-9/m9_sec6/#compliance-and-governance","text":"AWS adheres to numerous global compliance standards and frameworks, helping customers meet their own regulatory obligations. Framework / Standard Purpose ISO 27001 / 27017 / 27018 Information security management and cloud privacy. SOC 1, SOC 2, SOC 3 Internal control and security reporting. PCI DSS Secure handling of payment card data. HIPAA Protects healthcare information. FedRAMP Federal government compliance in the U.S. GDPR EU data privacy regulation. \ud83e\udde0 Tip: Use AWS Artifact to download compliance reports and certifications.","title":"\ud83d\udcdc Compliance and Governance"},{"location":"cloud-practitioner/module-9/m9_sec6/#automation-and-security-at-scale","text":"Automation ensures consistent and repeatable security configurations across accounts and Regions.","title":"\u2699\ufe0f Automation and Security at Scale"},{"location":"cloud-practitioner/module-9/m9_sec6/#aws-tools-for-security-automation","text":"AWS CloudFormation \u2013 Deploy secure infrastructure as code. AWS Systems Manager (SSM) \u2013 Patch and configure systems automatically. AWS Organizations & SCPs \u2013 Enforce policies across multiple accounts. AWS Control Tower \u2013 Automate account setup and guardrails. \ud83e\udde0 Example: Automatically deploy a compliant landing zone using Control Tower with predefined security guardrails .","title":"AWS Tools for Security Automation"},{"location":"cloud-practitioner/module-9/m9_sec6/#key-takeaways","text":"AWS and customers share security responsibilities \u2014 AWS secures the cloud , you secure your data and configurations . Implement defense in depth with IAM, encryption, and network isolation. Automate security controls and auditing using Config , GuardDuty , CloudTrail , and Security Hub . Use KMS and ACM for encryption and certificate management. Design architectures that meet compliance standards (ISO, SOC, PCI, HIPAA, GDPR). Build security into every stage of development \u2014 automate wherever possible. Always apply the principle of least privilege and enable multi-factor authentication (MFA) for all users.","title":"\ud83e\udde0 Key Takeaways"}]}